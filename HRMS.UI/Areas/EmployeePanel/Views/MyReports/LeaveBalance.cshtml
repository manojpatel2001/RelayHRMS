@inject IConfiguration Configuration
@{
    ViewData["Title"] = "Employee Panel";
    Layout = "~/Areas/EmployeePanel/Views/Shared/_EmployeeLayout.cshtml";
    string baseUrl = Configuration["BaseUrlSettings:baseUrl"];
    var uri = new Uri(baseUrl);
    string baseDomainUrl = $"{uri.Scheme}://{uri.Host}:{uri.Port}";
    string UIBaseUrl = Configuration["UIBaseUrlSettings:baseUrl"];
}
<title>Search Panel</title>

<!-- jQuery + Bootstrap + SweetAlert -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<style>

    body, html {
        height: 100%;
        margin: 0;
        padding: 0;
    }

    .form-section {
        padding: 15px;
        border: 1px solid #ccc;
    }

    .btn-custom {
        background-color: #3e4b6d;
        color: white;
        border: none;
        padding: 4px 12px;
        font-size: 13px;
        font-weight: 600;
        border-radius: 4px;
        transition: none;
        box-shadow: none;
    }

        .btn-custom:hover,
        .btn-custom:focus,
        .btn-custom:active {
            background-color: #3e4b6d;
            color: white;
            outline: none;
            box-shadow: none;
        }

    .search-panel-wrapper {
        max-width: 100%;
        margin: auto;
    }

    .search-panel-container {
        background-color: #3e4b6d;
        padding: 6px 15px;
        border-radius: 6px;
        margin-bottom: 15px;
    }

    .search-panel-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .search-heading {
        font-size: 15px;
        color: white;
        margin: 0;
    }

    .btn-add {
        background-color: orange;
        color: white;
        font-size: 14px;
        padding: 6px 15px;
        border: none;
        border-radius: 4px;
    }

    .form-label {
        font-size: 13px;
        font-weight: 500;
        margin-bottom: 4px;
    }


    .form-control-sm, .form-select-sm {
        height: calc(1.5em + .5rem + 2px);
        font-size: 0.875rem;
        padding: .25rem .5rem;
    }

    /* Fixed container styles for full width */
    .container {
        width: 100% !important;
        max-width: 100% !important;
        min-height: 500px;
        padding: 10px;
        box-sizing: border-box;
        margin: 0;
    }

    /* Grid container specific styles */
    .grid-container {
        width: 100%;
        margin: 0;
        padding: 0;
    }

    /* DevExtreme grid full width fix */
    #leaveBalanceGrid {
        width: 100% !important;
    }

        #leaveBalanceGrid .dx-datagrid {
            width: 100% !important;
        }

        #leaveBalanceGrid .dx-datagrid-headers {
            width: 100% !important;
        }

        #leaveBalanceGrid .dx-datagrid-rowsview {
            width: 100% !important;
        }

    /* Remove any fixed widths that might constrain the grid */
    .search-panel-wrapper + .container {
        flex: 1;
        display: flex;
        flex-direction: column;
    }
</style>

<!-- Search Panel Header -->
<div class="search-panel-wrapper">
    <div class="search-panel-container">
        <div class="search-panel-row">
            <div class="search-heading">Leave Balance</div>
        </div>
    </div>
</div>

<div class="form-section">

    <div class="row justify-content-center mb-3">
        <div class="col-md-5 d-flex align-items-center">
            <label for="fromdate" class="form-label mb-0 me-2">From Date<span class="text-danger">*</span>:</label>
            <div>
                <input type="date" class="form-control form-control-sm" id="fromdate" style="width: 180px;" />
                <span id="spnfromdate" style="color:red; display:none;">Please Select From Date</span>
            </div>
        </div>
        <div class="col-md-5 d-flex align-items-center">
            <label for="todate" class="form-label mb-0 me-2">To Date<span class="text-danger">*</span>:</label>
            <div>
                <input type="date" class="form-control form-control-sm" id="todate" style="width: 180px;" />
                <span id="spntodate" style="color:red; display:none;">Please Select To Date</span>
            </div>
        </div>
    </div>

    <!-- Row 2: Leave Status & Buttons -->
    <div class="row justify-content-center mb-3">
        <!-- Leave Status -->
        <div class="col-md-5 d-flex align-items-center">
            <label for="statusid" class="form-label mb-0 me-2">
                Leave Type<span class="text-danger">*</span>:
            </label>
            <div>
                <select class="form-select form-select-sm" id="statusid" style="width: 180px;">
                    <option>Select All</option>
                    <option value="Half Leave">Half Day</option>
                    <option value="LWP">LWP</option>
                    <option value="Comp Off Leave">Comp Off Leave</option>
                    <option value="Privilege Leave">Privilege Leave</option>
                </select>
                <span id="spnstatusid" style="color:red; display:none;">Please Select Status</span>
            </div>
        </div>

        <!-- Buttons -->
        <div class="col-md-5 d-flex align-items-center">
            <button class="btn btn-custom me-2" id="btnGo">Go</button>
            <button class="btn btn-custom me-2" id="btnClear">Clear</button>
            <button type="button" class="btn btn-custom"
                    onclick="window.location.href='@Url.Action("Index", "MyReports")'">
                Back
            </button>
        </div>
    </div>

</div>


<!-- EMPLOYEE REGULARIZATION Heading -->

<div class="search-panel-wrapper">
    <div class="search-panel-container">
        <div class="search-panel-row">
            <div class="search-heading">Leave Balance</div>
        </div>
    </div>
</div>

<!-- Delete Button + Grid Container -->
<div class="container mt-3">

    <div id="grid-loader"
         class="grid-loader justify-content-center align-items-center flex-column"
         style="display: none; position: fixed; top: 0; left: 0; width: 100vw; height: 100vh;
            background: rgba(255, 255, 255, 0.6); backdrop-filter: blur(3px); z-index: 9999;">

        <img src="@baseDomainUrl/loders/loder.png"
             class="grid-logo-spinner"
             style="width: 40px; height: 40px; animation: spin 1s linear infinite;" />

        <div class="grid-loading-text text-dark " style="font-size: 16px;">Loading...</div>
    </div>

    <!-- Grid Container with full width -->
    <div class="grid-container">
        <div id="leaveBalanceGrid"></div>
    </div>
</div>

<script>

       const savedCompany = localStorage.getItem('selectedCompany');
               var companyDetails = JSON.parse(savedCompany);
               const CompanyId=companyDetails.CompanyId;
               const EmployeeId=localStorage.getItem('EmployeeId');
               const Token=localStorage.getItem("authToken");



          async function showLoder(){
          $('#grid-loader').addClass('d-flex').show();
        }
        async function hideLoder(){
                $('#grid-loader').removeClass('d-flex').hide();
        }


    function loadGrid(data) {

        $("#leaveBalanceGrid").dxDataGrid({
            dataSource: data,
            showBorders: true,
            height: "auto",
            width: "100%", // Ensure full width
            columnAutoWidth: true, // Auto adjust column widths
            scrolling: {
                mode: "virtual"
            },
            paging: {
                enabled: true,
                pageSize: 10
            },
            pager: {
                showPageSizeSelector: true,
                allowedPageSizes: [5, 10, 20]
            },
            columnResizingMode: 'widget', // Allow column resizing
            allowColumnResizing: true,
            columns: [
                {
                    dataField: "companyName",
                    caption: "Company Name",
                    minWidth: 150
                },
                {
                    dataField: "employeeCode",
                    caption: "Code",
                    minWidth: 80
                },
                {
                    dataField: "fullName",
                    caption: "Employee Name",
                    minWidth: 150
                },
                {
                    dataField: "leaveType",
                    caption: "Leave Name",
                    minWidth: 120
                },
                {
                    dataField: "leaveValue",
                    caption: "Opening",
                    minWidth: 80
                }
            ]
        });

    }


    $('#btnGo').on('click', function () {

        // Get values
        var txtformdate = $("#fromdate").val();
        var txttodate = $("#todate").val();
        var txtStatus = $("#statusid").val();

        // Flag to track validation
        var isValid = true;

        // Validate From Date
        if (txtformdate === "") {
            $("#spnfromdate").show();
            isValid = false;
        } else {
            $("#spnfromdate").hide();
        }

        // Validate To Date
        if (txttodate === "") {
            $("#spntodate").show();
            isValid = false;
        } else {
            $("#spntodate").hide();
        }

        // Validate if From Date is less than or equal to To Date
        if (txtformdate && txttodate && new Date(txtformdate) > new Date(txttodate)) {
            $("#spntodate").text("To Date must be greater than or equal to From Date").show();
            isValid = false;
        }

        // Validate Status
        if (txtStatus === "" || txtStatus === "SELECT") {
            $("#spnstatusid").show();
            isValid = false;
        } else {
            $("#spnstatusid").hide();
        }

        // If validation fails, stop here
        if (!isValid) {
            hideLoder();
            return;
        }

        // If all validations pass, proceed with AJAX call
        showLoder();
        let model = {
            StartDate: txtformdate,
            EndDate: txttodate,
            Status: txtStatus,
            Empid: EmployeeId,
            CompId: CompanyId
        };

        $.ajax({
            url: '@(baseDomainUrl + "/api/LeaveApplication/GetLeaveBalance")',
            type: 'POST',
            data: JSON.stringify(model),
            contentType: 'application/json',
            success: function (res) {
                debugger;
                console.log("data", res);
                if (res.isSuccess) {
                    loadGrid(res.data);
                } else {
                    round_error_noti(res.responseMessage || 'No Data');
                }
            },
            error: function (xhr) {
                round_error_noti(xhr.responseJSON?.responseMessage || 'An error occurred. Please try again.');
            },
            complete: function () {
                hideLoder();
            }
        });
    });




      $("#btnClear").click(function () {
        // Reset form

        $('#fromdate').val('');
        $('#todate').val('');
        $('#statusid').val();
        $("#leaveBalanceGrid").dxDataGrid("dispose");
        $("#leaveBalanceGrid").dxDataGrid({
            dataSource: [],
            showBorders: true,
            width: "100%"
        });
             $("#spnfromdate").hide();
             $("#spntodate").hide();
             $("#spnstatusid").hide();
    });



</script>