@{
    ViewData["Title"] = "Employee Panel";
    Layout = "~/Areas/EmployeePanel/Views/Shared/_EmployeeLayout.cshtml";
    string baseUrl = ViewBag.BaseUrl;
    string apiBase = ViewBag.BaseUrlAPI;
}

<!-- CSS -->

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<style>
   

    
    .btn-custom {
        background-color: #3e4b6d;
        color: white;
        font-weight: 600;
        padding: 4px 12px;
        border: none;
        border-radius: 4px;
    }

        .btn-custom:hover {
            background-color: #2c3a57;
        }

    .search-panel-container {
        background-color: #3e4b6d;
        padding: 6px 15px;
        border-radius: 6px;
        margin-bottom: 15px;
    }

    .search-panel-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .search-heading {
        font-size: 15px;
        color: white;
        margin: 0;
    }

    

    .text-center-cell {
        text-align: center;
    }
</style>

<!-- Search Panel -->
<div class="search-panel-wrapper">
    <div class="search-panel-container">
        <div class="search-panel-row">
            <div class="search-heading">Search Panel</div>
        </div>
    </div>
</div>

<!-- Filters -->
<div class="form-section">
    <div class="row justify-content-center mb-3">
        <div class="col-md-4 d-flex align-items-center">
            <label class="form-label mb-2 me-2" style="width: 120px;">Month:</label>
            <select id="dropdownmonth" class="form-control form-control-sm">
                <option value="" disabled>Select Month</option>
                @for (int i = 1; i <= 12; i++)
                {
                    var selected = (i == DateTime.Now.Month) ? "selected" : "";
                    <option value="@i" @selected>@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(i)</option>
                }
            </select>
        </div>
        <div class="col-md-4 d-flex align-items-center">
            <label class="form-label mb-2 me-2" style="width: 120px;">Year:</label>
            <select id="dropdownyear" class="form-control form-control-sm">
                @for (int y = 2024; y <= DateTime.Now.Year; y++)
                {
                    var selected = (y == DateTime.Now.Year) ? "selected" : "";
                    <option value="@y" @selected>@y</option>
                }
            </select>
        </div>
        <div class="col-md-4 d-flex align-items-center">
        <div class="col d-flex align-items-center justify-content-center flex-wrap gap-3">
                <button type="button" class="search-panel-container  search-heading btn-sm" id="btnGo">Go</button>
        </div>
        </div>
    </div>

   

    <!-- In/Out Heading -->
    <div class="search-panel-wrapper">
        <div class="search-panel-container">
            <div class="search-panel-row">
                <div class="search-heading">Employee In Out:</div>
            </div>
        </div>
    </div>
</div>

<!-- Tab Layout -->
<div class="form-section">
    <div class="container mt-3">
        <ul class="nav nav-tabs" id="attendanceTabs" role="tablist">
            <li class="nav-item">
                <a class="nav-link active p-2" id="firstLast-tab" data-bs-toggle="tab" href="#firstLast" role="tab">First In and Last Out</a>
            </li>
            <li class="nav-item">
                <a class="nav-link p-2" id="multiplePunches-tab" data-bs-toggle="tab" href="#multiplePunches" role="tab">Multiple Punches</a>
            </li>
        </ul>
    </div>

    <div class="container mt-3">
        <div class="d-flex justify-content-start mb-2 gap-2" id="actionButtons" style="display: none;">
            <button type="button" id="btnInOut" class="search-panel-container  search-heading btn-sm ">In/Out</button>
        </div>

        <div class="tab-content">
            <div class="tab-pane fade show active" id="firstLast" role="tabpanel">
                <div id="tblFirstLast">
                    <div id="attendanceGridFirst"></div>
                </div>
            </div>
            <div class="tab-pane fade" id="multiplePunches" role="tabpanel">
                <div id="tblMultiplePunches">
                    <div id="attendanceGridWrapper" >
                    <div id="attendanceGridMultiple"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- JavaScript -->
<script>
    const apiBase = '@apiBase';
    const empid = parseInt(localStorage.getItem("EmployeeId"));
         const savedCompany = localStorage.getItem('selectedCompany');
    const companyDetails = JSON.parse(savedCompany || '{}');
    const Compid = parseInt(companyDetails.CompanyId);
    const Token=localStorage.getItem("authToken");

    function convertUTCtoIST(utcInput) {
        const utcDate = new Date(utcInput);
        const istOffsetMs = 5.5 * 60 * 60 * 1000; // IST is UTC+5:30
        const istDate = new Date(utcDate.getTime() + istOffsetMs);
        return istDate;
    }


    $(document).ready(function () {
       reloadGrids();

        $('#btnInOut').click(function () {
             const utcNow = new Date()
             console.log(utcNow);
            const payload = {
                EmployeeId: empid,
                PunchDateTime: convertUTCtoIST(utcNow),
                CreatedBy: empid.toString(),
                Mode: "Web",
                CompanyId:Compid,
            };
           

            $.ajax({
                url: apiBase + '/EmployeeInOut/CreateEmpINOut',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(payload),
                success: function (res) {
                    Swal.fire({ icon: 'success', title: res.responseMessage || '✅ In time saved.', timer: 2000 });
                    reloadGrids();
                },
                error: () => alert('❌ Error saving In Time.')
            });
        });
            



     
        $('#btnGo').click(function () {
            const month = $('#dropdownmonth').val();
            const year = $('#dropdownyear').val();
            if (!month || !year) return alert("Please select Month and Year");

            const tab = $(".nav-link.active").attr("href");
            if (tab === "#firstLast") loadFirstLast(empid, Compid, month, year) ;
            else if (tab === "#multiplePunches") loadMultiple(empid, Compid, month, year) ;
        });

        $('a[data-bs-toggle="tab"]').on('shown.bs.tab',async  function (e) {
            const target = $(e.target).attr("href");
            const month = $('#dropdownmonth').val();
            const year = $('#dropdownyear').val();
            if (!month || !year) return;

            if (target === "#firstLast") 
            {
                await loadFirstLast(empid, Compid, month, year);
            }
            else if (target === "#multiplePunches") 
            {
                await loadMultiple(empid, Compid, month, year);
            }
        });
    });

    function reloadGrids() {
        const month = $('#dropdownmonth').val() || (new Date().getMonth() + 1);
        const year = $('#dropdownyear').val() || new Date().getFullYear();
        loadFirstLast(empid,Compid, month, year);
        //loadMultiple(empid, month, year);
    }


     async function loadFirstLast(empid, Compid, month, year) {
        try {
            const response = await fetch(`${apiBase}/EmployeeInOut/GetMonthlyAttendanceDetails`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json',
                    'Authorization': `Bearer ${Token}` // optional, if needed
                },
                body: JSON.stringify({
                    employeeId: empid,
                    companyId: Compid,
                    monthNumber: month,
                    year: year
                })
            });

            if (!response.ok) {
                throw new Error(`HTTP error! Status: ${response.status}`);
            }

            const data = await response.json();
            console.log(data);

            if (data.isSuccess && Array.isArray(data.data)) {
                $('#attendanceGridFirst').dxDataGrid({
                    dataSource: data.data,
                    rowHeight: 40,
                    width: '100%',
                       columns: [
                            { dataField: 'employeeCode', caption: 'Employee Code' },
                            { dataField: 'fullName', caption: 'Full Name' },
                            { dataField: 'branchName', caption: 'Branch' },
                            { dataField: 'companyName', caption: 'Company Name' },
                            {
                                dataField: 'shiftDate',
                                caption: 'Shift Date',
                                dataType: 'date',
                                format: 'dd-MM-yyyy'
                            },
                            {
                                dataField: 'inTime',
                                caption: 'In Time'
                                
                            },
                            {
                                dataField: 'outTime',
                                caption: 'Out Time'
                                
                            },
                            {
                                dataField: 'workingHours',
                                caption: 'Working Hours',
                                dataType: 'number',
                                format: '#0.00',
                                alignment: 'left'
                            },
                            { dataField: 'attendanceStatus', caption: 'Attendance Status' },
                            {
                                dataField: 'salaryDay',
                                caption: 'Salary Day',
                                dataType: 'number',
                                format: '#0.0',
                                alignment: 'left'

                            }
                           
                        ],
                    columnsAutoWidth: false,
                    wordWrapEnabled: false,
                    showBorders: true,
                    rowAlternationEnabled: false,
                    grouping: { autoExpandAll: false },
                    paging: { pageSize: 10 },
                    pager: { showPageSizeSelector: true, allowedPageSizes: [10, 25, 50, 100] },
                    headerFilter: { visible: false },
                    filterRow: { visible: false, applyFilter: "auto" },
                    allowColumnResizing: true,
                    groupPanel: { visible: false },
                    searchPanel: { visible: true, width: 240, placeholder: "Search..." },
                    columnFixing: { enabled: false },
                    scrolling: {
                        mode: "standard",
                        useNative: false,
                        scrollByContent: true,
                        scrollByThumb: true
                    },
                    onContentReady(e) {
                        $('#rowCountEmployee').html('Total Records: ' + e.component.totalCount());
                    }
                });
            } else {
                $('#attendanceGridFirst').html('<div class="text-center text-muted">No records found.</div>');
            }
        } catch (error) {
            console.error('❌ Failed to load First In/Out records:', error);
            round_error_noti("❌ Failed to load First In/Out records.");
        }
    }

    async function loadMultiple(empid, Compid, month, year) {
        try {
            const response = await fetch(`${apiBase}/EmployeeInOut/GetMonthlyAttendanceLog`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json',
                    'Authorization': `Bearer ${Token}` // optional, if needed
                },
                body: JSON.stringify({
                    employeeId: empid,
                    companyId: Compid,
                    monthNumber: month,
                    year: year
                })
            });

            if (!response.ok) {
                round_error_noti('Something went wrong!');
            }

            const data = await response.json();
            console.log(data);

            if (data.isSuccess && Array.isArray(data.data)) {
                $('#attendanceGridMultiple').dxDataGrid({
                    dataSource: data.data,
                    rowHeight: 40,
                    width: '100%',
                       columns: [
                               { dataField: 'employeeCode', caption: 'Employee Code' },
                                { dataField: 'fullName', caption: 'Full Name' },
                                { dataField: 'branchName', caption: 'Branch' },
                                { dataField: 'companyName', caption: 'Company Name' },
                                {
                                    dataField: 'punchDateTime',
                                    caption: 'Punch Date',
                                    dataType: 'date',
                                    format: 'dd-MM-yyyy',
                                    alignment: 'left'
                                },
                                // {
                                //     dataField: 'punchDateTime',
                                //     caption: 'Punch Time',
                                //     dataType: 'datetime',
                                //     customizeText: function(cellInfo) {
                                //         const date = new Date(cellInfo.value);
                                //         return date.toLocaleTimeString([], {
                                //             hour: '2-digit',
                                //             minute: '2-digit',
                                //             hour12: true // 👈 shows AM/PM
                                //         });
                                //     },
                                //     alignment: 'left'
                                // },
                                {
                                    dataField: 'mode',
                                    caption: 'Mode',
                                    alignment: 'left'
                                }

                        ],
                    columnsAutoWidth: false,
                    wordWrapEnabled: false,
                    showBorders: true,
                    rowAlternationEnabled: false,
                    grouping: { autoExpandAll: false },
                    paging: { pageSize: 10 },
                    pager: { showPageSizeSelector: true, allowedPageSizes: [10, 25, 50, 100] },
                    headerFilter: { visible: false },
                    filterRow: { visible: false, applyFilter: "auto" },
                    allowColumnResizing: true,
                    groupPanel: { visible: false },
                    searchPanel: { visible: true, width: 240, placeholder: "Search..." },
                    columnFixing: { enabled: false },
                    scrolling: {
                        mode: "standard",
                        useNative: false,
                        scrollByContent: true,
                        scrollByThumb: true
                    },
                    onContentReady(e) {
                        $('#rowCountEmployee').html('Total Records: ' + e.component.totalCount());
                    }
                });
            } else {
                $('#attendanceGridFirst').html('<div class="text-center text-muted">No records found.</div>');
            }
        } catch (error) {
            console.error('❌ Failed to load First In/Out records:', error);
            alert("❌ Failed to load First In/Out records.");
        }
    }







    // function loadMultiple(empid, month, year) {
    //     $.post(apiBase + "/EmployeeInOut/MultipleOut",
    //         { EmpId: empid, Month: month, Year: year },
    //         function (data) {
    //             if (data.isSuccess && data.data?.length) {
    //                 renderTableMultiple(data.data);
    //             } else {
    //                 $('#attendanceGridMultiple').html('<div class="text-center text-muted">No records found.</div>');
    //             }
    //         }
    //     ).fail(() => alert("❌ Failed to load Multiple Punches records."));
    // }


    function renderTableFirst(data) {
        $("#attendanceGridFirst").dxDataGrid({
            dataSource: data,
            //keyExpr: "comp_Off_Detailsid",
            showBorders: true,
            columnAutoWidth: true,
               height: "auto",
            // selection: {
            //     mode: "multiple",
            //     showCheckBoxesMode: "always"
            // },
            // onSelectionChanged: function (e) {
            //     $("#actionButtons").toggle(e.selectedRowKeys.length > 0);
            // },
            columns: [

                 { dataField: "employeeCode", caption: "EmployeeCode" ,cssClass: "text-center-cell"},
                { dataField: "fullName", caption: "EmployeeName" ,cssClass: "text-center-cell"},
                { dataField: "branchName", caption: "BranchName" ,cssClass: "text-center-cell"},
                { dataField: "for_Date", caption: "Date",dataType: "date",format: "dd-MM-yyyy",cssClass: "text-center-cell"},
                { dataField: "day_Name", caption: "Day" ,cssClass: "text-center-cell"},
                { dataField: "in_Time", caption: "In Time",cssClass: "text-center-cell" },
                { dataField: "out_Time", caption: "Out Time",cssClass: "text-center-cell" },
                { dataField: "duration", caption: "Duration" ,cssClass: "text-center-cell"}
            ]
              ,   onContentReady: function (e) {
            const rowCount = data.length;
            const rowHeight = 40; // approx row height in pixels
            const headerHeight = 40;
            const totalHeight = headerHeight + (rowCount * rowHeight);
            e.component.option("height", totalHeight);
        }
        });
    }


    function renderTableMultiple(data) {
        $("#attendanceGridMultiple").dxDataGrid({
            dataSource: data,
            //keyExpr: "comp_Off_Detailsid",
            showBorders: true,
                columnAutoWidth: true,
        height: "auto", 
        paging: {
            pageSize: 15 
        },
        pager: {
            showPageSizeSelector: true,
            allowedPageSizes: [15, 30, 45],
            showInfo: true
        },
           scrolling: {
            mode: "standard",     
            useNative: true     
        },
            // selection: {
            //     mode: "multiple",
            //     showCheckBoxesMode: "always"
            // },
            // onSelectionChanged: function (e) {
            //     $("#actionButtons").toggle(e.selectedRowKeys.length > 0);
            // },
            columns: [
                   { dataField: "employeeCode", caption: "EmployeeCode" ,cssClass: "text-center-cell"},
                 { dataField: "employeeName", caption: "EmployeeName" ,cssClass: "text-center-cell"},
                { dataField: "branchName", caption: "BranchName" ,cssClass: "text-center-cell"},
                { dataField: "for_Date", caption: "Date",format: "dd-MM-yyyy",dataType: "date",cssClass: "text-center-cell"},
                { dataField: "day_Name", caption: "Day",cssClass: "text-center-cell" },
                { dataField: "in_Time", caption: "In Time",cssClass: "text-center-cell" },
                { dataField: "out_Time", caption: "Out Time",cssClass: "text-center-cell" },
                { dataField: "duration", caption: "Duration",cssClass: "text-center-cell" }
            ]

        });
    }


</script>


