@{
    ViewData["Title"] = "Employee Panel";
    Layout = "~/Areas/EmployeePanel/Views/Shared/_EmployeeLayout.cshtml";
    string baseUrl = ViewBag.BaseUrl;
    string apiBase = ViewBag.BaseUrlAPI;
}

<!-- CSS -->
<link href="~/commoncss.css" rel="stylesheet" />
<!-- jQuery + Bootstrap + SweetAlert -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #ffffff;
    }

    .form-section {
        padding: 15px;
        border: 1px solid #ccc;
    }

    .btn-custom {
        background-color: #3e4b6d;
        color: white;
        font-weight: 600;
        padding: 4px 12px;
        border: none;
        border-radius: 4px;
    }

        .btn-custom:hover {
            background-color: #2c3a57;
        }

    .search-panel-container {
        background-color: #3e4b6d;
        padding: 6px 15px;
        border-radius: 6px;
        margin-bottom: 15px;
    }

    .search-panel-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .search-heading {
        font-size: 15px;
        color: white;
        margin: 0;
    }

    .form-label {
        font-size: 13px;
        font-weight: 500;
        margin-bottom: 4px;
    }

    .form-control-sm, .form-select-sm {
        height: calc(1.5em + .5rem + 2px);
        font-size: 0.875rem;
        padding: .25rem .5rem;
    }

    .text-center-cell {
        text-align: center;
    }
</style>

<!-- Search Panel -->
<div class="search-panel-wrapper">
    <div class="search-panel-container">
        <div class="search-panel-row">
            <div class="search-heading">Search Panel</div>
        </div>
    </div>
</div>

<!-- Filters -->
<div class="form-section">
    <div class="row justify-content-center mb-3">
        <div class="col-md-4 d-flex align-items-center">
            <label class="form-label mb-0 me-2" style="width: 120px;">Month:</label>
            <select id="dropdownmonth" class="form-control form-control-sm">
                <option value="" disabled>Select Month</option>
                @for (int i = 1; i <= 12; i++)
                {
                    var selected = (i == DateTime.Now.Month) ? "selected" : "";
                    <option value="@i" @selected>@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(i)</option>
                }
            </select>
        </div>
        <div class="col-md-4 d-flex align-items-center">
            <label class="form-label mb-0 me-2" style="width: 120px;">Year:</label>
            <select id="dropdownyear" class="form-control form-control-sm">
                @for (int y = 2024; y <= 2026; y++)
                {
                    var selected = (y == DateTime.Now.Year) ? "selected" : "";
                    <option value="@y" @selected>@y</option>
                }
            </select>
        </div>
        <div class="col-md-4 d-flex align-items-center">
        <div class="col d-flex align-items-center justify-content-center flex-wrap gap-3">
                <button type="button" class="search-panel-container  search-heading btn-sm" id="btnGo">Go</button>
        </div>
        </div>
    </div>

   

    <!-- In/Out Heading -->
    <div class="search-panel-wrapper">
        <div class="search-panel-container">
            <div class="search-panel-row">
                <div class="search-heading">Employee In Out:</div>
            </div>
        </div>
    </div>
</div>

<!-- Tab Layout -->
<div class="form-section">
    <div class="container mt-3">
        <ul class="nav nav-tabs" id="attendanceTabs" role="tablist">
            <li class="nav-item">
                <a class="nav-link active" id="firstLast-tab" data-bs-toggle="tab" href="#firstLast" role="tab">First In and Last Out</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="multiplePunches-tab" data-bs-toggle="tab" href="#multiplePunches" role="tab">Multiple Punches</a>
            </li>
        </ul>
    </div>

    <div class="container mt-3">
        <div class="d-flex justify-content-start mb-2 gap-2" id="actionButtons" style="display: none;">
            <button type="button" id="btnIn" class="search-panel-container  search-heading btn-sm ">In</button>
            <button type="button" id="btnOut" class="search-panel-container  search-heading btn-sm">Out</button>
        </div>

        <div class="tab-content">
            <div class="tab-pane fade show active" id="firstLast" role="tabpanel">
                <div id="tblFirstLast">
                    <div id="attendanceGridFirst"></div>
                </div>
            </div>
            <div class="tab-pane fade" id="multiplePunches" role="tabpanel">
                <div id="tblMultiplePunches">
                    <div id="attendanceGridMultiple"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- JavaScript -->
<script>
    const apiBase = '@apiBase';
    const empid = parseInt(localStorage.getItem("EmployeeId"));
         const savedCompany = localStorage.getItem('selectedCompany');
    const companyDetails = JSON.parse(savedCompany || '{}');
    const Compid = parseInt(companyDetails.CompanyId);


    $(document).ready(function () {
        const now = new Date();
        const currentMonth = now.getMonth() + 1;
        const currentYear = now.getFullYear();

        loadFirstLast(empid, currentMonth, currentYear);

        $('#btnIn').click(function () {
            const istNow = new Date(new Date().toLocaleString("en-US", { timeZone: "Asia/Kolkata" }));
            const payload = {
                Emp_Id: empid,
                For_Date: formatISTtoISO(istNow).split('T')[0],
                In_Time: formatISTtoISO(istNow),
                CreatedBy: empid.toString(),
                CreatedDate: formatISTtoISO(istNow),
                Com_Id:Compid,
            };

            $.ajax({
                url: apiBase + '/EmployeeInOut/CreateEmpINOut',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(payload),
                success: function (res) {
                    Swal.fire({ icon: 'success', title: res.responseMessage || '✅ In time saved.', timer: 2000 });
                    reloadGrids();
                },
                error: () => alert('❌ Error saving In Time.')
            });
        });
            function formatISTtoISO(date) {
        const offset = 5.5 * 60 * 60 * 1000; // IST offset in milliseconds
        const istTime = new Date(date.getTime() + offset);
        return istTime.toISOString().slice(0, 19); // Trim to: yyyy-MM-ddTHH:mm:ss
    }



        $('#btnOut').click(function () {
            const istNow = new Date(new Date().toLocaleString("en-US", { timeZone: "Asia/Kolkata" }));
            const payload = {
                Emp_Id: empid,
                For_Date: formatISTtoISO(istNow).split('T')[0],
                Out_Time: formatISTtoISO(istNow),
                UpdatedBy: empid.toString()
            };

            $.ajax({
                url: apiBase + '/EmployeeInOut/UpdateEmpOutTime',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(payload),
                success: function (res) {
                    Swal.fire({ icon: 'success', title: res.responseMessage || '✅ Out time saved.', timer: 2000 });
                    reloadGrids();
                },
                error: () => alert('❌ Error saving Out Time.')
            });
        });

        $('#btnGo').click(function () {
            const month = $('#dropdownmonth').val();
            const year = $('#dropdownyear').val();
            if (!month || !year) return alert("Please select Month and Year");

            const tab = $(".nav-link.active").attr("href");
            if (tab === "#firstLast") loadFirstLast(empid, month, year);
            else if (tab === "#multiplePunches") loadMultiple(empid, month, year);
        });

        $('a[data-bs-toggle="tab"]').on('shown.bs.tab', function (e) {
            const target = $(e.target).attr("href");
            const month = $('#dropdownmonth').val();
            const year = $('#dropdownyear').val();
            if (!month || !year) return;

            if (target === "#firstLast") loadFirstLast(empid, month, year);
            else if (target === "#multiplePunches") loadMultiple(empid, month, year);
        });
    });

    function reloadGrids() {
        const month = $('#dropdownmonth').val() || (new Date().getMonth() + 1);
        const year = $('#dropdownyear').val() || new Date().getFullYear();
        loadFirstLast(empid, month, year);
        loadMultiple(empid, month, year);
    }

    function formatISTtoISO(date) {
        return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}T${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}:${String(date.getSeconds()).padStart(2, '0')}`;
    }

    function loadFirstLast(empid, month, year) {
        $.post(apiBase + "/EmployeeInOut/FirstInOut", { empid, month, year }, function (data) {
            if (data.isSuccess && data.data?.length) renderTableFirst(data.data);
            else $('#attendanceGridFirst').html('<div class="text-center text-muted">No records found.</div>');
        }).fail(() => alert("❌ Failed to load First In/Out records."));
    }

    function loadMultiple(empid, month, year) {
        $.post(apiBase + "/EmployeeInOut/MultipleOut", { empid, month, year }, function (data) {
            if (data.isSuccess && data.data?.length) renderTableMultiple(data.data);
            else $('#attendanceGridMultiple').html('<div class="text-center text-muted">No records found.</div>');
        }).fail(() => alert("❌ Failed to load Multiple Punches records."));
    }

    function renderTableFirst(data) {
        $("#attendanceGridFirst").dxDataGrid({
            dataSource: data,
            //keyExpr: "comp_Off_Detailsid",
            showBorders: true,
            columnAutoWidth: true,
               height: "auto",
            // selection: {
            //     mode: "multiple",
            //     showCheckBoxesMode: "always"
            // },
            // onSelectionChanged: function (e) {
            //     $("#actionButtons").toggle(e.selectedRowKeys.length > 0);
            // },
            columns: [
                { dataField: "for_Date", caption: "Date",dataType: "date",format: "dd-MM-yyyy",cssClass: "text-center-cell"},
                { dataField: "day_Name", caption: "Day" ,cssClass: "text-center-cell"},
                { dataField: "in_Time", caption: "In Time",cssClass: "text-center-cell" },
                { dataField: "out_Time", caption: "Out Time",cssClass: "text-center-cell" },
                { dataField: "duration", caption: "Duration" ,cssClass: "text-center-cell"}
            ]
        });
    }


    function renderTableMultiple(data) {
        $("#attendanceGridMultiple").dxDataGrid({
            dataSource: data,
            //keyExpr: "comp_Off_Detailsid",
            showBorders: true,
            columnAutoWidth: true,
               height: "auto",
            // selection: {
            //     mode: "multiple",
            //     showCheckBoxesMode: "always"
            // },
            // onSelectionChanged: function (e) {
            //     $("#actionButtons").toggle(e.selectedRowKeys.length > 0);
            // },
            columns: [
                { dataField: "for_Date", caption: "Date",format: "dd-MM-yyyy",dataType: "date",cssClass: "text-center-cell"},
                { dataField: "day_Name", caption: "Day",cssClass: "text-center-cell" },
                { dataField: "in_Time", caption: "In Time",cssClass: "text-center-cell" },
                { dataField: "out_Time", caption: "Out Time",cssClass: "text-center-cell" },
                { dataField: "duration", caption: "Duration",cssClass: "text-center-cell" }
            ]
        });
    }


</script>


