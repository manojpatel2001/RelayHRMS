@inject IConfiguration Configuration
@{
    Layout = null;
    string baseUrl = Configuration["BaseUrlSettings:baseUrl"];
    string UIBaseUrlLayout = Configuration["UIBaseUrlSettings:baseUrl"];
    var uriAPI = new Uri(baseUrl);
    string baseAPIDomainUrl = $"{uriAPI.Scheme}://{uriAPI.Host}:{uriAPI.Port}";

}

<style>
    body {
        background-color: #ffffff !important;
    }

    .form-label {
        font-size: 13px;
        font-weight: 500;
        margin-bottom: 5px;
    }

    .form-control,
    .form-select {
        font-size: 13px;
        padding: 4px 10px;
        height: 32px;
        width: 240px;
        max-width: 100%;
    }

    .row.gutter-tight > [class*='col-'] {
        padding-left: 10px;
        padding-right: 10px;
        margin-bottom: 14px;
        display: flex;
        flex-direction: column;
        align-items: flex-start;
    }

    .btn-custom {
        background-color: #3e4b6d;
        color: white;
        border: none;
        padding: 4px 12px;
        font-size: 13px;
        font-weight: 600;
        border-radius: 4px;
        transition: none;
        box-shadow: none;
    }

        .btn-custom:hover,
        .btn-custom:focus,
        .btn-custom:active {
            background-color: #3e4b6d;
            color: white;
            outline: none;
            box-shadow: none;
        }

    .back-btn {
        float: right;
        margin-top: 20px;
        margin-right: 40px;
    }

    .dx-editor-cell .dx-link.dx-link-cancel {
        display: none !important;
    }

    .flatpickr-time {
        font-size: 12px !important;
    }

        .flatpickr-time input {
            height: 24px !important;
            font-size: 12px !important;
        }

    .short-field {
        width: 100px !important;
    }

    .medium-field {
        width: 180px !important;
    }

    .field-error {
        font-size: 12px;
        margin-top: 2px;
    }

    .swal-small {
        font-size: 14px;
        padding: 10px;
    }

    .myGrid, .myCard {
        width: 100% !important;
        max-width: 100% !important;
        overflow-x: auto;
    }

    #attendanceGrid {
        width: 100% !important;
        max-width: 100% !important;
        overflow-y: hidden !important;
        overflow-x: auto !important;
    }

    .form-section {
        max-width: 100% !important;
        margin-top: 0;
        padding: 20px;
        border: 1px solid #ddd;
        border-radius: 6px;
        background-color: #fff;
    }

    .section-header {
        background-color: #3e4b6d;
        color: #fff;
        font-weight: bold;
        padding: 10px 20px;
        border-top-left-radius: 6px;
        border-top-right-radius: 6px;
        margin: 0 auto;
        max-width: 100%;
    }

    #attendanceGrid .dx-scrollbar-vertical {
        display: none !important;
    }

    #attendanceGrid .dx-scrollbar-horizontal {
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    #attendanceGrid:hover .dx-scrollbar-horizontal {
        opacity: 1;
    }

    #attendanceGrid .dx-scrollable-scroll,
    #attendanceGrid ::-webkit-scrollbar {
        width: 6px;
        height: 6px;
    }

    #attendanceGrid ::-webkit-scrollbar-thumb {
        background-color: #999;
        border-radius: 3px;
    }

    #attendanceGrid ::-webkit-scrollbar-track {
        background-color: #f0f0f0;
    }

    #attendanceGrid {
        scrollbar-width: thin;
        scrollbar-color: #999 #f0f0f0;
    }

    .checkbox-container {
        display: flex;
        align-items: center;
        margin-bottom: 15px;
    }

        .checkbox-container input[type="checkbox"] {
            margin-right: 8px;
            transform: scale(1.2);
        }

    .date-field {
        width: 150px !important;
    }
</style>

<!-- Skills-->

<div id="form-section-area">
    <div id="Skill-form" class="card p-3 form-section">
        <div class="form-heading">Skills</div>

        <div class="form-row">
            <!-- Single Row with All Fields -->
            <div class="row mb-3 g-3">
                <!-- Skills -->
                <div class="col-md-4 d-flex align-items-start">
                    <label for="ddlSkill" class="me-2 mb-0" style="white-space: nowrap;">
                        Skill <span class="text-danger">*</span> :
                    </label>
                    <select id="ddlSkill" class="form-select form-select-sm" style="width: 200px;">
                        <option value="">-- Select --</option>
                    </select>
                </div>

                <!-- Years of Experience -->
                <div class="col-md-4 d-flex align-items-start">
                    <label for="txtYearsOfExp" class="me-2 mb-0" style="white-space: nowrap;">
                        Years of Experience <span class="text-danger">*</span> :
                    </label>
                    <input type="text" id="txtYearsOfExp" class="form-control form-control-sm" style="width: 200px;">
                </div>

                <!-- Comments -->
                <div class="col-md-4 d-flex align-items-start">
                    <label for="txtSkillComments" class="form-label-fixed mb-0 me-2">Comments :</label>
                    <textarea id="txtSkillComments" class="form-control form-control-sm" rows="1" style="width: 230px;"></textarea>
                </div>
            </div>
        </div>

        <!-- Submit button -->
        <div class="text-center mb-3">
            <button type="button" class="btn btn-primary btn-sm" id="btnAddPermissionMaster">Submit</button>
        </div>

        <div class="form-heading">Skill Records</div>
    </div>
</div>


<script>
    // CompanyId ek hi baar set karo
    if (typeof window.CompanyId === "undefined") {
        const savedCompany = localStorage.getItem('selectedCompany');
        const companyDetails = JSON.parse(savedCompany);
        window.CompanyId = companyDetails.CompanyId;
    }

    // Global variable for edit mode
    let SkillId = 0;

    $('#btnAddPermissionMaster').click(function () {
        debugger;
        $('#btnAddPermissionMaster').prop("disabled", true);

        const getValueOrNull = id => {
            const val = $(id).val()?.trim();
            return val === '' ? null : val;
        };

        const skillModel = {
            SkillId: SkillId || 0,
            EmployeeId: localStorage.getItem('EmployeeId'),
            SkillName: getValueOrNull('#ddlSkill'),
            YearsOfExperience: getValueOrNull('#txtYearsOfExp'),
            Comments: getValueOrNull('#txtSkillComments'),
            CreatedBy: localStorage.getItem('UserId')
        };

        const apiConfig = {
            url: SkillId === 0
                ? '@baseUrl/EmployeeProfileSkillAPI/CreateSkill'
                : '@baseUrl/EmployeeProfileSkillAPI/UpdateEmpProfileSkill',
            method: SkillId === 0 ? 'POST' : 'PUT'
        };

        $.ajax({
            url: apiConfig.url,
            method: apiConfig.method,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem("authToken"),
                'Content-Type': 'application/json'
            },
            data: JSON.stringify(skillModel),
            success: function (response) {
                if (response.isSuccess) {
                    round_success_noti(response.responseMessage);
                    SkillId = 0; // reset after save
                    $('#Skill-form').trigger("reset");
                    // LoadSkillTable(); // agar reload karna ho to ye call karo
                } else {
                    round_error_noti(response.responseMessage);
                }
                $('#btnAddPermissionMaster').prop("disabled", false);
            },
            error: function (error) {
                console.error('Error saving skill:', error);
                round_error_noti('An error occurred while saving the skill.');
                $('#btnAddPermissionMaster').prop("disabled", false);
            }
        });
    });

    //     $( document ).ready(function() {
    //    LoadAttendanceGrid(data);
    // });



</script>
