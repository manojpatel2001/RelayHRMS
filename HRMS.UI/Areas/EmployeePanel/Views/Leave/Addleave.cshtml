@{
    ViewData["Title"] = "Employee Panel";
    Layout = "~/Areas/EmployeePanel/Views/Shared/_EmployeeLayout.cshtml";
    string baseUrl = ViewBag.BaseUrl;
    string apiBase = ViewBag.BaseUrlAPI;
}
<title>Search Panel</title>
<!-- jQuery + Bootstrap + SweetAlert -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #ffffff;
    }

    .form-section {
        padding: 15px;
        margin-bottom:15px;
        border: 1px solid #ccc;
       
    }

    .btn-custom {
        background-color: #3e4b6d;
        color: white;
        font-weight: 600;
        padding: 4px 12px;
        border: none;
        border-radius: 4px;
    }

        .btn-custom:hover {
            background-color: #2c3a57;
        }

    .search-panel-container {
        background-color: #3e4b6d;
        padding: 6px 15px;
        border-radius: 6px;
        margin-bottom: 15px;
    }

    .search-panel-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .search-heading {
        font-size: 15px;
        color: white;
        margin: 0;
    }

    .form-label {
        font-size: 13px;
        font-weight: 500;
        margin-bottom: 4px;
    }

    .form-control-sm, .form-select-sm {
        height: calc(1.5em + .5rem + 2px);
        font-size: 0.875rem;
        padding: .25rem .5rem;
    }

    .text-center-cell {
        text-align: center !important;
    }

        /* Also center any inner content */
        .text-center-cell > div {
            text-align: center !important;
        }

    .error-message {
        color: #dc3545;
        font-size: 12px;
        margin-top: 5px;
        display: none;
    }

    .is-invalid {
        border-color: #dc3545 !important;
    }
</style>
<div class="search-panel-wrapper">
    <div class="search-panel-container">
        <div class="search-panel-row">
            <div class="search-heading">Search Panel</div>
            <div class="col-auto">
                <a href='@Url.Action("LeaveApplication", "Leave", new { area = "EmployeePanel" })' class="btn btn-primary">Back</a>
            </div>
        </div>
    </div>
</div>

<div class="row">

    <div class="search-panel-wrapper">
        <div class="search-panel-container">
            <div class="search-panel-row">
                <div class="search-heading">Leave Application:</div>
            </div>
        </div>
    </div>

    <div class="col-md-7">
        <div class="form-section">

            <!-- Row 1 -->
            <div class="row mb-3">
                <div class="col-md-6">
                    <label class="form-label">Application Date:</label>
                    <input type="text" class="form-control" id="applicationDate" readonly>
                </div>
                <div class="col-md-6">
                    <label class="form-label">Employee:</label>
                    <input type="text" class="form-control" id="employedid" readonly>
                </div>
            </div>

            <!-- Row 2 -->
            <div class="row mb-3">
                <div class="col-md-6">
                    <label class="form-label">Reporting Person:</label>
                    <input type="text" class="form-control" id="repoid" readonly>
                    <input type="hidden" id="reportingManagerId" />
                </div>
                <div class="col-md-6">
                    <label class="form-label">Leave:</label>
                    <select class="form-control form-control-sm" id="Leavetypeid">
                        <option value="0">-- Select --</option>
                    </select>
                    <span class="error-message" id="leaveTypeError">Please select leave type</span>
                </div>
            </div>

            <!-- Row 3 -->
            <div class="row mb-3">
                <div class="col-md-12">
                    <label class="form-label">Application Type:</label><br />
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="leaveStatus" id="regularid" value="Regular">
                        <label class="form-check-label" for="regularid">Regular</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="leaveStatus" id="Previousmonthid" value="Previous">
                        <label class="form-check-label" for="Previousmonthid">Previous Month</label>
                    </div>
                    <span class="error-message" id="applicationTypeError">Please select application type</span>
                </div>
            </div>

            <!-- Row 4 -->
            <div class="row mb-3">
                <div class="col-md-6">
                    <label class="form-label">From Date:</label>
                    <input type="date" class="form-control" id="formdateid">
                    <span class="error-message" id="fromDateError">Please select from date</span>
                </div>
                <div class="col-md-6">
                    <label class="form-label">To Date:</label>
                    <input type="date" class="form-control" id="todateid" readonly>
                    <span class="error-message" id="toDateError">Please enter number of days first</span>
                </div>
            </div>

            <!-- Row 5 -->
            <div class="row mb-3">
                <div class="col-md-6">
                    <label class="form-label">No. of Days:</label>
                    <input type="number" class="form-control" id="nodaysid" min="0.5" step="0.5">
                    <span class="error-message" id="daysError">Invalid period! Please enter full days (1, 2, 3...) or half days (0.5, 1.5, 2.5...)</span>
                </div>
                <div class="col-md-6">
                    <label class="form-label">Responsible:</label>
                    <select class="form-control" id="responsibleid">
                        <option value="">-- Select Employee --</option>
                    </select>
                </div>
            </div>

            <!-- Row 6 -->
            <div class="row mb-3">
                <div class="col-md-12">
                    <label class="form-label">Reason:</label>
                    <textarea class="form-control" id="resonid" rows="3"></textarea>
                    <span class="error-message" id="reasonError">Please enter reason for leave</span>
                </div>
            </div>

            <!-- Buttons -->
            <div class="d-flex justify-content-end flex-wrap gap-2 mt-2">
                <button type="button" class="search-panel-container  search-heading btn-sm me-2" id="submitid">Submit</button>
                <button type="button" class="search-panel-container  search-heading btn-sm me-2" id="clearbuttonid">Clear</button>
            </div>
        </div>
    </div>


    <!-- Right: Leave Balance DevGrid -->
    <div class="col-md-5">
        <div class="form-section">
            <div class="card-header">
                <h6 class="mb-0 form-label">Leave Balance</h6>
            </div>
            <div id="Leavebalanceid" style="margin-top: 10px; max-height: 300px; overflow: auto;">Loading...</div>
            <div id="recordSummary" class="text-center mt-2 text-muted"></div>
        </div>
    </div>
</div>


<script>
    const apiBase = '@apiBase';
    const Empid = parseInt(localStorage.getItem("EmployeeId"));
    const EmployeeName = localStorage.getItem("EmployeeName");
    const savedCompany = localStorage.getItem('selectedCompany');
    const companyDetails = JSON.parse(savedCompany || '{}');
    const Compid = parseInt(companyDetails.CompanyId);

    $(document).ready(function () {
        loadSearchByOptions();

           const today = new Date();

            const day = String(today.getDate()).padStart(2, '0');
            const month = String(today.getMonth() + 1).padStart(2, '0');
            const year = today.getFullYear();

            const formattedDate = `${day}-${month}-${year}`;

            $('#applicationDate').val(formattedDate);
        $('#employedid').val(EmployeeName);

        loadReportingPerson();
        loadLeaveBalance();
        loadResponsibleDropdown();

        $('#formdateid').on('change', function () {
            $('#nodaysid').trigger('input');
        });

        // Validate number of days input
        $('#nodaysid').on('input', function () {
            const value = parseFloat($(this).val());
            const isValid = validateDays(value);

            if (!isValid && $(this).val() !== '') {
                $(this).addClass('is-invalid');
                $('#daysError').show();
                $('#todateid').val('').prop('readonly', true);
                return;
            } else {
                $(this).removeClass('is-invalid');
                $('#daysError').hide();
            }

            const fromDateStr = $('#formdateid').val();
            const noOfDays = parseFloat($(this).val());

            if (!fromDateStr || isNaN(noOfDays) || noOfDays <= 0) {
                $('#todateid').val('').prop('readonly', true);
                return;
            }

            const fromDate = new Date(fromDateStr);
            fromDate.setDate(fromDate.getDate() + noOfDays - 1);

            const yyyy = fromDate.getFullYear();
            const mm = String(fromDate.getMonth() + 1).padStart(2, '0');
            const dd = String(fromDate.getDate()).padStart(2, '0');

            $('#todateid').val(`${yyyy}-${mm}-${dd}`);
        });

        $('#submitid').on('click', function () {
            // Clear all previous errors
            $('.error-message').hide();
            $('.form-control, .form-select').removeClass('is-invalid');

            let hasError = false;

            const leaveType = $('#Leavetypeid').val();
            const applicationType = $('input[name="leaveStatus"]:checked').val();
            const noOfDays = parseFloat($('#nodaysid').val());
            const fromDate = $('#formdateid').val();
            const toDate = $('#todateid').val();
            const reason = $('#resonid').val().trim();

            // Validate days
            if (!validateDays(noOfDays)) {
                $('#nodaysid').addClass('is-invalid');
                $('#daysError').show();
                hasError = true;
            }

            // Validate leave type
            if (leaveType === "0") {
                $('#Leavetypeid').addClass('is-invalid');
                $('#leaveTypeError').show();
                hasError = true;
            }

            // Validate application type
            if (!applicationType) {
                $('#applicationTypeError').show();
                hasError = true;
            }

            // Validate from date
            if (!fromDate) {
                $('#formdateid').addClass('is-invalid');
                $('#fromDateError').show();
                hasError = true;
            }

            // Validate to date
            if (!toDate) {
                $('#todateid').addClass('is-invalid');
                $('#toDateError').show();
                hasError = true;
            }

            // Validate number of days
            if (!$('#nodaysid').val()) {
                if (!$('#nodaysid').hasClass('is-invalid')) {
                    $('#nodaysid').addClass('is-invalid');
                    $('#daysError').text('Please enter number of days').show();
                }
                hasError = true;
            }

            // Validate reason
            if (!reason) {
                $('#resonid').addClass('is-invalid');
                $('#reasonError').show();
                hasError = true;
            }

            // If any validation failed, stop here
            if (hasError) {
                return;
            }

            const payload = {
                EmplooyeId: Empid,
                CompId:Compid,
                ReportingManagerId: parseInt($('#reportingManagerId').val()),
                LeaveType: parseInt(leaveType),
                ApplicationType: applicationType,
                FromDate: fromDate,
                Todate: toDate,
                No_Of_Date: noOfDays,
                Reason: reason,
                Responsibleperson: parseInt($('#responsibleid').val()) || null,
                // Cancel_Weekoff: $('#weekid').val() === "1",
                // Send_Intimate: $('#weekid').val()
            };

            $.ajax({
                url: apiBase + '/LeaveApplication/AddLeaveapplication',
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(payload),
                success: function (response) {
                    if (response.isSuccess) {
                        Swal.fire("Success", response.responseMessage, "success");
                        // $('#leaveForm')[0].reset();
                    } else {
                        Swal.fire("Error", response.responseMessage, "error");
                    }
                },
                error: function () {
                    Swal.fire("Error", "An error occurred while submitting", "error");
                }
            });
        });

        $('#clearbuttonid').on('click', function () {
            $('#leaveForm')[0].reset();
            $('.form-control, .form-select').removeClass('is-invalid');
            $('.error-message').hide();
        });
    });

    // Function to validate days - only allow full days or half days
    function validateDays(days) {
        if (isNaN(days) || days <= 0) {
            return false;
        }

        // Check if the number is either a whole number or ends with .5
        const decimalPart = days % 1;
        return decimalPart === 0 || decimalPart === 0.5;
    }

    function loadSearchByOptions() {
        $.ajax({
            url: apiBase + '/LeaveMasterAPI/LeaveType',
            type: "GET",
                success: function (response) {
                    const dropdown = $('#Leavetypeid');
                    dropdown.empty().append(`<option value="0">-- Select --</option>`);

                    if (response.isSuccess && response.data?.length > 0) {
                        $.each(response.data, function (i, item) {
                            dropdown.append(`<option value="${item.leavtypeid}">${item.leaveName}</option>`);
                        });
                    } else {
                        dropdown.append(`<option value="">No leave types found</option>`);
                    }
                },

            error: function () {
                console.error("Failed to load leave types.");
            }
        });
    }

    function loadReportingPerson() {
        $.ajax({
            url: `${apiBase}/LeaveApplication/GetReportingperson?Empid=${Empid}`,
            method: 'POST',
            dataType: 'json',
            success: function (response) {
                if (response.isSuccess && response.data) {
                    $('#repoid').val(response.data.fullName);
                    $('#reportingManagerId').val(response.data.id);
                }
            }
        });
    }

            function loadLeaveBalance() {
        $.ajax({
            url: `${apiBase}/LeaveApplication/GetLeaveType`,
            method: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({ Compid: Compid, Empid: Empid }),
            success: function (response) {
                if (response.isSuccess && response.data && response.data.length > 0) {
                    $("#Leavebalanceid").dxDataGrid({
                        dataSource: response.data,
                        keyExpr: "leaveType",  // assuming leaveType is unique
                        showBorders: true,
                        columnAutoWidth: true,
                        columns: [
                            { dataField: "leaveType", caption: "Leave Type" ,cssClass: "text-center-cell"},
                            { dataField: "leaveValue", caption: "Balance",cssClass: "text-center-cell" }
                        ]
                    });
                } else {
                    $("#Leavebalanceid").html('<div class="text-muted text-center">No leave balance found</div>');
                }
            },
            error: function () {
                console.error("Failed to load leave balance.");
                Swal.fire("Error", "Could not load leave balance", "error");
            }
        });
    }




    function loadResponsibleDropdown() {
        debugger;
        $.ajax({
            url: `${apiBase}/CompOffAPI/ReportingPersonEmpVise?Compid=${Compid}&Empid=${Empid}`,
            method: 'POST',
            success: function (res) {
                const dropdown = $('#responsibleid');
                dropdown.empty().append('<option value="">-- Select Employee --</option>');
                if (res.isSuccess && res.data?.length > 0) {
                    res.data.forEach(item => {
                        dropdown.append(`<option value="${item.reportingPersonId}">${item.reportingPersonName}</option>`);
                    });
                }
            },
            error: function () {
                Swal.fire("Error", "Could not load responsible list", "error");
            }
        });
    }
</script>