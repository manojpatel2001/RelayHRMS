@inject IConfiguration Configuration
@{
    ViewData["Title"] = "Employee Panel";
    Layout = "~/Areas/EmployeePanel/Views/Shared/_EmployeeLayout.cshtml";
    string baseUrl = Configuration["BaseUrlSettings:baseUrl"];
    var uri = new Uri(baseUrl);
    string baseDomainUrl = $"{uri.Scheme}://{uri.Host}:{uri.Port}";
}
<link href="~/commoncss.css" rel="stylesheet" />

<style>
    .fixed-label {
        min-width: 130px;
        white-space: nowrap;
        margin-bottom: 0;
        text-align: right;
    }
</style>

<div class="card">
    <div class="card-header bg-transparent ml-0 py-0">
        <div class="card">
            <div class="card-header bg-transparent">
                <div class="row align-items-center">
                    <div class="col">
                        <h6 class="pt-2 mb-0">Change Password</h6>
                    </div>
                </div>
            </div>

            <div class="card-body">
                <h6 class="mb-4">Change Password</h6>
                <form>
                    <div class="col-md-8 mx-auto">
                        <div class="row mb-2">
                            <label for="currentpassid" class="col-sm-4 col-form-label fixed-label">
                                Current Password <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-4">
                                <input type="text" class="form-control form-control-sm" id="currentpassid" />
                            </div>
                        </div>
                        <div class="row mb-2">
                            <label for="newpassid" class="col-sm-4 col-form-label fixed-label">
                                New Password <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-4">
                                <input type="text" class="form-control form-control-sm" id="newpassid" />
                            </div>
                        </div>
                        <div class="row mb-2">
                            <label for="confirmpassid" class="col-sm-4 col-form-label fixed-label">
                                Confirm Password <span class="text-danger">*</span>
                            </label>
                            <div class="col-sm-4">
                                <input type="text" class="form-control form-control-sm" id="confirmpassid" />
                            </div>
                        </div>
                        <div class="row mb-2">
                            <div class="col-sm-4"></div>
                            <div class="col-sm-4">
                                <button type="button" class="btn btn-primary btn-sm me-2" id="btnChangePassword">Change Password</button>
                                <button type="button" class="btn btn-secondary btn-sm" id="btnClear">Clear</button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


    <!-- ✅ Include jQuery FIRST -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <!-- ✅ Include SweetAlert -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        $(document).ready(function () {
            $('#btnChangePassword').click(function () {
                changePassword();
            });

            $('#btnClear').click(function () {
                $('#currentpassid, #newpassid, #confirmpassid').val('');
            });
        });

        function changePassword() {
            debugger;
            var empId = '001'; // dynamic from ViewBag
            var currentPassword = $('#currentpassid').val().trim();
            var newPassword = $('#newpassid').val().trim();
           var confirmPassword = $('#confirmpassid').val().trim();

            if (!currentPassword || !newPassword || !confirmPassword) {
                Swal.fire("Validation Error", "All fields are required.", "warning");
                return;
            }

            if (newPassword !== confirmPassword) {
                Swal.fire("Validation Error", "New and Confirm Password must match.", "warning");
                return;
            }

            var payload = {
                EMPID: empId,
                CurrentPassword: currentPassword,
                NewPassword: newPassword
            };

            $.ajax({
                url: '@baseUrl/PasswordHistoryAPI/CreatePasswordHistory',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(payload),
                success: function (response) {
                    if (response.isSuccess) {
                        Swal.fire("Success", response.responseMessage, "success");
                        $('#currentpassid, #newpassid, #confirmpassid').val('');
                    } else {
                        Swal.fire("Error", response.responseMessage, "error");
                    }
                },
                error: function () {
                    Swal.fire("Error", "Something went wrong while calling API.", "error");
                }
            });
        }
    </script>

