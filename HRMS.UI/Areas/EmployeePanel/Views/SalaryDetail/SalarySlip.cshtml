@{
    ViewData["Title"] = "Investment Declaration";
    Layout = "~/Areas/EmployeePanel/Views/Shared/_EmployeeLayout.cshtml";
    string baseUrl = ViewBag.BaseUrl;
}


    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Payslip Management System</title>

    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f5f5f5;
            color: #333;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        .search-panel {
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            margin-bottom: 20px;
        }

            .search-panel h2 {
                color: #666;
                margin-bottom: 20px;
                font-weight: 500;
            }

        .search-form {
            display: flex;
            align-items: center;
            gap: 20px;
            flex-wrap: wrap;
        }

        .form-group {
            display: flex;
            flex-direction: column;
            gap: 5px;
        }

            .form-group label {
                font-size: 14px;
                color: #666;
                font-weight: 500;
            }

            .form-group input {
                padding: 8px 12px;
                border: 1px solid #ddd;
                border-radius: 4px;
                font-size: 14px;
                width: 150px;
            }

        .radio-group {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .radio-item {
            display: flex;
            align-items: center;
            gap: 5px;
        }

            .radio-item input[type="radio"] {
                margin: 0;
            }

        .search-btn {
            background: #4f46e5;
            color: white;
            border: none;
            padding: 10px 24px;
            border-radius: 4px;
            cursor: pointer;
            font-weight: 500;
            align-self: flex-end;
        }

            .search-btn:hover {
                background: #4338ca;
            }

        .payslip-card {
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            margin-bottom: 15px;
            overflow: hidden;
        }

        .payslip-header {
            background: #f8fafc;
            padding: 15px 20px;
            border-bottom: 1px solid #e2e8f0;
            display: flex;
            justify-content: space-between;
            align-items: center;
            cursor: pointer;
        }

            .payslip-header:hover {
                background: #f1f5f9;
            }

        .payslip-title {
            font-weight: 600;
            color: #1e40af;
        }

        .net-amount {
            font-weight: 600;
            color: #059669;
            font-size: 16px;
        }

        .expand-icon {
            transition: transform 0.3s ease;
        }

            .expand-icon.rotated {
                transform: rotate(180deg);
            }

        .payslip-details {
            padding: 20px;
            display: none;
        }

            .payslip-details.show {
                display: block;
            }

        .attendance-info {
            display: flex;
            justify-content: space-between;
            background: #f8fafc;
            padding: 15px;
            border-radius: 6px;
            margin-bottom: 20px;
        }

        .attendance-item {
            text-align: center;
        }

            .attendance-item .label {
                color: #6b7280;
                font-size: 13px;
                margin-bottom: 5px;
            }

            .attendance-item .value {
                font-weight: 600;
                color: #374151;
            }

        .components-section {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
            margin-bottom: 20px;
        }

        .component-group h3 {
            color: #6b7280;
            font-size: 16px;
            margin-bottom: 15px;
            font-weight: 500;
        }

        .component-item {
            display: flex;
            justify-content: space-between;
            padding: 8px 0;
            border-bottom: 1px solid #f1f5f9;
        }

            .component-item:last-child {
                border-bottom: none;
            }

        .component-name {
            color: #374151;
        }

        .component-amount {
            font-weight: 600;
            color: #111827;
        }

        .totals {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
            padding-top: 15px;
            border-top: 2px solid #e5e7eb;
        }

        .total-item {
            display: flex;
            justify-content: space-between;
            width: 200px;
            padding: 8px 0;
            font-weight: 600;
        }

        .gross-total {
            color: #059669;
        }

        .deduction-total {
            color: #dc2626;
        }

        .net-total {
            color: #1d4ed8;
            font-size: 18px;
        }

        .email-btn {
            background: #4f46e5;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 4px;
            cursor: pointer;
            font-weight: 500;
            margin-top: 15px;
        }

            .email-btn:hover {
                background: #4338ca;
            }

        .download-btn {
            background: #059669;
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 4px;
            cursor: pointer;
            font-weight: 500;
            margin-left: 10px;
            font-size: 12px;
        }

            .download-btn:hover {
                background: #047857;
            }

        .loading {
            text-align: center;
            padding: 40px;
            color: #6b7280;
        }

  
        .search-form

        {
            flex-direction: column;
            align-items: stretch;
        }

        .form-group input {
            width: 100%;
        }

        .components-section {
            grid-template-columns: 1fr;
            gap: 20px;
        }

        .totals {
            flex-direction: column;
            gap: 10px;
        }

        .attendance-info {
            flex-wrap: wrap;
            gap: 10px;
        }

        
    </style>

    <div class="container">
        <div class="search-panel">
            <h2>Search Panel</h2>
            <form class="search-form" id="searchForm">
                <div class="form-group">
                    <label for="fromDate">From Date <span style="color: red;">*</span></label>
                    <input type="date" id="fromDate" name="fromDate" value="2025-01-01" required>
                </div>

                <div class="form-group">
                    <label for="toDate">To Date <span style="color: red;">*</span></label>
                    <input type="date" id="toDate" name="toDate" value="2025-12-31" required>
                </div>

                <div class="form-group">
                    <label>Type</label>
                    <div class="radio-group">
                        <div class="radio-item">
                            <input type="radio" id="regular" name="type" value="regular" checked>
                            <label for="regular">Regular</label>
                        </div>
                        <div class="radio-item">
                            <input type="radio" id="settlement" name="type" value="settlement">
                            <label for="settlement">Settlement</label>
                        </div>
                    </div>
                </div>

                <button type="submit" class="search-btn">Go</button>
            </form>
        </div>

        <div id="payslipContainer">
            <div class="loading" id="loadingIndicator">Loading payslips...</div>
        </div>
    </div>

    <script>
        // Sample API data structure
        const samplePayslipData = [
            {
                id: 1,
                month: "June - 2025",
                netAmount: 52037.00,
                presentDays: 23.00,
                salaryDays: 30.00,
                holidays: 0.00,
                weekOff: 5.00,
                earnings: [
                    { name: "Basic Salary", amount: 38088.00 },
                    { name: "House Rent Allowance (AMT)", amount: 19044.00 },
                    { name: "Conveyance Allowances (AMT)", amount: 1600.00 },
                    { name: "Medical Allowances (AMT)", amount: 1250.00 },
                    { name: "CEA (AMT)", amount: 200.00 },
                    { name: "Deputation Allowance (AMT)", amount: 27421.00 }
                ],
                deductions: [
                    { name: "Professional tax", amount: 200.00 },
                    { name: "Other Dedu", amount: 20366.00 },
                    { name: "Other Deduction (AMT)", amount: 15000.00 }
                ],
                grossSalary: 87603.00,
                totalDeductions: 35566.00
            },
            {
                id: 2,
                month: "May - 2025",
                netAmount: 87037.00,
                presentDays: 23.00,
                salaryDays: 31.00,
                holidays: 0.00,
                weekOff: 6.00,
                earnings: [
                    { name: "Basic Salary", amount: 40000.00 },
                    { name: "House Rent Allowance (AMT)", amount: 20000.00 },
                    { name: "Conveyance Allowances (AMT)", amount: 1600.00 },
                    { name: "Medical Allowances (AMT)", amount: 1250.00 },
                    { name: "CEA (AMT)", amount: 200.00 },
                    { name: "Deputation Allowance (AMT)", amount: 30000.00 }
                ],
                deductions: [
                    { name: "Professional tax", amount: 200.00 },
                    { name: "Other Dedu", amount: 5513.00 }
                ],
                grossSalary: 93050.00,
                totalDeductions: 5713.00
            },
            {
                id: 3,
                month: "April - 2025",
                netAmount: 60610.00,
                presentDays: 22.00,
                salaryDays: 30.00,
                holidays: 0.00,
                weekOff: 6.00,
                earnings: [
                    { name: "Basic Salary", amount: 35000.00 },
                    { name: "House Rent Allowance (AMT)", amount: 17500.00 },
                    { name: "Conveyance Allowances (AMT)", amount: 1500.00 },
                    { name: "Medical Allowances (AMT)", amount: 1200.00 },
                    { name: "CEA (AMT)", amount: 200.00 },
                    { name: "Deputation Allowance (AMT)", amount: 25000.00 }
                ],
                deductions: [
                    { name: "Professional tax", amount: 200.00 },
                    { name: "Other Dedu", amount: 19590.00 }
                ],
                grossSalary: 80400.00,
                totalDeductions: 19790.00
            }
        ];

        class PayslipManager {
            constructor() {
                this.payslips = [];
                this.init();
            }

            init() {
                this.bindEvents();
                this.loadPayslips();
            }

            bindEvents() {
                document.getElementById('searchForm').addEventListener('submit', (e) => {
                    e.preventDefault();
                    this.handleSearch();
                });
            }

            async handleSearch() {
                const formData = new FormData(document.getElementById('searchForm'));
                const searchParams = {
                    fromDate: formData.get('fromDate'),
                    toDate: formData.get('toDate'),
                    type: formData.get('type')
                };

                this.showLoading();

                // Simulate API call
                setTimeout(() => {
                    this.loadPayslips(searchParams);
                }, 1000);
            }

            showLoading() {
                document.getElementById('loadingIndicator').style.display = 'block';
                document.querySelectorAll('.payslip-card').forEach(card => card.remove());
            }

            async loadPayslips(filters = null) {
                try {
                    // In real implementation, replace with actual API call
                    // const response = await fetch('/api/payslips', {
                    //     method: 'POST',
                    //     headers: { 'Content-Type': 'application/json' },
                    //     body: JSON.stringify(filters)
                    // });
                    // const data = await response.json();

                    const data = samplePayslipData;

                    this.payslips = data;
                    this.renderPayslips();
                    document.getElementById('loadingIndicator').style.display = 'none';
                } catch (error) {
                    console.error('Error loading payslips:', error);
                    document.getElementById('loadingIndicator').textContent = 'Error loading payslips';
                }
            }

            renderPayslips() {
                const container = document.getElementById('payslipContainer');

                this.payslips.forEach(payslip => {
                    const card = this.createPayslipCard(payslip);
                    container.appendChild(card);
                });
            }

            createPayslipCard(payslip) {
                const card = document.createElement('div');
                card.className = 'payslip-card';
                card.innerHTML = `
                    <div class="payslip-header" onclick="this.parentElement.querySelector('.payslip-details').classList.toggle('show'); this.querySelector('.expand-icon').classList.toggle('rotated');">
                        <div class="payslip-title">${payslip.month}</div>
                        <div style="display: flex; align-items: center; gap: 10px;">
                            <div class="net-amount">Net Amount: ${payslip.netAmount.toFixed(2)}</div>
                            <button class="download-btn" onclick="event.stopPropagation(); payslipManager.downloadPDF(${payslip.id})">
                                📄 PDF
                            </button>
                            <div class="expand-icon">▼</div>
                        </div>
                    </div>
                    <div class="payslip-details">
                        <div class="attendance-info">
                            <div class="attendance-item">
                                <div class="label">Present Days</div>
                                <div class="value">${payslip.presentDays}</div>
                            </div>
                            <div class="attendance-item">
                                <div class="label">Salary Days</div>
                                <div class="value">${payslip.salaryDays}</div>
                            </div>
                            <div class="attendance-item">
                                <div class="label">Holidays</div>
                                <div class="value">${payslip.holidays}</div>
                            </div>
                            <div class="attendance-item">
                                <div class="label">Week Off</div>
                                <div class="value">${payslip.weekOff}</div>
                            </div>
                        </div>

                        <div class="components-section">
                            <div class="component-group">
                                <h3>Earning Components</h3>
                                ${payslip.earnings.map(earning => `
                                    <div class="component-item">
                                        <span class="component-name">${earning.name}</span>
                                        <span class="component-amount">${earning.amount.toFixed(2)}</span>
                                    </div>
                                `).join('')}
                            </div>

                            <div class="component-group">
                                <h3>Deduction Components</h3>
                                ${payslip.deductions.map(deduction => `
                                    <div class="component-item">
                                        <span class="component-name">${deduction.name}</span>
                                        <span class="component-amount">${deduction.amount.toFixed(2)}</span>
                                    </div>
                                `).join('')}
                                <div class="component-item" style="border-top: 1px solid #e5e7eb; margin-top: 10px; padding-top: 10px; font-weight: 600;">
                                    <span class="component-name">Total Deduction</span>
                                    <span class="component-amount">${payslip.totalDeductions.toFixed(2)}</span>
                                </div>
                            </div>
                        </div>

                        <div class="totals">
                            <div class="total-item gross-total">
                                <span>Gross Salary</span>
                                <span>${payslip.grossSalary.toFixed(2)}</span>
                            </div>
                            <div class="total-item net-total">
                                <span>Net Salary: ${payslip.netAmount.toFixed(2)}</span>
                                <span></span>
                            </div>
                        </div>

                        <button class="email-btn" onclick="payslipManager.emailPayslip(${payslip.id})">
                            Email Detailed Payslip
                        </button>
                    </div>
                `;
                return card;
            }

            downloadPDF(payslipId) {
                const payslip = this.payslips.find(p => p.id === payslipId);
                if (!payslip) return;

                const { jsPDF } = window.jspdf;
                const doc = new jsPDF();

                // Set font
                doc.setFont("helvetica");

                // Header
                doc.setFontSize(20);
                doc.text('PAYSLIP', 105, 20, { align: 'center' });

                doc.setFontSize(14);
                doc.text(payslip.month, 105, 35, { align: 'center' });

                // Employee Info (you can add more fields as needed)
                let yPos = 60;
                doc.setFontSize(12);

                // Attendance Info
                doc.text('ATTENDANCE SUMMARY', 20, yPos);
                yPos += 10;
                doc.setFontSize(10);
                doc.text(`Present Days: ${payslip.presentDays}`, 20, yPos);
                doc.text(`Salary Days: ${payslip.salaryDays}`, 70, yPos);
                doc.text(`Holidays: ${payslip.holidays}`, 120, yPos);
                doc.text(`Week Off: ${payslip.weekOff}`, 160, yPos);

                yPos += 20;

                // Earnings
                doc.setFontSize(12);
                doc.text('EARNINGS', 20, yPos);
                doc.text('DEDUCTIONS', 120, yPos);
                yPos += 10;

                doc.setFontSize(10);
                let maxEarningsLength = Math.max(payslip.earnings.length, payslip.deductions.length);

                for (let i = 0; i < maxEarningsLength; i++) {
                    if (payslip.earnings[i]) {
                        doc.text(payslip.earnings[i].name, 20, yPos);
                        doc.text(payslip.earnings[i].amount.toFixed(2), 90, yPos, { align: 'right' });
                    }

                    if (payslip.deductions[i]) {
                        doc.text(payslip.deductions[i].name, 120, yPos);
                        doc.text(payslip.deductions[i].amount.toFixed(2), 190, yPos, { align: 'right' });
                    }
                    yPos += 8;
                }

                // Totals
                yPos += 10;
                doc.line(20, yPos, 190, yPos);
                yPos += 10;

                doc.setFontSize(11);
                doc.text('Gross Salary:', 20, yPos);
                doc.text(payslip.grossSalary.toFixed(2), 90, yPos, { align: 'right' });

                doc.text('Total Deductions:', 120, yPos);
                doc.text(payslip.totalDeductions.toFixed(2), 190, yPos, { align: 'right' });

                yPos += 15;
                doc.setFontSize(14);
                doc.setFont(undefined, 'bold');
                doc.text('Net Salary:', 20, yPos);
                doc.text(payslip.netAmount.toFixed(2), 90, yPos, { align: 'right' });

                // Download
                doc.save(`payslip-${payslip.month.replace(' - ', '-')}.pdf`);
            }

            emailPayslip(payslipId) {
                // In real implementation, make API call to send email
                alert(`Email functionality would be implemented here for payslip ID: ${payslipId}`);

                // Example API call:
                // fetch('/api/email-payslip', {
                //     method: 'POST',
                //     headers: { 'Content-Type': 'application/json' },
                //     body: JSON.stringify({ payslipId })
                // });
            }
        }

        // Initialize the payslip manager
        const payslipManager = new PayslipManager();
    </script>

