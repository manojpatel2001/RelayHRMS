@inject IConfiguration Configuration
@{
    ViewData["Title"] = "Add Attendance Regularization";
    Layout = "~/Areas/AdminPanel/Views/Shared/_AdminLayout.cshtml";
    string baseUrl = Configuration["BaseUrlSettings:baseUrl"];
    var uri = new Uri(baseUrl);
    string baseDomainUrl = $"{uri.Scheme}://{uri.Host}:{uri.Port}";
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<style>
    body {
        background-color: #ffffff !important;
    }

    .section-header {
        background-color: #3e4b6d;
        color: #fff;
        font-weight: bold;
        padding: 10px 20px;
        border-top-left-radius: 6px;
        border-top-right-radius: 6px;
        margin: 0 auto;
        max-width: 1200px;
        font-size: 18px;
    }

    .form-section {
        max-width: 1200px;
        margin: 0 auto;
        margin-top: 0;
        padding: 20px;
        border: 1px solid #ddd;
        border-radius: 6px;
        background-color: #fff;
    }

    .form-label {
        font-size: 13px;
        font-weight: 500;
        margin-bottom: 5px;
    }

    .form-control,
    .form-select {
        font-size: 13px;
        padding: 4px 10px;
        height: 32px;
        width: 240px;
        max-width: 100%;
    }

    .row.gutter-tight > [class*='col-'] {
        padding-left: 10px;
        padding-right: 10px;
        margin-bottom: 14px;
        display: flex;
        flex-direction: column;
        align-items: flex-start;
    }

    .btn-custom {
        font-size: 13px;
        padding: 6px 16px;
        min-width: 70px;
        background-color: #3e4b6d;
        color: white;
        border: none;
        border-radius: 4px;
    }

        .btn-custom:hover {
            background-color: #2c3752;
        }

    .no-record {
        text-align: center;
        margin-top: 20px;
        font-size: 14px;
        color: #555;
    }

    .action-buttons {
        display: flex;
        justify-content: center;
        gap: 10px;
        margin-top: 10px;
    }

    .back-btn {
        float: right;
        margin-top: 20px;
        margin-right: 40px;
    }
</style>

<!-- 🟦 Heading OUTSIDE the container -->
<div class="section-header">
    EMPLOYEE ATTENDANCE REGULARIZATION REQUEST
</div>

<!-- 🟩 Main form container -->
<div class="form-section">
    <div class="container mt-3">
        <div class="row gutter-tight justify-content-center">
            <div class="col-md-auto">
                <label class="form-label">Branch :</label>
                <select class="form-select form-select-sm" id="branch" style="width: 160px;"></select>
            </div>
            <div class="col-md-auto">
                <label class="form-label">Month :</label>
                <select class="form-select" id="month">
                    <option>January</option>
                    <option>February</option>
                    <option>March</option>
                    <option>April</option>
                    <option>May</option>
                    <option>June</option>
                    <option>July</option>
                    <option>August</option>
                    <option>September</option>
                    <option>October</option>
                    <option>November</option>
                    <option>December</option>
                </select>
            </div>
            <div class="col-md-auto">
                <label class="form-label">Year :</label>
                <select class="form-select" id="year"></select>
            </div>
        </div>

        <div class="row gutter-tight justify-content-center">
            <div class="col-md-auto">
                <label class="form-label">Record Type :</label>
                <select class="form-select">
                    <option selected>Regularize</option>
                </select>
            </div>
            <div class="col-md-auto">
                <label class="form-label">Employee Code/Name :</label>
                <input type="text" class="form-control" placeholder="Employee Code or Name" />
            </div>
            <div class="col-md-auto">
                <label class="form-label">Employee <span class="text-danger">*</span> :</label>
                <select class="form-select" id="employeeDropdown">
                    <option value="">--Select Employee--</option>
                </select>
            </div>
        </div>

        <div class="action-buttons">
            <button class="btn btn-custom">Go</button>
            <button class="btn btn-custom">Clear</button>
        </div>
    </div>
</div>

<div class="form-section" style="margin-top: 30px;">
    <div id="attendanceGrid"></div>
</div>

<!-- ⬅️ Back button -->
<div class="back-btn">
    <button class="btn btn-custom">Back</button>
</div>

<!-- 🔽 Script Section -->
<script>
    $(document).ready(function () {
        BindBranchDropdown();
        populateYearDropdown();

        // ⬅️ On Branch change, load employees
        $('#branch').on('change', function () {
            let branchId = $(this).val();
            if (branchId) {
                GetEmployeeByBranchId(branchId);
            } else {
                $('#employeeDropdown').empty().append('<option value="">--Select Employee--</option>');
            }
        });
    });

    // ✅ Bind all branches
    function BindBranchDropdown() {
        $.ajax({
            type: "GET",
            url: '@(baseDomainUrl + "/api/BranchAPI/GetAllBranch")',
            success: function (response) {
                if (response?.data?.length > 0) {
                    let $branch = $('#branch');
                    $branch.empty();
                    $branch.append('<option value="">--Select--</option>');
                    $.each(response.data, function (i, item) {
                        $branch.append('<option value="' + item.branchId + '">' + item.branchName + '</option>');
                    });
                }
            },
            error: function () {
                console.log("Failed to load branches.");
            }
        });
    }

    function populateYearDropdown() {
    var startYear = 2024;
    var currentYear = new Date().getFullYear();
    var yearDropdown = document.getElementById("year");

    yearDropdown.innerHTML = ""; // clear existing

    for (var year = currentYear; year >= startYear; year--) {
        var option = document.createElement("option");
        option.value = year;
        option.text = year;
        yearDropdown.appendChild(option);
    }

    yearDropdown.value = currentYear; // ✅ set current year as default selected
}


    // ✅ Get employees by BranchId and bind to dropdown
    function GetEmployeeByBranchId(branchId) { 
        debugger;
        $.ajax({
            type: "GET",
            url: '@(baseDomainUrl + "/api/EmployeeMasterAPI/GetEmployeeByBranchId")/' + branchId, // Use route parameter
            success: function (response) {
                if (response?.isSuccess && response?.data) {
                    let $emp = $('#employeeDropdown');
                    $emp.empty();
                    $emp.append('<option value="">--Select Employee--</option>');
                    $.each(response.data, function (i, item) {
                        // Adjust properties according to your model
                        $emp.append('<option value="' + item.id + '">' + item.fullName + '</option>');
                    });
                } else {
                    $('#employeeDropdown').empty().append('<option value="">--Select Employee--</option>');
                }
            },
            error: function () {
                console.log("Failed to load employees.");
            }
        });
    }


        let reasonOptions = [
            { ID: "Forgot To Punch/Sign", Name: "Forgot To Punch/Sign" },
            { ID: "Working from Home", Name: "Working from Home" },
            { ID: "Client Visit", Name: "Client Visit" },
            { ID: "Training", Name: "Training" },
            { ID: "Other", Name: "Other" }
        ];

    $('.btn-custom:contains("Go")').on('click', function () {
        let branchId = $('#branch').val();
        let empId = $('#employeeDropdown').val();
        let month = $('#month')[0].selectedIndex + 1;
        let year = $('#year').val();
        let recordType = 'All';

        if (!branchId || !empId) {
            Swal.fire("Please select both Branch and Employee.");
            return;
        }

        let formData = new FormData();
        formData.append("BranchId", branchId);
        formData.append("EmpId", empId);
        formData.append("Month", month);
        formData.append("Year", year);
        formData.append("RecordType", recordType);

        $.ajax({
            url: '@(baseDomainUrl + "/api/EmployeeInOut/GetEmployeeInOutReport")',
            type: 'POST',
            data: formData,
            contentType: false,
            processData: false,
            success: function (response) {
                        console.log("response" ,response);
                if (response?.isSuccess) {
                    LoadAttendanceGrid(response.data);
                } else {
                    Swal.fire("No data found");
                }
            },
            error: function () {
                Swal.fire("Failed to load data.");
            }
        });
    });

    function LoadAttendanceGrid(data) {
        $("#attendanceGrid").dxDataGrid({
            dataSource: data,
            showBorders: true,
            keyExpr: "for_Date", // Make sure this is unique per row
            editing: {
                mode: "cell",
                allowUpdating: true,
                texts: {
                    confirmDeleteMessage: "Are you sure you want to delete this record?"
                }
            },
            columns: [
                {
                    dataField: "for_Date",
                    caption: "Date",
                    dataType: "date",
                    width: 100
                },
                {
                    dataField: "fullName",
                    caption: "Employee",
                    allowEditing: false
                },
                {
                    dataField: "branchName",
                    caption: "Branch",
                    allowEditing: false
                },
                {
                    dataField: "shiftTime",
                    caption: "Shift Time",
                    allowEditing: false
                },
                {
                    dataField: "in_Time",
                    caption: "In Time",
                    dataType: "datetime",
                    format: "HH:mm:ss",
                    allowEditing: false
                },
                {
                    dataField: "out_Time",
                    caption: "Out Time",
                    dataType: "datetime",
                    format: "HH:mm:ss",
                    allowEditing: false
                },
                {
                    dataField: "status",
                    caption: "Present Day",
                    width: 100,
                    cellTemplate: function (container, options) {
                        const status = options.data.status;
                        const color = status === 'Present' ? '#28a745' : '#dc3545';
                        $('<div>').text(status?.charAt(0) ?? '')
                            .css({
                                color: '#fff',
                                backgroundColor: color,
                                textAlign: 'center',
                                fontWeight: 'bold',
                                padding: '4px',
                                borderRadius: '4px'
                            })
                            .appendTo(container);
                    },
                    allowEditing: false
                },
                {
                    dataField: "reason",
                    caption: "Reason",
                    lookup: {
                        dataSource: reasonOptions,
                        valueExpr: "ID",
                        displayExpr: "Name"
                    },
                          editorOptions: {
            showClearButton: true,
            searchEnabled: false // disables typing/searching
        },

                          calculateDisplayValue: function (rowData) {
            return rowData.reason || "--Select--"; // Show "Select" if null/empty
        },
        
                    allowEditing: true
                }
            ]
        });
    }

</script>

