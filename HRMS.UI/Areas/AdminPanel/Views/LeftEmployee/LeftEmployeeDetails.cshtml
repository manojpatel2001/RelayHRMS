@inject IConfiguration Configuration
@{
    ViewData["Title"] = "Left Employee";
    Layout = "~/Areas/AdminPanel/Views/Shared/_AdminLayout.cshtml";
    string baseUrl = Configuration["BaseUrlSettings:baseUrl"];
    var uri = new Uri(baseUrl);
    string baseAPIDomainUrl = $"{uri.Scheme}://{uri.Host}:{uri.Port}";
}

<div class="card">
    <div class="card-header bg-transparent ml-0 py-0">
        <div class="row">
            <div class="col-6">
                <h6 class="pt-2 mb-0">
                    Left Employee Details
                </h6>
            </div>

            <div class="col-6 d-flex justify-content-end align-items-center">
                <div class="font-22 pl-2" style="color:#32393f; cursor:pointer;">
                    <i class="fadeIn animated bx bx-refresh" id="refreshData" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Refresh Data"></i>
                </div>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-12 btn-heading-title">
                <div class="input-group mb-2">
                    <button id="addLeftEmployee"
                            type="button"
                            class="btn mr-1 rounded-1"
                            style="background-color:#2395c6; color:white;">
                        Add Left Employee
                    </button>
                </div>
            </div>
        </div>
        
            <div class="card-body">

                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">

                            <div class="grid-wrapper " style="position: relative; ">
                                <div id="grid-loader" class="grid-loader justify-content-center align-items-center flex-column "
                                     style="display: none;  inset: 0; background: rgba(255,255,255,0.6); z-index: 10; ">
                                    <img src="@baseAPIDomainUrl/loders/loder.png" class="grid-logo-spinner" style="width: 30px;                                            height: 30px; animation: spin 1s linear infinite;" />
                                    <div class="grid-loading-text text-dark" style="font-size: 16px;">Loading...</div>

                                </div>
                                <div id="gridTag">
                                    <div class="rowCount" id="rowCount1"></div>
                                    <div id="gridContainer"></div>
                                </div>
                                <div id="noRecord" style="display:none;">
                                    No Record Found!
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
       
            </div>
        </div>

<div class="modal fade" id="addEmployeeLeftModal" tabindex="-1" aria-labelledby="addEmployeeLeftLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <!-- Wider modal -->
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title btn-heading-title" id="addEmployeeLeftLabel">Add Left Employee</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>


            <div class="modal-body modal-body-font">

                <!-- Reason Type: All checkboxes in one row -->
                <div class="row mb-3">
                    <div class="col-md-2">
                        <label class="form-label fw-bold">Reason Type:</label>
                    </div>

                    <div class="col-md-2">
                        <div class="form-check form-check-inline cursor-pointer">
                            <input class="form-check-input reasonType" type="checkbox" id="resignation" value="Resignation" checked>
                            <label class="form-check-label" for="resignation">Resignation</label>
                        </div>
                    </div>

                    <div class="col-md-2">
                        <div class="form-check form-check-inline cursor-pointer">
                            <input class="form-check-input reasonType" type="checkbox" id="retirement" value="Retirement">
                            <label class="form-check-label" for="retirement">Retirement</label>
                        </div>
                    </div>

                    <div class="col-md-2">
                        <div class="form-check form-check-inline cursor-pointer">
                            <input class="form-check-input reasonType" type="checkbox" id="terminated" value="Terminated">
                            <label class="form-check-label" for="terminated">Terminated</label>
                        </div>
                    </div>

                    <div class="col-md-2">
                        <div class="form-check form-check-inline cursor-pointer">
                            <input class="form-check-input reasonType" type="checkbox" id="death" value="Death">
                            <label class="form-check-label" for="death">Death</label>
                        </div>
                    </div>
                </div>



                <!-- 3 fields per row -->
                <div class="row mb-3 gy-3">
                    <div class="col-md-4 position-relative">
                        <input type="date" class="form-control floating-input" id="leftDate">
                        <label class="floating-label" id="leftDateLabel" for="leftDate">Left Date *</label>
                        <span id="spnleftdate" style="color:red; display:none; font-size: 0.85em;">Please Enter Left Date</span>
                        <span id="spnleftdategreter" style="color:red; display:none; font-size: 0.85em;">Left date must be greater than the joining date.</span>
                        <span id="spnleftdateafterresignation" style="color:red; display:none; font-size: 0.85em;">Left date must be greater than the Resignation acceptance date.</span>
                    </div>
                    <div class="col-md-4 position-relative">
                        <select class="form-select floating-input" id="branch">
                            <option selected>--Select--</option>
                        </select>
                        <label class="floating-label" for="branch">Branch</label>
                    </div>
                    <div class="col-md-4 position-relative">
                        <select class="form-select floating-input" id="branchemp">
                            <option selected>--Select Employee--</option>
                        </select>
                        <label class="floating-label" for="branchemp">Employee *</label>
                        <span id="spnemp" style="color:red; display:none; font-size: 0.85em;">Please Select Employee</span>
                    </div>


                    <div class="col-md-4 position-relative">
                        <input class="form-control floating-input" id="joinDate" readonly>
                        <label class="floating-label" for="joinDate">Join Date *</label>
                    </div>
                    <div class="col-md-4 position-relative  common-reason">
                        <input type="date" class="form-control floating-input" id="resignationDate">
                        <label class="floating-label" for="resignationDate">Resignation Date</label>
                    </div>
                    <div class="col-md-4 position-relative  common-reason">
                        <input type="date" class="form-control floating-input" id="resignationAcceptedDate">
                        <label class="floating-label" for="resignationAcceptedDate">Resignation Accepted Date *</label>
                        <span id="spnresignationAcceptedDate" style="color:red; display:none; font-size: 0.85em;">Please Enter Resignation Accepted Date.</span>
                        <span id="spnresignationAcceptedDategreter" style="color:red; display:none; font-size: 0.85em;">Resignation acceptance date must be greater than the joining date.</span>
                    </div>

                    <div class="col-md-4 position-relative">
                        <select class="form-select floating-input" id="reason">
                            <option value="" selected>--Select Reason--</option>
                            <option value="Resign">Resign</option>                     
                        </select>
                        <label class="floating-label" for="reason">Reason</label>
                    </div> 
                    <div class="col-md-4 position-relative">
                        <textarea class="form-control floating-input" id="otherReason" rows="1" placeholder=" "></textarea>
                        <label class="floating-label" for="otherReason">Other Reason</label>
                    </div> 
                    <div class="col-md-4 position-relative   terminated-only common-reason">
                        <select class="form-select floating-input" id="uniformReturn">
                            <option value="" selected>--Select--</option>
                            <option value="yes">Yes</option>
                            <option value="no">No</option>
                            <option value="na">NA</option>
                        </select>
                        <label class="floating-label" for="uniformReturn">Uniform Return</label>
                    </div>

                    <div class="col-md-4 position-relative terminated-only common-reason">
                        <select class="form-select floating-input" id="exitInterview">
                            <option value="" selected>--Select--</option>
                            <option value="yes">Yes</option>
                            <option value="no">No</option>
                            <option value="na">NA</option>
                        </select>
                        <label class="floating-label" for="exitInterview">Exit Interview</label>
                    </div> 
                    <div class="col-md-4 position-relative  terminated-only common-reason">
                        <select class="form-select floating-input" id="noticePeriod">
                            <option value="" selected>--Select--</option>
                            <option value="yes">Yes</option>
                            <option value="no">No</option>
                            <option value="na">NA</option>
                        </select>
                        <label class="floating-label" for="noticePeriod">Notice Period</label>
                    </div> 
                    <div class="col-md-4 position-relative">
                        <select class="form-select floating-input" id="replaceManager">
                            <option selected>--Select Manager--</option>
                        </select>
                        <label class="floating-label" for="replaceManager">Replace Reporting Manager</label>
                    </div>

               
                    <div class="col-md-4 position-relative">
                        <select class="form-select floating-input" id="leftReasonPf">
                            <option disabled selected value="">--Select--</option>
                            <option value="Retirement">Retirement</option>
                            <option value="Death in Service">Death in Service</option>
                            <option value="Superannuation">Superannuation</option>
                            <option value="Permanent Disablement">Permanent Disablement</option>
                            <option value="Cessation">Cessation (Short Service)</option>
                            <option value="Death away from service">Death away from service</option>
                        </select>
                        <label class="floating-label" for="leftReasonPf">Left Reason (PF)</label>
                    </div>

            </div>

            <div class="modal-footer">
                    <button type="button" id="btnSaveLeftEmployee" class="btn btn-primary" style="background-color:#2395c6; color:white;">Save</button>
            </div>
        </div>
    </div>
</div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>


<script>
    $("#addLeftEmployee").click(() => {
        $("#addEmployeeLeftModal").modal('show');
    });

    let leftempid = 0;
    const savedCompany = localStorage.getItem('selectedCompany');
    var companyDetails = JSON.parse(savedCompany);
    const CompanyId = companyDetails?.CompanyId;
    const EmployeeId = localStorage.getItem('EmployeeId');
    const Token = localStorage.getItem("authToken");
    const userId = localStorage.getItem('userId') || 1; // Add fallback value

    // $(document).ready(function () {
    //     BindBranchDropdown();
    //     bindReporting();
    //     loadDataTable();
    //     function hideAllConditionalFields() {
    //         $('.common-reason').hide();
    //     }  

    //     $('.reasonType').on('change', function () {
    //         // Uncheck all others
    //         $('.reasonType').not(this).prop('checked', false);

    //         // Default label
    //         let labelText = "Left Date *";
    //         hideAllConditionalFields();
    //         if ($(this).is(":checked")) {
    //             const reason = $(this).val();

    //             switch (reason) {
    //                 case "Resignation":
    //                     labelText = "Left Date *";
    //                     $('.common-reason').show();
    //                     break;
    //                 case "Retirement":
    //                     labelText = "Retirement Date *";
    //                     $('.common-reason').hide();
    //                     break;
    //                 case "Terminated":
    //                     labelText = "Terminate Date *";
    //                     $('.terminated-only').show();
    //                     break;
    //                 case "Death":
    //                     labelText = "Death Date *";
    //                     $('.common-reason').hide();
    //                     break;
    //             }
    //         }

    //         // Update the label
    //         $('#leftDateLabel').text(labelText);   

    //     }); 

    //         $('.reasonType:checked').trigger('change');
    // });



        $(document).ready(function () {
        BindBranchDropdown();
        bindReporting();
        loadDataTable();

        function hideAllConditionalFields() {
            $('.common-reason').hide();
        }

        $('.reasonType').on('change', function () {
            // Uncheck all others
            $('.reasonType').not(this).prop('checked', false);

            let labelText = "Left Date *";
            hideAllConditionalFields();
            if ($(this).is(":checked")) {
                const reason = $(this).val();

                switch (reason) {
                    case "Resignation":
                        labelText = "Left Date *";
                        $('.common-reason').show();
                        break;
                    case "Retirement":
                        labelText = "Retirement Date *";
                        $('.common-reason').hide();
                        break;
                    case "Terminated":
                        labelText = "Terminate Date *";
                        $('.terminated-only').show();
                        break;
                    case "Death":
                        labelText = "Death Date *";
                        $('.common-reason').hide();
                        break;
                }
            }
            $('#leftDateLabel').text(labelText);
        });

        $('.reasonType').prop('checked', false);
        $('.reasonType[value="Resignation"]').prop('checked', true).trigger('change');
    });




    $('#branchemp').on('focus', function () {
        const optionsCount = $(this).find('option').length;
        if (optionsCount <= 1) {
            round_error_noti('Please select branch first');
        }
    });

    $("#branchemp").change(() => {
        GetEmployeeById();
    });

    $("#branch").change(() => {
        BindEmployeeByBranchId();
    });

    function BindBranchDropdown() {
        return $.ajax({
            url: '@baseUrl/BranchAPI/GetAllBranchesListByCompanyId/' + CompanyId,
            method: 'GET',
            headers: { 'Authorization': 'Bearer ' + Token }
        }).done(function(data) {
            var dropdown = $('#branch');
            dropdown.empty();
            dropdown.append('<option disabled selected value="">--Select--</option>');
            if (data && data.isSuccess && data.data && data.data.length) {
                $.each(data.data, function(index, company) {
                    dropdown.append($('<option>', {
                        value: company.branchId,
                        text: company.branchName
                    }));
                });
            }
        }).fail(function(err) {
            console.error('Error fetching branch data:', err);
        });
    }

     function BindEmployeeByBranchId() {
        var branchId = $("#branch").val();
        if (!branchId || branchId === "" || branchId === "--Select--") {
            $('#branchemp').empty().append('<option disabled selected value="">--Select Employee--</option>');
            return Promise.resolve();
        }

        return $.ajax({
            type: "GET",
            url: "@baseUrl/EmployeeMasterAPI/GetEmployeeByBranchId/" + branchId,
            headers: {
                'Authorization': 'Bearer ' + Token
            },
            success: function (response) {
                var $empDropdown = $('#branchemp');
                $empDropdown.empty();
                $empDropdown.append('<option disabled selected value="">--Select Employee--</option>');
                if (response && response.isSuccess && response.data && response.data.length > 0) {
                    $.each(response.data, function (i, item) {
                        var option = $('<option></option>')
                            .attr('value', item.id)
                            .text(item.fullName);

                        $empDropdown.append(option);
                    });

                } else {
                    if (response && !response.isSuccess) {
                        console.log("API returned isSuccess = false, message:", response.message);
                    }
                    round_error_noti("No employees found for this branch");
                }
            },
            error: function (xhr, status, error) {
                $('#branchemp').empty().append('<option disabled selected value="">--Select Employee--</option>');
                if (xhr.status === 401) {
                    round_error_noti("Authentication failed. Please login again.");
                } else if (xhr.status === 404) {
                    round_error_noti("Employee API endpoint not found.");
                } else {
                    round_error_noti("Unable to load employees: " + error);
                }
            }
        });
    }

     function GetEmployeeById() {
        var empId = $("#branchemp").val();
        if (!empId || empId === "" || empId === "--Select Employee--") {
            $("#joinDate").val("");
            return Promise.resolve();
        }

        return $.ajax({
            type: "GET",
            url: '@baseUrl/EmployeeMasterAPI/GetEmployeeById/' + empId,
            headers: {
                'Authorization': 'Bearer ' + Token
            },
            success: function (data) {
                if (data.isSuccess && data.data) {
                    var joinDateRaw = data.data.dateOfJoining;
                    if (joinDateRaw) {
                        var joinDateFormatted = joinDateRaw.split('T')[0];
                        $("#joinDate").val(joinDateFormatted);
                    }
                }
            },
            error: function (xhr, status, error) {
                console.error("AJAX Error: " + status + " - " + error);
            }
        });
    }

      function bindReporting() {
        return $.ajax({
            type: "GET",
            url: "@baseUrl/EmployeeMasterAPI/GetAllEmployee" + "?companyId=" + CompanyId,
            headers: { 'Authorization': 'Bearer ' + Token }
        }).done(function(data) {
            var dropdown = $('#replaceManager');
            dropdown.empty();
            dropdown.append('<option disabled selected value="">--Select Manager--</option>');
            if (data && data.isSuccess && data.data && data.data.length) {
                $.each(data.data, function(index, emp) {
                    dropdown.append($('<option>', {
                        value: emp.id,
                        text: emp.fullName + " - " + emp.employeeCode
                    }));
                });
            }
        }).fail(function(err) {
            console.error("Error fetching managers:", err);
        });
    }


    $(document).ready(function () {
        $("#addLeftEmployee").click(() => {
            resetLeftEmployee();
            $("#addEmployeeLeftModal").modal('show');
        });
    }); 



    $('#btnSaveLeftEmployee').click(function () {
        $("#btnSaveLeftEmployee").prop("disabled", true);

    var leftDateStr = $('#leftDate').val();
    var joiningDateStr = $('#joinDate').val();
    var resignationAcceptDateStr = $('#resignationAcceptedDate').val();

    var leftDate = leftDateStr ? new Date(leftDateStr) : null;
    var joiningDate = joiningDateStr ? new Date(joiningDateStr) : null;
    var resignationAcceptDate = resignationAcceptDateStr ? new Date(resignationAcceptDateStr) : null;

        var reasonTypes = [];
        $('.reasonType:checked').each(function () {
            reasonTypes.push($(this).val());
        });

        var leftDate = $('#leftDate').val();
        var branch = $('#branch').val();
        var employee = $('#branchemp').val();
        var resignationDate = $('#resignationDate').val();
        var resignationAcceptedDate = $('#resignationAcceptedDate').val();
        var reason = $('#reason').val();
        var otherReason = $('#otherReason').val();
        var uniformReturn = $('#uniformReturn').val();
        var exitInterview = $('#exitInterview').val();
        var noticePeriod = $('#noticePeriod').val();
        var replaceManager = $('#replaceManager').val();
        var leftReasonPf = $('#leftReasonPf').val();
        var isValid = true;

       if (!leftDate) {
            $('#spnleftdate').show();
                  // alert("Please Enter the Left Date");
        isValid = false;
         }
       if (!resignationAcceptedDate) {
            $('#spnresignationAcceptedDate').show();
                  // alert("Please Enter the Left Date");
        isValid = false;
         }
  
             if (leftDate && joiningDate && leftDate <= joiningDate) {
            $('#spnleftdategreter').show();
           $("#btnSaveLeftEmployee").prop("disabled", false);
        return false; 
    }

    if (resignationAcceptDate && joiningDate && resignationAcceptDate <= joiningDate) {
       $('#spnresignationAcceptedDategreter').show();
        $("#btnSaveLeftEmployee").prop("disabled", false);
        return false;
    }

        if (leftDate && resignationAcceptDate && leftDate < resignationAcceptDate) {
        $('#spnleftdateafterresignation').show(); // yaha apna span ya alert use karo
        $("#btnSaveLeftEmployee").prop("disabled", false);
        return false;
    }

            if (!employee || employee === "--Select Employee--" || employee === "") {
               $('#spnemp').show();
            isValid = false;
        }

        if (reasonTypes.length === 0) {
          round_error_noti("Please select at least one Reason Type");
            isValid = false;
        }
            if (reasonTypes.length !== 1) {
      round_error_noti("Please select exactly one Reason Type");
        isValid = false;
    }

        if (!isValid) {
            $("#btnSaveLeftEmployee").prop("disabled", false);
            return;
        }

        var employeeLeftData = {
            LeftID: leftempid,
            CmpID: CompanyId, 
            EmpID: parseInt(employee),
            BranchId: parseInt(branch),
           LeftDate: leftDate ? new Date(leftDate).toISOString() : null,
            LeftReason: reason,
            RegAcceptDate: resignationAcceptedDate ? new Date(resignationAcceptedDate).toISOString() : null,
            IsTerminate: reasonTypes.includes("Terminated"), 
            UniformReturn: (uniformReturn === "Yes"),
            ExitInterview: (exitInterview === "Yes"),
            NoticePeriod: noticePeriod,
            IsDeath: reasonTypes.includes("Death"),
            RegDate: resignationDate ? new Date(resignationDate).toISOString() : null,
            IsFnFApplicable: reasonTypes.includes("Resignation"),
            RptManagerID: replaceManager ? parseInt(replaceManager) : null,
            IsRetire: reasonTypes.includes("Retirement"), 
            LeftReasonValue: leftReasonPf ? parseInt(leftReasonPf) : null,
            LeftReasonText: otherReason,
            IsDeleted: false,
            IsEnabled: true,
            CreatedBy: '',
            UpdatedBy:''
        };

        var apiUrl = (leftempid && leftempid > 0)
            ? "@baseUrl/LeftEmployeeAPI/UpdateLeftEmployee"
            : "@baseUrl/LeftEmployeeAPI/CreateLeftEmp";

        var methodType = (leftempid && leftempid > 0) ? "PUT" : "POST";

        $.ajax({
            url: apiUrl,
            type: methodType,
            contentType: 'application/json',
            headers: {
                'Authorization': 'Bearer ' + Token
            },
            data: JSON.stringify(employeeLeftData),
            success: function (response) {
                if (response.isSuccess) {
                    round_success_noti(response.responseMessage);
                    loadDataTable();
                    resetLeftEmployee();
                    $("#addEmployeeLeftModal").modal('hide');
                } else {
                    round_error_noti(response.responseMessage);
                }
                $("#btnSaveLeftEmployee").prop("disabled", false);
            },
            error: function (xhr) {
                console.error('Error:', xhr);
                round_error_noti('Unable to save details');
                $("#btnSaveLeftEmployee").prop("disabled", false);
            }
        });
    });

    function loadDataTable() {
        $('#grid-loader').addClass('d-flex').show();
        $.ajax({
            type: "GET",
            url: '@baseUrl/LeftEmployeeAPI/GetAllLeftEmp',
            headers: {
                'Authorization': 'Bearer ' + Token
            },
            success: function (response) {
                if(response.isSuccess) {
                    $("#noRecord").hide();
                    $("#gridTag").show();
                    $("#gridContainer").dxDataGrid({
                        dataSource: response.data,
                        columns: [
                            { dataField: 'employeeCode', caption: 'Employee Code' },
                            { dataField: 'fullName', caption: 'Employee Name ' },
                            { dataField: 'branchName', caption: 'Branch Name' },
                            { dataField: 'dateOfJoining', caption: 'Joining Date' },
                            { dataField: 'leftDate', caption: 'Leaving Date' },
                            { dataField: 'reasonType', caption: 'Reason Type' },                   
                            {
                                dataField: '',
                                caption: 'Edit',
                                dataType: 'string',
                                format: '',
                                type: 'buttons',
                                width: '50px',
                                cellTemplate: function (container, options) {
                                    var buttonElement = $('<div class="d-flex order-actions">' +
                                        '<a href="javascript:;" class="edit-action" title="Update Employee">' +
                                        '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-eyedropper" viewBox="0 0 16 16">' +
                                        '<path d="M13.354.646a1.207 1.207 0 0 0-1.708 0L8.5 3.793l-.646-.647a.5.5 0 1 0-.708.708L8.293 5l-7.147 7.146A.5.5 0 0 0 1 12.5v1.793l-.854.853a.5.5 0 1 0 .708.707L1.707 15H3.5a.5.5 0 0 0 .354-.146L11 7.707l1.146 1.147a.5.5 0 0 0 .708-.708l-.647-.646 3.147-3.146a1.207 1.207 0 0 0 0-1.708zM2 12.707l7-7L10.293 7l-7 7H2z"/>' +
                                        '</svg>' +
                                        '</a>' +
                                        '</div>')
                                        .on('dxclick', function () {
                                            updateLeftEmployee(options.data); // Fix: corrected function name
                                        }).appendTo(container);

                                    var svgElement = buttonElement.find('svg');
                                    svgElement.attr('title', 'Update employee');
                                }
                            },
                            {
                                dataField: '',
                                caption: 'Delete',
                                dataType: 'string',
                                format: '',
                                type: 'buttons',
                                width: '50px',
                                cellTemplate: function (container, options) {
                                    var buttonElement = $('<div class="d-flex order-actions">' +
                                        '<a href="javascript:;" class="delete-action" title="Delete Employee">' +
                                        '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash-fill" viewBox="0 0 16 16">' +
                                        '<path d="M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5M8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5m3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0"/>' +
                                        '</svg>' +
                                        '</a>' +
                                        '</div>')
                                        .on('dxclick', function () {
                                            deleteLeftEmployee(options.data); // Fix: corrected function name
                                        }).appendTo(container);

                                    var svgElement = buttonElement.find('svg');
                                    svgElement.attr('title', 'Delete Employee');
                                }
                            }
                        ],
                        columnsAutoWidth: true,
                        wordWrapEnabled: false,
                        rowAlternationEnabled: false,
                        showBorders: true,
                        grouping: { autoExpandAll: true },
                        paging: { pageSize: 10 },
                        pager: { showPageSizeSelector: true, allowedPageSizes: [10, 25, 50, 100] },
                        headerFilter: { visible: true },
                        filterRow: { visible: true, applyFilter: "auto" },
                        allowColumnResizing: true,
                        groupPanel: { visible: true },
                        searchPanel: { visible: true, width: 240, placeholder: "Search..." },
                        allowColumnReordering: true,
                        columnFixing: { enabled: false },
                        onContentReady(e) {
                            jQuery('.rowCount').html('Total Records: ' + jQuery("#gridContainer").dxDataGrid('instance').totalCount());
                            $('#grid-loader').removeClass('d-flex').hide();
                        }
                    }).dxDataGrid('instance');
                } else {
                    $("#noRecord").show();
                    $("#gridTag").hide();
                    $('#grid-loader').removeClass('d-flex').hide();
                }
            },
            error: function () {
                $("#noRecord").show();
                $("#gridTag").hide();
                $('#grid-loader').removeClass('d-flex').hide();
                console.error("Unable to load left employee data");
            }
        });
    }

       function resetLeftEmployee() {
        leftempid = 0;
        $("#leftDate, #resignationDate, #resignationAcceptedDate, #joinDate").val("");
        $("#reason, #otherReason, #uniformReturn, #exitInterview, #noticePeriod, #replaceManager, #leftReasonPf").val("");
        $("#branch").empty().append('<option disabled selected value="">--Select--</option>');
        $("#branchemp").empty().append('<option disabled selected value="">--Select Employee--</option>');

        $(".reasonType").prop("checked", false);
        $(".common-reason").hide();
        $(".terminated-only").hide();
              $('#spnemp').hide();
              $('#spnresignationAcceptedDategreter').hide();
              $('#spnleftdategreter').hide();
              $('#spnresignationAcceptedDate').hide();
              $('#spnleftdateafterresignation').hide();
        $("#leftDateLabel").css('color', '');
        $("#addEmployeeLeftLabel").text("Add Left Employee");
        $("#btnSaveLeftEmployee").text("Save").prop("disabled", false);
    }

    $("#addLeftEmployee").off('click').on('click', async function () {
        resetLeftEmployee();
        await BindBranchDropdown();
        await bindReporting();
        $("#addEmployeeLeftModal").modal('show');
    });

        $('#addEmployeeLeftModal').on('hidden.bs.modal', function () {
        resetLeftEmployee();
    });

        function normalizeYesNo(val) {
        if (val === true || val === "true" || val === 1 || String(val).toLowerCase() === "yes") return "yes";
        if (val === false || val === "false" || val === 0 || String(val).toLowerCase() === "no") return "no";
        return "na"; 
    }

    async function updateLeftEmployee(data) {
        try {
            resetLeftEmployee();
            leftempid = data.leftID;
            await BindBranchDropdown();
            await bindReporting();
            if (data.branchId) {
                $("#branch").val(data.branchId);
                await BindEmployeeByBranchId();
            }

            var empToSet = data.empId || data.employeeId || data.empID || data.empid;
            if (empToSet) {
                $("#branchemp").val(empToSet);
                await GetEmployeeById(); 
            }

            $("#leftDate").val(data.leftDate ? data.leftDate.split('T')[0] : "");
            $("#resignationDate").val(data.regDate ? data.regDate.split('T')[0] : "");
            $("#resignationAcceptedDate").val(data.regAcceptDate ? data.regAcceptDate.split('T')[0] : "");
            $("#reason").val(data.leftReason || "");
            $("#otherReason").val(data.leftReasonText || "");
     $("#uniformReturn").val(normalizeYesNo(data.uniformReturn)).trigger('change');
    $("#exitInterview").val(normalizeYesNo(data.exitInterview)).trigger('change');
    $("#noticePeriod").val(normalizeYesNo(data.noticePeriod)).trigger('change');


            $("#replaceManager").val(data.rptManagerID || data.rptManagerId || "");
            $("#leftReasonPf").val(data.leftReasonValue || "");

            $(".reasonType").prop("checked", false);
            if (data.isTerminate === true || data.isTerminate === "True" || data.isTerminate === 1) {
                $("#terminated").prop("checked", true).trigger('change');
            } else if (data.isDeath === true || data.isDeath === "True") {
                $("#death").prop("checked", true).trigger('change');
            } else if (data.isRetire === true || data.isRetire === "True") {
                $("#retirement").prop("checked", true).trigger('change');
            } else if (data.isFnFApplicable === true || data.isFnFApplicable === "True") {
                $("#resignation").prop("checked", true).trigger('change');
            }

            $("#btnSaveLeftEmployee").prop("disabled", false).text("Update");
            $("#addEmployeeLeftLabel").text("Update Left Employee");
            $("#addEmployeeLeftModal").modal("show");

        } catch (err) {
            console.error("Error in updateLeftEmployee:", err);
            round_error_noti('Error loading employee data for update');
        }
    }

    function deleteLeftEmployee(data) {
        if (!confirm("Are you sure you want to delete this left employee record?")) {
            return; 
        }

        var deleteObj = {
            id: data.leftID, 
            deletedBy: ''
        };

        $.ajax({
            url: '@baseUrl/LeftEmployeeAPI/Delete', 
            type: "DELETE",
            data: JSON.stringify(deleteObj),
            contentType: 'application/json',
            headers: {
                'Authorization': 'Bearer ' + Token
            },
            success: function (response) {
                if (response.isSuccess) {
                    round_success_noti(response.responseMessage);
                    loadDataTable();
                } else {
                    round_error_noti(response.responseMessage);
                }
            },
            error: function (xhr, status, error) {
                round_error_noti('An error occurred while deleting the record. Please try again');
            }
        });
    }

 
    $("#refreshData").click(function() {
        loadDataTable();
    });
</script>

