@inject IConfiguration Configuration
@{
	ViewData["Title"] = "Employee Master";
	Layout = "~/Areas/AdminPanel/Views/Shared/_AdminLayout.cshtml";
	string baseUrl = Configuration["BaseUrlSettings:baseUrl"];
}
<style>
	.custom-radio {
		display: inline-block;
		cursor: pointer;
	}

	.custom-label {
		display: inline-block;
		margin: 0.5rem;
		cursor: pointer;
		transition: all 0.3s ease;
	}

	.custom-radio:checked + .custom-label {
		color: blue;
	}

	#EmployeeFilter{
		border:2px solid black;
	}

	/* Tooltip button styles */
	.tooltip-button {
		background-color: blue;
		color: white;
		border-radius: 50%;
		width: 24px;
		height: 24px;
		display: flex;
		align-items: center;
		justify-content: center;
		cursor: pointer;
		position: absolute;
		right: 10px;
		top: 50%;
		transform: translateY(-50%);
	}

	/* Tooltip styles */
	.tooltip-text {
		display: none;
		position: absolute;
		background-color: #ffffe0;
		border: 1px solid #ccc;
		padding: 10px;
		box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
		z-index: 1000;
		width: 250px;
		top: 0;
		right: 30px;
	}

		.tooltip-button:hover + .tooltip-text,
		.tooltip-text:hover {
			display: block;
		}

	
	
</style>


<div class="card">
	<div class="card-header bg-transparent ml-0 py-0">
		<div class="row m-2">
			<div class="col-6 ">
				<h6 class="pt-2 mb-0">
					Employee Master
				</h6>
			</div>

			<div class="col-6 d-flex justify-content-end align-items-center">
				<div class="font-22 pl-2" style="color:#32393f; cursor:pointer;">
@* 					<i class="fadeIn animated bx bx-refresh" id="refreshData" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Refresh Data"></i>
 *@				
                    <button id="addEmployee"
							type="button"
							class="btn mr-1 rounded-1 "
							style="background-color:#2395c6; color:white;">
						Add 
					</button>
                </div>
			</div>
		</div>
	</div>
	<div class="card-body">
    @* <div class="row">
        <div class="col-md-12 btn-heading-title">
            <div class="input-group mb-2">
                <button id="addEmployee"
                        type="button"
                        class="btn mr-1 rounded-1"
                        style="background-color:#2395c6; color:white;">
                    Add Employee
                </button>
            </div>
        </div>
    </div> *@
		<div class="row mt-4 mb-2">
			<div class="col-7">
				<div class="form-group" id="EmployeeFilter">
					<div class=" row ps-1">
						<div class="col-md-4 p">
							<input type="radio" name="employeeFilter" id="allEmployee" value="AllEmployee" class="custom-radio" checked>
							<label for="allEmployee" class="custom-label">All Employee</label>
						</div>
						<div class="col-md-4">
							<input type="radio" name="employeeFilter" id="leftEmployee" value="LeftEmployee" class=" custom-radio">
							<label for="leftEmployee" class="custom-label">Left Employee</label>
						</div>
						<div class="col-md-4">
							<input type="radio" name="employeeFilter" id="currentEmployee" value="CurrentEmployee" class="custom-radio">
							<label for="currentEmployee" class="custom-label">Current Employee</label>
						</div>
				    </div>
				</div>
			</div>
		</div>


    <div class="row">
        <div class="col-md-12">
            <div class="form-group gridTag">
					<div class="rowCount" id="rowCountEmployee"></div>
					<div id="gridAllContainerEmployee" class="gridContainer">
                    @* <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div> *@
                    <div class="d-flex justify-content-center align-items-center" style="height: 10vh;">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>
                </div>

					<div id="gridLeftContainerEmployee" style="display:none;">
						@* <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div> *@
						<div class="d-flex justify-content-center align-items-center" style="height: 10vh;">
							<div class="spinner-border text-primary" role="status">
								<span class="visually-hidden">Loading...</span>
							</div>
						</div>
					</div>
					<div id="gridCurrentContainerEmployee" style="display:none;">
						@* <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div> *@
						<div class="d-flex justify-content-center align-items-center" style="height: 10vh;">
							<div class="spinner-border text-primary" role="status">
								<span class="visually-hidden">Loading...</span>
							</div>
						</div>
					</div>
            </div>
			<div id="spnNoRecord" style="display:none;">No Record Found!</div>
        </div>
    </div>
</div>

</div>


<div class="modal fade" id="addEmployeeModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-xl">
		<div class="modal-content">
			<div class="modal-header">
				<h6 class="modal-title btn-heading-title" id="exampleModalLabel"><span class="formType">Add</span> Employee Details</h6>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body modal-body-font" style="font-size:12px;">
				<form id="employeeForm">

					<div class="row">
						<div class="col-md-4">
							<div class="form-group mt-3 position-relative">
								<select class="form-select floating-input" id="ddlInitial">
									<option value="">Select</option>
									<option>Mr.</option>
									<option>Mrs.</option>
									<option>Ms.</option>
								</select>
								<label class="floating-label" for="ddlInitial">Initial*</label>
								<span id="spnInitial" style="color:red; display:none;">Please Select Initial</span>

							</div>
						</div>
						<div class="col-md-4">
							<div class="form-group mt-3 position-relative">
								<input type="text" class="form-control floating-input" id="txtFirstName" placeholder=" ">
								<label class="floating-label" for="txtFirstName">First Name*</label>
								<span id="spnFirstName" style="color:red; display:none;">Please Enter First Name</span>

							</div>
						</div>
						<div class="col-md-4">
							<div class="form-group mt-3 position-relative">
								<input type="text" class="form-control floating-input" id="txtMiddleName" placeholder=" ">
								<label class="floating-label" for="txtMiddleName">Middle Name</label>
							</div>
						</div>
					</div>

					<div class="row">
						<div class="col-md-4">
							<div class="form-group mt-3 position-relative">
								<input type="text" class="form-control floating-input" id="txtLastName" placeholder=" ">
								<label class="floating-label" for="txtLastName">Last Name</label>
							</div>
						</div>
						<div class="col-md-4">
							<div class="row ">
								
								<div class="col-md-4 p-0">
									<div class="form-group mt-3 position-relative">
									    Employee Code*:
									</div>
								</div>
								<div class="col-md-5 p-0">
									<div class="form-group mt-3 position-relative">
										<input type="text" readonly class="form-control floating-input" id="txtEmpCode" placeholder="HRMS" value="">
									</div>
								</div>
								<div class="col-md-3 p-0">
									<div class="form-group mt-3 position-relative">
										<input type="text" readonly class="form-control floating-input" id="txtNumberEmpCode" placeholder="0001" value="">
									</div>
								</div>
							</div>
							
						</div>

						<div class="col-md-4">
							<div class="form-group mt-3 position-relative">
								<input type="date" class="form-control floating-input" id="doj" placeholder=" ">
								<label class="floating-label" for="doj">Date of Joining*</label>
							</div>
						</div>
					</div>

					<div class="row">
						<div class="col-md-4">
							<div class="form-group mt-3 position-relative">
								<select class="form-select floating-input" id="ddlBranch">
									<option  value="">Select</option>
								</select>
								<label class="floating-label" for="ddlBranch">Branch*</label>
							</div>
						</div>
						<div class="col-md-4">
							<div class="form-group mt-3 position-relative">
								<select class="form-select floating-input" id="ddlGrade">
									<option value="">Select</option>
@* 									<option value="">MANAGEMENT</option>
 *@								</select>
								<label class="floating-label" for="ddlGrade">Grade*</label>
							</div>
						</div>
						<div class="col-md-4">
							<div class="form-group mt-3 position-relative">
								<select class="form-select floating-input" id="ddlShift">
									<option value="">Select</option>
								</select>
								<label class="floating-label" for="ddlShift">Shift*</label>
							</div>
						</div>
					</div>

					<!-- New Fields -->
					<div class="row">
						<div class="col-md-4">
							<div class="form-group mt-3 position-relative">
								<input type="text" class="form-control floating-input" id="txtCTC" placeholder=" ">
								<label class="floating-label" for="txtCTC">CTC</label>
							</div>
						</div>
						<div class="col-md-4">
							<div class="form-group mt-3 position-relative">
								<select class="form-select floating-input" id="ddlDesignation">
									<option value="">Select </option>
									<!-- Add your options here -->
								</select>
								<label class="floating-label" for="ddlDesignation">Designation </label>
							</div>
						</div>
						<div class="col-md-4">
							<div class="form-group mt-3 position-relative">
								<input type="number" class="form-control floating-input" id="txtGrossSalary" placeholder=" " min="0">
								<label class="floating-label" for="txtGrossSalary">Gross Salary </label>
							</div>
						</div>
						
					</div>

					<div class="row">
						<div class="col-md-4">
							<div class="form-group mt-3 position-relative">
								<select class="form-select floating-input" id="ddlCategory">
									<option value="">Select</option>
									<!-- Add your options here -->
								</select>
								<label class="floating-label" for="ddlCategory">Category </label>
							</div>
						</div>
						<div class="col-md-4">
							<div class="form-group mt-3 position-relative">
								<input type="number" class="form-control floating-input" id="txtBasicSalary" placeholder=" " min="0">
								<label class="floating-label" for="txtBasicSalary">Basic Salary </label>
							</div>
						</div>
						<div class="col-md-4">
							<div class="form-group mt-3 position-relative">
								<select class="form-select floating-input" id="ddlDepartment">
									<option value="">Select</option>
									<!-- Add your options here -->
								</select>
								<label class="floating-label" for="ddlDepartment">Department*</label>
							</div>
						</div>
						
					</div>

					<div class="row">
						<div class="col-md-4">
							<div class="form-group mt-3 position-relative">
								<select class="form-select floating-input" id="ddlEmpType">
									<option value="">Select</option>
									<!-- Add your options here -->
								</select>
								<label class="floating-label" for="ddlEmpType">Employee Type </label>
							</div>
						</div>

						<div class="col-md-4">
							<div class="form-group mt-3 position-relative">
								<input type="date" class="form-control floating-input" id="dob" placeholder=" ">
								<label class="floating-label" for="dob">Date of Birth </label>
							</div>
						</div>
						<div class="col-md-4">
							<div class="form-group mt-3 position-relative">
								<select class="form-select floating-input" id="ddlRole">
									<option value="">Select</option>
									<!-- Add your options here -->
								</select>
								<label class="floating-label" for="ddlRole">Role</label>
							</div>
						</div>

						
					</div>

					<div class="row">
						<div class="col-md-4">
							<div class="form-group mt-3 position-relative">
								<input type="text" class="form-control floating-input" id="txtLoginAlias" placeholder=" ">
								<label class="floating-label" for="txtLoginAlias">Login Alias </label>
								<span id="spnLoginAlias" style="color:red; display:none;">Please Enter Login Alias</span>

							</div>
						</div>

						<div class="col-md-4">
							<div class="form-group mt-4 position-relative">
								Scheme Assign:
								<label class="scheme-assign-label cursor-pointer text-primary ms-2" data-bs-toggle="modal" data-bs-target="#schemeAssignModal">
									Click here
								</label>

						   </div>
						</div>

						<div class="col-md-4">
							<div class="form-group mt-4 position-relative">
								WeekOff Assign:
								<label class="scheme-assign-label cursor-pointer text-primary ms-2" data-bs-toggle="modal" data-bs-target="#weekOffAssignModal">
									Click here
								</label>
							</div>
						</div>
					</div>

					<div class="row mt-3">
						<div class="col-md-3">
							<div class="form-check">
								<input class="form-check-input" type="checkbox" id="overtime">
								<label class="form-check-label" for="overtime">Over Time</label>
							</div>
						</div>
						<div class="col-md-3">
							<div class="form-check">
								<input class="form-check-input" type="checkbox" id="latemark">
								<label class="form-check-label" for="latemark">Late Mark</label>
							</div>
						</div>
						<div class="col-md-3">
							<div class="form-check">
								<input class="form-check-input" type="checkbox" id="earlymark">
								<label class="form-check-label" for="earlymark">Early Mark</label>
							</div>
						</div>
						<div class="col-md-3">
							<div class="form-check">
								<input class="form-check-input" type="checkbox" id="fullpf">
								<label class="form-check-label" for="fullpf">Full PF</label>
							</div>
						</div>
						<div class="col-md-3">
							<div class="form-check mt-2">
								<input class="form-check-input" type="checkbox" id="pt">
								<label class="form-check-label" for="pt">PT</label>
							</div>
						</div>
						<div class="col-md-3">
							<div class="form-check mt-2">
								<input class="form-check-input" type="checkbox" id="fixsalary">
								<label class="form-check-label" for="fixsalary">Fix Salary</label>
							</div>
						</div>
						<div class="col-md-3">
							<div class="form-check mt-2">
								<input class="form-check-input" type="checkbox" id="probation">
								<label class="form-check-label" for="probation">Probation</label>
							</div>
						</div>
						<div class="col-md-3">
							<div class="form-check mt-2">
								<input class="form-check-input" type="checkbox" id="trainee">
								<label class="form-check-label" for="trainee">Trainee</label>
							</div>
						</div>
					</div>

				</form>
			</div>

			<div class="modal-footer btn-heading-title">
				<button type="button" class="btn btn-primary" id="btnCreateEmployee" style="background-color:#2395c6; color:white;">Save</button>
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
			</div>
		</div>
	</div>
</div>


<!-- The Modal -->
<div class="modal fade" id="schemeAssignModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-lg">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title btn-heading-title" id="exampleModalLabel">
					<span class="formType">Scheme Assigned Details</span>
				</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" data-bs-toggle="modal" data-bs-target="#addEmployeeModal" aria-label="Close"></button>
			</div>
			<div class="modal-body modal-body-font">
				<table class="table table-bordered">
					<thead>
						<tr>
							<th style="width:25%">Scheme Type</th>
							<th style="width:25%">Scheme</th>
							<th style="width:25%">Scheme Type</th>
							<th style="width:25%">Scheme</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td>Attendance Regularization</td>
							<td>
								<div class="form-group mt-2 position-relative ">
									<select class="form-control floating-input" id="ddlRegularization">
										<option value="">Select Scheme</option>
										<option>Regularization1</option>
										<!-- Add more options as needed -->
									</select>
									<label class="floating-label" for="ddlRegularization">Attendance Regularization</label>
								</div>
							</td>
							<td>Leave Application</td>
							<td>
								<div class="form-group mt-2 position-relative ">
									<select class="form-control floating-input" id="ddlLeave">
										<option value="">Select Scheme</option>
										<option>Leave_1</option>
										<!-- Add more options as needed -->
									</select>
									<label class="floating-label" for="ddlLeave">Leave Application</label>
								</div>
							</td>
						</tr>
						<tr>
							<td>Claim Application</td>
							<td>
								<div class="form-group mt-2 position-relative ">
									<select class="form-control floating-input" id="ddlClaim">
										<option value="">Select Scheme</option>
										<option>Claim1</option>
										<!-- Add more options as needed -->
									</select>
									<label class="floating-label" for="ddlClaim">Claim Application</label>
								</div>
							</td>
							<td>Loan Application</td>
							<td>
								<div class="form-group mt-2 position-relative ">
									<select class="form-control floating-input" id="ddlLoan">
										<option value="">Select Scheme</option>
										<option>Loan1</option>
										<!-- Add more options as needed -->
									</select>
									<label class="floating-label" for="ddlLoan">Loan Application</label>
								</div>
							</td>
						</tr>
					</tbody>
				</table>
			</div>
			
		</div>
	</div>
</div>

<div class="modal fade" id="weekOffAssignModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-md">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title btn-heading-title" id="exampleModalLabel">
					<span class="formType">WeekOff Assign</span>
				</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" data-bs-toggle="modal" data-bs-target="#addEmployeeModal" aria-label="Close"></button>
			</div>
			<div class="modal-body modal-body-font">
				<div class="mb-3 position-relative ">
					<select class="form-control floating-input" id="fullWeekOffDay">
						<option value="">Select Full WeekOff Day</option>
						<option value="sunday">Sunday</option>
						<option value="monday">Monday</option>
						<option value="tuesday">Tuesday</option>
						<option value="wednesday">Wednesday</option>
						<option value="thursday">Thursday</option>
						<option value="friday">Friday</option>
						<option value="saturday">Saturday</option>
					</select>
					<label class="floating-label" for="fullWeekOffDay">Full WeekOff Day </label>
				</div>

				<div class="mb-3 position-relative ">
					<select class="form-control floating-input" id="alternateWeekOffDay">
						<option value="">Select Alternate WeekOff Day</option>
						<option value="monday">Monday</option>
						<option value="tuesday">Tuesday</option>
						<option value="wednesday">Wednesday</option>
						<option value="thursday">Thursday</option>
						<option value="friday">Friday</option>
						<option value="saturday">Saturday</option>
						<option value="sunday">Sunday</option>
					</select>
					<label class="floating-label" for="alternateWeekOffDay">Alternate WeekOff Day </label>
				</div>

				<div class="mb-3 position-relative ">
					<input type="text" class="form-control floating-input" id="alternateFullWeekOff" placeholder="eg. #2#4#">
					<label class="floating-label" for="alternateFullWeekOff">Alternate Full WeekOff *</label>
					<button class="tooltip-button" id="tooltipButton" tabindex="0">?</button>
					<div class="tooltip-text" tabindex="0">
						When you select Alternate WeekOff Day then Alternate WeekOff Week is mandatory. Specify the Alternate WeekOff Week number separated by # character (i.e. for Second & Fourth WeekOff enter value #2#4#)
					</div>
				</div>
			
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-primary" id="btnSaveAssignWeekOff" style="background-color:#2395c6; color:white;">Save</button>
			</div>
		</div>
	</div>
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>

<script>
	const savedCompany = localStorage.getItem('selectedCompany');
	var companyDetails = JSON.parse(savedCompany);
	const CompanyId=companyDetails.CompanyId;
	let ReasonId=0;
	$("#addEmployee").click( () => {
	$("#btnCreateEmployee").prop("disabled", false);

		$("#addEmployeeModal").modal('show');

	})

			
	$(document).ready(async function() {
		try {
			
		    GetNextEmployeeCode();

			// Ensure localStorage item is removed
			localStorage.removeItem('employeeDetailsLocalStorage');
			
			$("#rowCountEmployee").text("");
			// Load initial employee data
			await EmployeeDetailsDataTable('#gridAllContainerEmployee', '@baseUrl/EmployeeMasterAPI/GetAllEmployee');

			// Attach event listener to radio buttons
			$('input[name="employeeFilter"]').change(async function() {
				if ($(this).is(':checked')) {
					const selectedValue = $(this).val();
					console.log('Selected value:', selectedValue);
					// Define employeeUrl based on selected value
					let IsBlocked=true;
					let employeeUrl="";
					let gridId="";
					if (selectedValue === 'AllEmployee') {
						$("#gridLeftContainerEmployee").hide();
						$("#gridAllContainerEmployee").show();
						$("#gridCurrentContainerEmployee").hide();
						gridId = "#gridAllContainerEmployee";
						employeeUrl = '@baseUrl/EmployeeMasterAPI/GetAllEmployee';
					} else if (selectedValue === 'LeftEmployee') {
						IsBlocked = true;
						$("#gridLeftContainerEmployee").show();
						$("#gridAllContainerEmployee").hide();
						$("#gridCurrentContainerEmployee").hide();
						gridId = "#gridLeftContainerEmployee";
						employeeUrl = '@baseUrl/EmployeeMasterAPI/GetAllEmployeeByIsBlocked/' + IsBlocked;
					} else if (selectedValue === 'CurrentEmployee') {
						$("#gridLeftContainerEmployee").hide();
						$("#gridAllContainerEmployee").hide();
						$("#gridCurrentContainerEmployee").show();
						gridId = "#gridCurrentContainerEmployee";
						IsBlocked = false;
						employeeUrl = '@baseUrl/EmployeeMasterAPI/GetAllEmployeeByIsBlocked/' + IsBlocked;
					}

					console.log('employeeUrl:', employeeUrl);

					// Clear previous grid data and show loading spinner
					$("#rowCountEmployee").text("");
					
					// Ensure EmployeeDetailsDataTable is defined and call it
					if (typeof EmployeeDetailsDataTable === 'function') {
						await EmployeeDetailsDataTable(gridId, employeeUrl);
					} else {
						console.error('EmployeeDetailsDataTable is not defined');
					}
				}
			});
		} catch (error) {
			console.error('Error loading company details:', error);
		}
	});

	
	async function EmployeeDetailsDataTable(gridId, employeeUrl) {
		if (!CompanyId) {
			round_error_noti("Please select company");
			return;
		}
		debugger
		if(gridId=='#gridAllContainerEmployee')
		{
			$("#allEmployee").prop("checked", true);
		}
			$.ajax({
				type: "GET",
				url: employeeUrl + "?companyId=" + CompanyId,
				success: function(data) {
					console.log("Data received:", data);
					if (data.isSuccess) {
						
						$("#spnNoRecord").hide();
						$(".gridTag").show();
						$(gridId).dxDataGrid({
							dataSource: data.data,
							rowHeight: 40,
							width: '100%',
							columns: [

								{
									dataField: 'employeeCode',
									caption: 'Employee Code',
									fixed: true,
									fixedPosition: 'left',
									width: 100,
									customizeText: function(cellInfo) {
										// Use a regular expression to extract the numeric part inline
										 const parts = cellInfo.value.split(' ');
										// Return the part after the space, or the original value if there is no space
										return parts.length > 1 ? parts[1] : cellInfo.value;
									}
								},
								{ dataField: 'fullName', caption: 'Full Name',    width: 150 },
									{ dataField: 'branchName', caption: 'Branch',  width: 120 },
							    { dataField: 'gradeName', caption: 'Grade',  width: 150 },
								{ dataField: 'departmentName', caption: 'Department',  width: 120 },
								{ dataField: 'designationName', caption: 'Designation',  width: 120 },
							     {dataField: 'dateOfJoining', caption: 'Date of Joining',  dataType: 'date', width: 120 },
								{ dataField: 'enrollNo', caption: 'Enroll No',  width: 120 },

								//  { dataField: 'shift', caption: 'Shift',  width: 100 },
								// { dataField: 'ctc', caption: 'CTC',  width: 150 },
								// { dataField: 'grossSalary', caption: 'Gross Salary',  width: 150 },
								// { dataField: 'category', caption: 'Category',  width: 150 },
								// { dataField: 'basicSalary', caption: 'Basic Salary',  width: 150 },
								// { dataField: 'employeeType', caption: 'Employee Type',  width: 150 },
								// { dataField: 'dateOfBirth', caption: 'Date of Birth',  dataType: 'date', width: 150 },
								// { dataField: 'userPrivilege', caption: 'User Privilege',  width: 150 },
								// { dataField: 'loginAlias', caption: 'Login Alias',  width: 150 },
								// {
								// 	dataField: 'isBlocked',
								// 	caption: 'Blocked',
								// 	alignment: 'center',
								// 	cellTemplate: function(container, options) {
								// 		$('<div>').text(options.value ? 'Yes' : 'No').appendTo(container);
								// 	},
								// 	width: 100
								// },
								// { dataField: 'createdDate', caption: 'Created Date',  dataType: 'date', width: 150 },
								
								{
									dataField: '',
									caption: '',
									alignment: 'center',
									width: '50px',
									type: 'buttons',
									fixed: true,
									fixedPosition: 'right',
									cellTemplate: function(container, options) {
										var buttonElement = $('<div class="d-flex order-actions">' +
											'<a href="javascript:;" class="edit-action" title="Edit Employee">' +
											'<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-eyedropper" viewBox="0 0 16 16">' +
											'<path d="M13.354.646a1.207 1.207 0 0 0-1.708 0L8.5 3.793l-.646-.647a.5.5 0 1 0-.708.708L8.293 5l-7.147 7.146A.5.5 0 0 0 1 12.5v1.793l-.854.853a.5.5 0 1 0 .708.707L1.707 15H3.5a.5.5 0 0 0 .354-.146L11 7.707l1.146 1.147a.5.5 0 0 0 .708-.708l-.647-.646 3.147-3.146a1.207 1.207 0 0 0 0-1.708zM2 12.707l7-7L10.293 7l-7 7H2z"/>' +
											'</svg>' +
											'</a>' +
											'</div>')
											.on('dxclick', function() {
												updateEmployeeDetails(options.data);
											}).appendTo(container);
									}
								},
								{
									dataField: '',
									caption: '',
									alignment: 'center',
									width: '50px',
									type: 'buttons',
									fixed: true,
									fixedPosition: 'right',
									cellTemplate: function(container, options) {
										var buttonElement = $('<div class="d-flex order-actions">' +
											'<a href="javascript:;" class="delete-action" title="Delete Employee">' +
											'<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash-fill" viewBox="0 0 16 16">' +
											'<path d="M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5M8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5m3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0"/>' +
											'</svg>' +
											'</a>' +
											'</div>')
											.on('dxclick', function() {
												deleteEmployeeDetails(options.data);
											}).appendTo(container);
									}
								}
							],
							columnsAutoWidth: false,
							wordWrapEnabled: false,
							showBorders: true,
							rowAlternationEnabled: false,
							showBorders: true,
							grouping: { autoExpandAll: true },
							paging: { pageSize: 10 },
							pager: { showPageSizeSelector: true, allowedPageSizes: [10, 25, 50, 100] },
							headerFilter: { visible: true },
							filterRow: { visible: true, applyFilter: "auto" },
							allowColumnResizing: true,
							groupPanel: { visible: true },
							searchPanel: { visible: true, width: 240, placeholder: "Search..." },
							columnFixing: {
								enabled: true
							},
							scrolling: {
								mode: "standard",
								useNative: false,
								scrollByContent: true,
								scrollByThumb: true,
							},
							onContentReady(e) {
								$('#rowCountEmployee').html('Total Records: ' + e.component.totalCount());
							}
						});
					} else {
							$(".gridTag").hide();
						$("#spnNoRecord").show();
					}
				},
				error: function(xhr, status, error) {
					console.error("AJAX Error: " + status + " - " + error);
				}
			})
	}



		   function deleteEmployeeDetails(data) {
			   if (!confirm("Are you sure you want to delete this employee?")) {
				   return; // Cancel the delete operation
			   }

			   var deleteObj = {
				   id:0,
				   emp_id: data.id,
				   deletedBy: null // Set this to the actual user if needed
			   };
			   $.ajax({
				   url: '@baseUrl/EmployeeMasterAPI/DeleteEmployee',
				   type: 'DELETE',
				   contentType: 'application/json',
				   data: JSON.stringify(deleteObj),
				   success: function (response) {
					   if (response.isSuccess) {
						   round_success_noti(response.responseMessage);
		                EmployeeDetailsDataTable('#gridAllContainerEmployee', '@baseUrl/EmployeeMasterAPI/GetAllEmployee');

					   } else {
						   round_error_noti(response.responseMessage);
					   }
							 
				   },
				   error: function (error) {
					   console.log('Error deleting reason!');
				   }
			   });
		   }

    function bindDesignation(){

	   $.ajax({
				url: '@baseUrl/DesignationAPI/GetAllDesignation',
				method: 'GET',
				success: function(data) {
					if(data.isSuccess){
						var dropdown = $('#ddlDesignation');
						dropdown.empty();
						dropdown.append('<option disabled selected value="">Select </option>');
						$.each(data.data, function(index, company) {
							dropdown.append($('<option>', {
								value: company.designationId,
								text: company.designationName
							}));
						});
							

					}
				},
				error: function(error) {
					console.error('Error fetching designation data:', error);
				}
			});
			
	 }
	
	 function bindDepartment(){

	   $.ajax({
				url: '@baseUrl/DepartmentAPI/GetAllDepartment',
				method: 'GET',
				success: function(data) {
					if(data.isSuccess){
						var dropdown = $('#ddlDepartment');
						dropdown.empty();
						dropdown.append('<option disabled selected value="">Select </option>');
						$.each(data.data, function(index, company) {
							dropdown.append($('<option>', {
								value: company.departmentId,
								text: company.departmentName
							}));
						});


					}
				},
				error: function(error) {
					console.error('Error fetching designation data:', error);
				}
			});

	 }
	 function bindGrade(){
	   $.ajax({
				url: '@baseUrl/GradeAPI/GetAllGrade',
				method: 'GET',
				success: function(data) {
					if(data.isSuccess){
						var dropdown = $('#ddlGrade');
						dropdown.empty();
						dropdown.append('<option disabled selected value="">Select</option>');
						$.each(data.data, function(index, company) {
							dropdown.append($('<option>', {
								value: company.gradeId,
								text: company.gradeName
							}));
						});


					}
				},
				error: function(error) {
					console.error('Error fetching grade data:', error);
				}
			});

	 }


	function bindBranch(){

	   $.ajax({
			url: '@baseUrl/BranchAPI/GetAllBranch',
			method: 'GET',
			success: function(data) {
				if(data.isSuccess){
					var dropdown = $('#ddlBranch');
					dropdown.empty();
					dropdown.append('<option disabled selected value="">Select</option>');
					$.each(data.data, function(index, company) {
						dropdown.append($('<option>', {
							value: company.branchId,
							text: company.branchName
						}));
					});


				}
			},
			error: function(error) {
				console.error('Error fetching branch data:', error);
			}
		});

	}

	function bindEmployeeType(){

	   $.ajax({
			url: '@baseUrl/EmployeeTypeAPI/GetAllEmployeeTypes',
			method: 'GET',
			success: function(data) {
				if(data.isSuccess){
					var dropdown = $('#ddlEmpType');
					dropdown.empty();
					dropdown.append('<option disabled selected value="">Select</option>');
					$.each(data.data, function(index, company) {
						dropdown.append($('<option>', {
							value: company.employeeTypeId,
							text: company.employeeTypeName
						}));
					});


				}
			},
			error: function(error) {
				console.error('Error fetching category data:', error);
			}
		});

	}
	function bindCategory(){

	   $.ajax({
			url: '@baseUrl/CategoryAPI/GetAllCategories',
			method: 'GET',
			success: function(data) {
				if(data.isSuccess){
					var dropdown = $('#ddlCategory');
					dropdown.empty();
					dropdown.append('<option disabled selected value="">Select</option>');
					$.each(data.data, function(index, company) {
						dropdown.append($('<option>', {
							value: company.categoryId,
							text: company.categoryName
						}));
					});


				}
			},
			error: function(error) {
				console.error('Error fetching category data:', error);
			}
		});

	}
	function bindShift(){

	   $.ajax({
			url: '@baseUrl/ShiftMasterAPI/GetAllShifts',
			method: 'GET',
			success: function(data) {
				if(data.isSuccess){
					var dropdown = $('#ddlShift');
					dropdown.empty();
					dropdown.append('<option disabled selected value="">Select</option>');
					$.each(data.data, function(index, company) {
						dropdown.append($('<option>', {
							value: company.shiftID,
							text: company.shiftName
						}));
					});


				}
			},
			error: function(error) {
				console.error('Error fetching category data:', error);
			}
		});

	}

	$(document).ready(function() {
		loadBindRoleOption();
		bindBranch();
		bindDesignation();
		bindDepartment();
		bindGrade();
		bindCategory();
		bindEmployeeType();
		bindShift();
	$('#btnCreateEmployee').click(function() {
			$("#btnCreateEmployee").prop("disabled", true);
			// Capture form values in variables
			var initial = $('#ddlInitial').val();
			var firstName = $('#txtFirstName').val();
			var middleName = $('#txtMiddleName').val();
			var lastName = $('#txtLastName').val();
			var employeeStringCode = $('#txtEmpCode').val(); // Assuming the first input is for EmployeeStringCode
			var employeeNumberCode = $('#txtNumberEmpCode').val(); // Assuming the second input is for EmployeeNumberCode
			var dateOfJoining = $('#doj').val();
			var branch = $('#ddlBranch').val();
			var grade = $('#ddlGrade').val();
			var shift = $('#ddlShift').val();
			var ctc = $('#txtCTC').val();
			var designation = $('#ddlDesignation').val();
			var grossSalary = $('#txtGrossSalary').val();
			var category = $('#ddlCategory').val();
			var basicSalary = $('#txtBasicSalary').val();
			var department = $('#ddlDepartment').val();
			var employeeType = $('#ddlEmpType').val();
			var dateOfBirth = $('#dob').val();
			var RoleId = $('#ddlRole').val();
			var loginAlias = $('#txtLoginAlias').val();
			var overtime = $('#overtime').is(':checked');
			var latemark = $('#latemark').is(':checked');
			var earlymark = $('#earlymark').is(':checked');
			var fullpf = $('#fullpf').is(':checked');
			var pt = $('#pt').is(':checked');
			var fixsalary = $('#fixsalary').is(':checked');
			var probation = $('#probation').is(':checked');
			var trainee = $('#trainee').is(':checked');
			var Company = CompanyId;
				// Validate required fields
	           var isValid = true;

				if (!initial) {
					$('#spnInitial').show();
					isValid = false;
				}
				else{
					$('#spnInitial').hide();
				}

				if (!firstName) {
					$('#spnFirstName').show();
					isValid = false;
				}
				else{
					$('#spnFirstName').hide();
				}

				// if (!employeeStringCode) {
				
				// 	isValid = false;
				// }

				// if (!employeeNumberCode) {
			
				// 	isValid = false;
				// }

				// if (!dateOfJoining) {
				// 	
				// 	isValid = false;
				// }

				// if (!branch) {
				// 	
				// 	isValid = false;
				// }

				// if (!grade) {
				// 	$('#ddlGrade').addClass('is-invalid');
				// 	$('#ddlGrade').next('.invalid-feedback').show();
				// 	isValid = false;
				// }

				// if (!shift) {
				
				// 	isValid = false;
				// }

				// if (!department) {
				
				// 	isValid = false;
				// }

				if (!loginAlias) {
					$('#spnLoginAlias').show();
					isValid = false;
				}
				else{
					$('#spnLoginAlias').hide();
				}
				if (!isValid) {
					$("#btnCreateEmployee").prop("disabled", false);
					return; 
				}
			// Create employeeData object
						var employeeData = {
						Id:null,
						CompanyId:Company===""?null:Company,
						Initial: initial === "" ? null : initial,
						FirstName: firstName === "" ? null : firstName,
						MiddleName: middleName === "" ? null : middleName,
						LastName: lastName === "" ? null : lastName,
						FullName: `${initial} ${firstName} ${middleName} ${lastName}`.trim(),
						EmployeeCode: `${employeeStringCode} ${employeeNumberCode}`.trim(),
						DateOfJoining: dateOfJoining === "" ? null : dateOfJoining,
						BranchId: branch === "" ? null : branch,
						GradeId: grade === "" ? null : grade,
						ShiftMasterId: shift === "" ? null : shift,
						CTC: ctc === "" ? null : ctc,
						DesignationId: designation === "" ? null : designation,
						GrossSalary: grossSalary === "" ? null : grossSalary,
						CategoryId: category === "" ? null : category,
						BasicSalary: basicSalary === "" ? null : basicSalary,
						DepartmentId: department === "" ? null : department,
						EmployeeTypeId: employeeType === "" ? null : employeeType,
						DateOfBirth: dateOfBirth === "" ? null : dateOfBirth,
						RoleId: RoleId === "" ? 0 : RoleId,
						LoginAlias: loginAlias === "" ? null : loginAlias,
						Password: null,
						ReportingManager: null,
						SubBranch: null,
						EnrollNo: null,
						Overtime: overtime === "" ? false : overtime,
						Latemark: latemark === "" ? false : latemark,
						Earlymark: earlymark === "" ? false : earlymark,
						Fullpf: fullpf === "" ? false : fullpf,
						Pt: pt === "" ? false : pt,
						Fixsalary: fixsalary === "" ? false : fixsalary,
						Probation: probation === "" ? false : probation,
						Trainee: trainee === "" ? false : trainee,

						// Default values for properties not present in the JavaScript object
						
					
						CreatedBy: null,
						UpdatedBy: null,
						
						EmployeeProfileUrl: null,
						EmployeeSignatureUrl: null
					};
					console.log("employeeData: "+ employeeData);



			// Send data to server using AJAX
				$.ajax({
					url: '@baseUrl/EmployeeMasterAPI/CreateEmployee',
					type: 'POST',
					contentType: 'application/json',
					data: JSON.stringify(employeeData),
					success: function(response) {
						if (response.isSuccess) {
							round_success_noti(response.responseMessage);
					      EmployeeDetailsDataTable('#gridAllContainerEmployee', '@baseUrl/EmployeeMasterAPI/GetAllEmployee');
							GetNextEmployeeCode();
						  $("#addEmployeeModal").modal('hide');
						} else {
							round_error_noti(response.responseMessage);
						}
						$("#btnCreateEmployee").prop("disabled", false);
					},
					error: function(xhr, status, error) {
						$("#btnCreateEmployee").prop("disabled", false);

						console.error('Error:', error);
						console.error('Status:', status);
						console.error('Response Text:', xhr.responseText);
						alert('An error occurred while creating the employee. Please check the console for more details.');
					}
				});

		});
	});

	function updateEmployeeDetails(data)
	{
			// Remove the CurrentCompanyId from localStorage
		localStorage.removeItem('CurrentEmployeeId');
		localStorage.setItem('CurrentEmployeeId', data.id);
		localStorage.removeItem('CurrentCompanyId');
		localStorage.setItem('CurrentCompanyId', data.companyId);
		const baseUIOrginUrl = window.location.origin;
		 window.location.href = baseUIOrginUrl + '/EmployeeMaster/AdditionalInformation';
	}

	function GetNextEmployeeCode(){
		debugger;
		if (!CompanyId) {
			round_error_noti("Please select company");
			return;
		}
	   $.ajax({
			url: '@baseUrl/EmployeeMasterAPI/GetNextEmployeeCode/'+CompanyId,
			method: 'GET',
			success: function(data) {
				if(data.isSuccess){
					console.log(data)
					debugger
					// Extract values from the data object
					const nextEmployeeCode = data.data.nextEmployeeCode;
					const digitsForEmployeeCode = data.data.digitsForEmployeeCode;
					const companyCode=data.data.companyCode;

					// Ensure nextEmployeeCode is treated as a number
					const numericCode = Number(nextEmployeeCode);

					// Format the nextEmployeeCode with leading zeros
					const formattedEmployeeCode = numericCode.toString().padStart(digitsForEmployeeCode, '0');

					// Set the formatted employee code into the input field
					$('#txtNumberEmpCode').val(formattedEmployeeCode);
					$('#txtEmpCode').val(companyCode);

				}
			},
			error: function(error) {
				console.error('Error fetching branch data:', error);
			}
		});


	}


	async function loadBindRoleOption() {

		try {
			const response = await fetch('@baseUrl/RoleAPI/GetAllRoles', {
				method: 'GET',
				headers: {
					'Accept': 'application/json'
				}
			});

			const data = await response.json();

			if (data.isSuccess) {

				console.log("Permissions loaded:", data.data);
				var arrayDta=data.data;
				 var dropdowns = $('#ddlRole');
							dropdowns.empty();
							dropdowns.append(
								$('<option>', {
								value: '0',
								text: 'Select',
								selected: true,
								disabled: true
								})
							);

							$.each(data.data, function(index, role) {
									dropdowns.append($('<option >', {
									value: role.id,
									text: role.name
								}));
							});
			}
		} catch (error) {
			console.error('Fetch error:', error);
		}
	}

</script>
