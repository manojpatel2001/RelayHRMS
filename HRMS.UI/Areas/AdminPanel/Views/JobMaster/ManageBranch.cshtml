@inject IConfiguration Configuration
@{
	Layout = "~/Areas/AdminPanel/Views/Shared/_AdminLayout.cshtml";
	string baseUrl = Configuration["BaseUrlSettings:baseUrl"];
	var uri = new Uri(baseUrl);
	string baseAPIDomainUrl = $"{uri.Scheme}://{uri.Host}:{uri.Port}";
}


<div class="card">
	<div class="card-header bg-transparent ml-0 py-0">
		<div class="row">
			<div class="col-6">
				<h6 class="pt-2 mb-0">
					Manage Branch
				</h6>
			</div>

			<div class="col-6 d-flex justify-content-end align-items-center">
				<div class="font-22 pl-2" style="color:#32393f; cursor:pointer;">
					<button id="addBranch"
							type="button"
							class="btn mr-1 rounded-1"
							style="background-color:#2395c6; color:white;">
						Add Branch
					</button>
				</div>
			</div>
		</div>
	</div>
	<div class="card-body">
		
		<div class="row">
			<div class="col-md-12">
				<div class="form-group">

					<div class="grid-wrapper " style="position: relative; ">
						<div id="grid-loader" class="grid-loader justify-content-center align-items-center flex-column "
							 style="display: none;  inset: 0; background: rgba(255,255,255,0.6); z-index: 10; ">
							<img src="@baseAPIDomainUrl/loders/loder.png" class="grid-logo-spinner" style="width: 30px;                                            height: 30px; animation: spin 1s linear infinite;" />
							<div class="grid-loading-text text-dark" style="font-size: 16px;">Loading...</div>

						</div>
						<div id="gridTag">
						   <div class="rowCount" id="rowCount1"></div>
					       <div id="gridContainer"></div>
						</div>
						<div id="noRecord" style="display:none;">
							No Record Found!
                         </div>
					
				 
				 </div>

					

				</div>
			</div>
		</div>
	</div>
</div>


<div class="modal fade" id="addBranchModel" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-xl">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title btn-heading-title" id="exampleModalLabel"><span id="formType">Add</span> Branch</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body modal-body-font">
				<div class="row">
					<div class="col-md-4">
						<div class="form-group mt-3 position-relative">
							<input type="text"
								   data-trim-input
								   class="form-control floating-input"
								   placeholder="Branch Name"
								   id="txtBranchName" />
							<label class="floating-label" for="txtBranchName">Branch Name <span class="required-star">*</span></label>

						</div>
						<span id="spnBranchName" style="color:red; display:none;">Please Enter Branch Name</span>

					</div>
					<div class="col-md-4">
						<div class="form-group mt-3 position-relative">
							<input type="text"
								   data-trim-input
								   class="form-control floating-input"
								   placeholder="Branch Code"
								   id="txtBranchCode" />
							<label class="floating-label" for="txtBranchCode">Branch Code <span class="required-star">*</span></label>
						</div>
						<span id="spnBranchCode" style="color:red; display:none;">Please Enter Branch Code</span>

					</div>
					
					

					<div class="col-md-4">
						<div class="form-group mt-3 position-relative">
							<select id="drpStatenew" class="form-control floating-input">
								<option selected value="">Select</option>
							</select>
							<label class="floating-label" for="drpStatenew">State <span class="required-star">*</span></label>

						</div>
						<span id="spnStatenew" style="color:red; display:none;">Please Select State</span>

					</div>

					<div class="col-md-4">

						<div class="form-group mt-3 position-relative">
							<select id="drpCity" class="form-control floating-input">
								<option selected value="">Select</option>
							</select>
							<label class="floating-label" for="drptCity">City <span class="required-star">*</span></label>

						</div>

						<span id="spnCity" style="color:red; display:none;">Please Enter City</span>

					</div>

					<div class="col-md-4">
						<div class="form-group mt-3 position-relative">
							<select id="drpCountry" class="form-control floating-input">
								<option selected value="India">India</option>
								<option  disabled value="">Select</option>
								
							</select>
							<label class="floating-label" for="drpCountry">Country <span class="required-star">*</span></label>

						</div>
						<span id="spnCountry" style="color:red; display:none;">Please Select Country</span>

					</div>


					
					<div class="col-md-4">
						<div class="form-group mt-3 position-relative">
							<input type="text"
								   data-trim-input
								   class="form-control floating-input"
								   placeholder="GSTIN No"
								   id="txtGSTINNo" />
							<label class="floating-label" for="txtESICNo">GSTIN No</label>

						</div>
					</div>

					<div class="col-md-4">
						<div class="form-group mt-3 position-relative">
							<textarea data-trim-input
								class="form-control floating-input"
									  
									  placeholder="Address"
									  id="txtAddress"></textarea>
							<label class="floating-label" for="txtAddress">Address</label>

						</div>
					</div>

					<div class="col-md-4">
						<div class="mt-4 ">
							<label for="IsActive">IsActive </label>
							<input type="checkbox"
								checked
								   id="IsActive" />
						</div>
					</div>

				</div>




			</div>
			<div class="modal-footer btn-heading-title">
				<button type="button" class="btn btn-primary" id="btnCreateBranch" style="background-color:#2395c6; color:white;">Create</button>
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
			</div>
		</div>
	</div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script>
	const Token=localStorage.getItem("authToken");
	const userId=localStorage.getItem("EmployeeId");
	let branchId=0;
	$(() => {
		loadDataTable();
		BindState();
	});


    $('#drpCity').on('focus', function () {
		const optionsCount = $(this).find('option').length;

		// Check if only the default option is present (no cities bound)
		if (optionsCount <= 1) {
			round_error_noti('Please select state first');
		}
	});

	 async function BindState(){

		$.ajax({
		type: "GET",
		url: "@baseUrl/StateAPI/GetAllState",
		headers: {
					'Authorization': 'Bearer ' + Token
				},
		success: function(data) {
				if(data.isSuccess){
						var dropdown = $('#drpStatenew');
					dropdown.empty();
					dropdown.append('<option disabled selected value="">Select</option>');
					$.each(data.data, function(index, company) {
						dropdown.append($('<option>', {
							value: company.stateId,
							text: company.stateName
						}));
					});


				}
		},
		error: function(xhr, status, error) {
			console.error("Unable to load state");
		}
	})

	 }


function BindCity() {
	  var stateId = $("#drpStatenew").val();
	  if (!stateId) {
		return Promise.resolve();  // return a resolved promise if no state selected
	  }

	  // Return the ajax Promise so caller can await it
	  return $.ajax({
		type: "GET",
		url: "@baseUrl/BranchAPI/GetAllCityByStateId/" + stateId,
		headers: {
		  'Authorization': 'Bearer ' + Token
		},
		success: function (data) {
		  if (data.isSuccess) {
			var dropdown = $('#drpCity');
			dropdown.empty();
			dropdown.append('<option disabled selected value="">Select</option>');
			$.each(data.data, function (index, company) {
			  dropdown.append($('<option>', {
				value: company.cityId,
				text: company.cityName
			  }));
			});
		  } else {
			round_error_noti("No city available for this state");
		  }
		},
		error: function (xhr, status, error) {
		  console.error("Unable to load city");
		}
	  });
	}





	
	function loadDataTable() {
			$('#grid-loader').addClass('d-flex').show();
		$.ajax({
			type: "GET",
			url: '@baseUrl/BranchAPI/GetAllBranches',
			headers: {
			  'Authorization': 'Bearer ' + Token
			},
			success: function (response) {
				if(response.isSuccess){
					$("#noRecord").hide();
					$("#gridTag").show();
				$("#gridContainer").dxDataGrid({
					dataSource: response.data,
					columns: [

						{ dataField: 'branchName', caption: 'Branch Name' },
						{ dataField: 'branchCode', caption: 'Branch Code' },
						{ dataField: 'cityName', caption: 'City Name' },
						{ dataField: 'stateName', caption: 'State Name' },
						{ dataField: 'countryName', caption: 'Country Name' },
						{ dataField: 'address', caption: 'Address' }, // corrected spelling from 'adress'
						{ dataField: 'gstiN_No', caption: 'GSTIN No' }, // match exact key 'gstiN_No'
						{
							dataField: 'isActive',
							caption: 'Is Active',
							calculateCellValue: function (data) {
							return data.isActive ? "Yes" : "No";
							}
						},
						
	

						{
							dataField: '',
							caption: '',
							dataType: 'string',
							format: '',
							type: 'buttons',
							width: '50px',
							cellTemplate: function (container, options) {

								var buttonElement = $('<div class="d-flex order-actions">' +
									'<a href="javascript:;" class="edit-action" title="Update Branch">' +
									'<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-eyedropper" viewBox="0 0 16 16">' +
									'<path d="M13.354.646a1.207 1.207 0 0 0-1.708 0L8.5 3.793l-.646-.647a.5.5 0 1 0-.708.708L8.293 5l-7.147 7.146A.5.5 0 0 0 1 12.5v1.793l-.854.853a.5.5 0 1 0 .708.707L1.707 15H3.5a.5.5 0 0 0 .354-.146L11 7.707l1.146 1.147a.5.5 0 0 0 .708-.708l-.647-.646 3.147-3.146a1.207 1.207 0 0 0 0-1.708zM2 12.707l7-7L10.293 7l-7 7H2z"/>' +
									'</svg>' +
									'</a>' +
									'</div>')
									.on('dxclick', function () {
										updateBranch(options.data);
									}).appendTo(container);

								var svgElement = buttonElement.find('svg');  // Accessing the svg element directly

								svgElement.attr('title', 'Update branch');
							}
						},

						{
							dataField: '',
							caption: '',
							dataType: 'string',
							format: '',
							type: 'buttons',
							width: '50px',
							cellTemplate: function (container, options) {

								var buttonElement = $('<div class="d-flex order-actions">' +
									'<a href="javascript:;" class="delete-action" title="Delete Branch">' +
									'<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash-fill" viewBox="0 0 16 16">' +
									'<path d="M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5M8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5m3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0"/>' +
									'</svg>' +
									'</a>' +
									'</div>')
									.on('dxclick', function () {
										deleteBranch(options.data);
									}).appendTo(container);

								var svgElement = buttonElement.find('svg');  // Accessing the svg element directly

								svgElement.attr('title', 'Delete Branch');
							}
						}

					],
					columnsAutoWidth: true,
					wordWrapEnabled: false,
					rowAlternationEnabled: false,
					showBorders: true,
					grouping: { autoExpandAll: true },
					paging: { pageSize: 10 },
					pager: { showPageSizeSelector: true, allowedPageSizes: [10, 25, 50, 100] },
					headerFilter: { visible: true },
					filterRow: { visible: true, applyFilter: "auto" },
					allowColumnResizing: true,
					groupPanel: { visible: true },
					searchPanel: { visible: true, width: 240, placeholder: "Search..." },
					allowColumnReordering: true,
					columnFixing: { enabled: false },
					
					onContentReady(e) {
						jQuery('.rowCount').html('Total Records: ' + jQuery("#gridContainer").dxDataGrid('instance').totalCount());
							$('#grid-loader').removeClass('d-flex').hide();

					}
				}).dxDataGrid('instance');

				}
				else{
					$("#noRecord").show();
					$("#gridTag").hide();
						 $('#grid-loader').removeClass('d-flex').hide();
				}
			},
			error: function () {
					$("#noRecord").show();
						$("#gridTag").hide();
							 $('#grid-loader').removeClass('d-flex').hide();
			  console.error("Unable to load branch");
			}
		});
	}

	$("#drpStatenew").change(() => {
	  BindCity();
	})

	$(document).ready(function () {
	  $("#addBranch").click(() => {
		resetBranch();
		$("#addBranchModel").modal('show');
	  });
	});



	$("#btnCreateBranch").click(() => {

		$("#btnCreateBranch").prop('disabled', true);

	// Read and sanitize values
	var txtBranchName = $("#txtBranchName").val();
	var txtBranchCode = $("#txtBranchCode").val();
	var txtAddress = $("#txtAddress").val() || null;
	var txtCity = $("#drpCity").val();
	var drpStatenew = $("#drpStatenew").val(); // Prefer value
	var drpCountry = $("#drpCountry").val();   // Prefer value
	var GSTINNo = $("#txtGSTINNo").val() || null;
	var isActive = $('#IsActive').is(':checked');
	

	// Initialize validation flag
	var isValid = true;

	// Validate each field and set null if invalid
	if (txtBranchName === "") {
		$("#spnBranchName").show();
		txtBranchName = null;
		isValid = false;
	} else {
		$("#spnBranchName").hide();
	}

	if (txtBranchCode === "") {
		$("#spnBranchCode").show();
		txtBranchCode = null;
		isValid = false;
	} else {
		$("#spnBranchCode").hide();
	}

	if (txtCity === "") {
		$("#spnCity").show();
		txtCity = null;
		isValid = false;
	} else {
		$("#spnCity").hide();
	}

	if (!drpStatenew ) {
		$("#spnStatenew").show();
		drpStatenew = null;
		isValid = false;
	} else {
		$("#spnStatenew").hide();
	}

	if (!drpCountry ) {
		$("#spnCountry").show();
		drpCountry = null;
		isValid = false;
	} else {
		$("#spnCountry").hide();
	}

	
	// If any field is invalid, re-enable button and stop
	if (!isValid) {
		$("#btnCreateBranch").prop('disabled', false);
		return;
	}

	    var createdBy=branchId==0?userId:null;
		var updatedBy=branchId==0?null:userId;

			var branch = {
				BranchId:branchId,
				BranchName: txtBranchName, BranchCode: txtBranchCode, 
				Address: txtAddress, CityId: txtCity, StateId: drpStatenew, CountryName: drpCountry,
				  GSTIN_No: GSTINNo,IsActive:isActive,CreatedBy:createdBy,UpdatedBy:updatedBy
			}
			
			var branchIdUrl=branchId==0?"@baseUrl/BranchAPI/CreateBranch":"@baseUrl/BranchAPI/UpdateBranch";
			var methodType=branchId==0?"POST":"PUT"


			$.ajax({
				url:branchIdUrl,
				type: methodType,
				contentType: 'application/json',
				headers: {
							'Authorization': 'Bearer ' + Token
						},
				data: JSON.stringify(branch),
				success: function (response) {
					
					if (response.isSuccess) 
					{
						   round_success_noti(response.responseMessage);
						   loadDataTable();
							   resetBranch();
					    $("#addBranchModel").modal('hide');

					}
					else {
						round_error_noti(response.responseMessage);
					}
					$("#btnCreateBranch").prop('disabled', false);
				},
				error: function (xhr) {
					$("#btnCreateBranch").prop('disabled', false);
					round_error_noti('Unable to save details');
				}
			});

	


	});

	function resetBranch()
	{
		$("#txtBranchName").val("");
		$("#txtBranchCode").val("");
		$("#txtCompanyName").val("");
		$("#txtAddress").val("");
		$("#drpCity").val("");
		$("#drpStatenew").val("");
			$("#drpCountry").val("India");
			$("#IsActive").prop("checked", true);
		$("#txtGSTINNo").val("");
	
		branchId = 0;
		$("#spnBranchName").hide();
		$("#spnBranchCode").hide();
		$("#spnCity").hide();
		$("#spnCountry").hide();
		$("#spnStatenew").hide();
		$("#formType").text("Add");
		$("#btnCreateBranch").text("Save");
		$("#btnCreateBranch").prop('disabled',false);
	}
	function formatDate(date) {
		if (!date) return '';
		var d = new Date(date);
		return d.toISOString().split('T')[0];
	}


	async function updateBranch(data) {
		resetBranch();
		// Setting values from data to respective form fields
		$("#txtBranchName").val(data.branchName||"");
		$("#txtBranchCode").val(data.branchCode||"");
		$("#txtCompanyName").val(data.companyName||"");
		$("#txtAddress").val(data.address||"");
				$("#drpStatenew").val(data.stateId||"");  // Assuming the state dropdown value is based on state ID
						$("#drpStatenew").val(data.stateId||"");  // Assuming the state dropdown value is based on state ID
						await  BindCity();
		$("#drpCity").val(data.cityId||"");
			$("#drpCountry").val(data.countryName||"India");  // Set country name to selected option text
		$("#txtGSTINNo").val(data.gstiN_No||""); // Assuming you need just the date part
		$("#IsActive").prop("checked", data.isActive||false);  // Setting checkbox checked state
		
		branchId = data.branchId;
		$("#btnCreateBranch").prop('disabled',false);
		$("#btnCreateBranch").text("Update");
		$("#formType").text("Update");
		// Show the modal
		$("#addBranchModel").modal('show');
	}



	function deleteBranch(data) {

		// Show confirmation dialog
		 if (!confirm("Are you sure you want to delete?")) 
		 {
            return; // Cancel the delete operation
		 }

			   var deleteObj = {
				   id:data.branchId,
				   deletedBy: userId // Set this to the actual user if needed
			   };

		
			$.ajax({
				url: '@baseUrl/BranchAPI/DeleteBranch',
				type: "DELETE",
				data: JSON.stringify(deleteObj),
				contentType: 'application/json',
				headers: {
				  'Authorization': 'Bearer ' + Token
				},
				success: function (response) {
					if (response.isSuccess)
					{
						   round_success_noti(response.responseMessage);
						   loadDataTable();

					}
					else {
						round_error_noti(response.responseMessage);
					}
				},
				error: function (xhr, status, error) {
					// Handle error: provide feedback to the user
					round_error_noti('An error occurred while deleting the branch. Please try again');
				}
			});
		
	}


</script>