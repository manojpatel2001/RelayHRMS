@inject IConfiguration Configuration
@{
	ViewData["Title"] = "Home Page";
	Layout = "~/Areas/AdminPanel/Views/Shared/_AdminLayout.cshtml";
	string baseUrl = Configuration["BaseUrlSettings:baseUrl"];
}


<div class="card">
	<div class="card-header bg-transparent ml-0 py-0">
		<div class="row">
			<div class="col-6">
				<h6 class="pt-2 mb-0">
					Manage Branch
				</h6>
			</div>

			<div class="col-6 d-flex justify-content-end align-items-center">
				<div class="font-22 pl-2" style="color:#32393f; cursor:pointer;">
					<button id="addBranch"
							type="button"
							class="btn mr-1 rounded-1"
							style="background-color:#2395c6; color:white;">
						Add Branch
					</button>
				</div>
			</div>
		</div>
	</div>
	<div class="card-body">
		
		<div class="row">
			<div class="col-md-12">
				<div class="form-group">
					<div class="rowCount" id="rowCount1"></div>
					<div id="gridContainer">
						@* <div class="spinner-border text-primary" role="status">
							<span class="visually-hidden">Loading...</span>
						</div> *@
						<div class="d-flex justify-content-center align-items-center" style="height: 10vh;">
							<div class="spinner-border text-primary" role="status">
								<span class="visually-hidden">Loading...</span>
							</div>
						</div>
					</div>

				</div>
			</div>
		</div>
	</div>
</div>


<div class="modal fade" id="addBranchModel" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-xl">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title btn-heading-title" id="exampleModalLabel">Create Branch</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body modal-body-font">
				<div class="row">
					<div class="col-md-4">
						<div class="form-group mt-3 position-relative">
							<input type="text"
								   class="form-control floating-input"
								   placeholder="Branch Name"
								   id="txtBranchName" />
							<label class="floating-label" for="txtBranchName">Branch Name</label>
							<span id="spnBranchName" style="color:red; display:none;">Please Enter Branch Name</span>

						</div>
					</div>
					<div class="col-md-4">
						<div class="form-group mt-3 position-relative">
							<input type="text"
								   class="form-control floating-input"
								   placeholder="Branch Code"
								   id="txtBranchCode" />
							<span id="spnBranchCode" style="color:red; display:none;">Please Enter Branch Code</span>
							<label class="floating-label" for="txtBranchCode">Branch Code</label>
						</div>
					</div>
					<div class="col-md-4">
						<div class="form-group mt-3 position-relative">
							<input type="text"
								   class="form-control floating-input"
								   placeholder="Company Name"
								   id="txtCompanyName" />
							<label class="floating-label" for="txtBranchCode">Company Name</label>

						</div>
					</div>
				</div>


				<div class="row">
					<div class="col-md-4">
						<div class="form-group mt-3 position-relative">
							<textarea class="form-control floating-input"
									  placeholder="Address"
									  id="txtAddress"></textarea>
							<label class="floating-label" for="txtAddress">Address</label>


						</div>
					</div>
					<div class="col-md-4">
						<div class="form-group mt-3 position-relative">
							<input type="text"
								   class="form-control floating-input"
								   placeholder="City"
								   id="txtCity" />
							<span id="spnCity" style="color:red; display:none;">Please Enter City</span>
							<label class="floating-label" for="txtCity">City</label>

						</div>
					</div>
					<div class="col-md-4">
						<div class="form-group mt-3 position-relative">
							<select id="drpStatenew" class="form-control floating-input">

								<option selected="selected" value="Select State">Select State</option>
								<option value="73">Andaman and Nicobar Islands</option>
								<option value="74">Andhra Pradesh</option>
								<option value="75">Arunachal Pradesh</option>
								<option value="76">Assam</option>
								<option value="77">Bihar</option>
								<option value="78">Chandigarh</option>
								<option value="79">Chhattisgarh</option>
								<option value="80">Dadra and Nagar Haveli</option>
								<option value="81">Daman and Diu</option>
								<option value="82">Delhi</option>
								<option value="83">Goa</option>
								<option value="84">Gujarat</option>
								<option value="85">Haryana</option>
								<option value="86">Himachal Pradesh</option>
								<option value="87">Jammu and Kashmir</option>
								<option value="88">Jharkhand</option>
								<option value="89">Karnataka</option>
								<option value="90">Kerala</option>
								<option value="91">Lakshadweep</option>
								<option value="92">Madhya Pradesh</option>
								<option value="93">Maharashtra</option>
								<option value="94">Manipur</option>
								<option value="95">Meghalaya</option>
								<option value="96">Mizoram</option>
								<option value="97">Nagaland</option>
								<option value="98">Orissa</option>
								<option value="99">Puducherry</option>
								<option value="100">Punjab</option>
								<option value="101">Rajasthan</option>
								<option value="102">Sikkim</option>
								<option value="103">Tamil Nadu</option>
								<option value="104">Tripura</option>
								<option value="106">Uttar Pradesh</option>
								<option value="105">Uttarakhand</option>
								<option value="107">West Bengal</option>

							</select>
							<span id="spnStatenew" style="color:red; display:none;">Please Select State</span>
							<label class="floating-label" for="drpStatenew">State</label>

						</div>
					</div>
				</div>


				<div class="row">
					<div class="col-md-4">
						<div class="form-group mt-3 position-relative">
							<select id="drpCountry" class="form-control floating-input">
								<option selected="selected" value="Select Country">Select Country</option>
								<option value="1">INDIA</option>
							</select>
							<span id="spnCountry" style="color:red; display:none;">Please Select Country</span>
							<label class="floating-label" for="drpCountry">Country</label>

						</div>
					</div>
					<div class="col-md-4">
						<div class="form-group mt-3 position-relative">
							<input type="date"
								   class="form-control floating-input"
								   placeholder="Salary Start Date"
								   id="txtSalaryStartDate" />
							<span id="spnSalaryStartDate" style="color:red; display:none;">Please Enter Salary StartDate</span>
							<label class="floating-label" for="txtSalaryStartDate">Salary Start Date</label>

						</div>
					</div>
					<div class="col-md-2">
						<div class="form-group mt-3 position-relative">
							<label>Contractor Branch</label>
							<input type="checkbox"
								   class="form-control-input"
								   placeholder=""
								   id="txtContractorBranch" />

						</div>

					</div>
				</div>

				<div class="row">
					<div class="col-md-3">
						<div class="form-group mt-3 position-relative">
							<input type="text"
								   class="form-control floating-input"
								   placeholder="Registration Certificate No"
								   id="txtRegistrationCertificateNo" />
							<label class="floating-label" for="txtRegistrationCertificateNo">Registration Certificate No</label>

						</div>
					</div>
					<div class="col-md-3">
						<div class="form-group mt-3 position-relative">
							<input type="text"
								   class="form-control floating-input"
								   placeholder="Zone"
								   id="txtZone" />
							<label class="floating-label" for="txtZone">Zone</label>

						</div>
					</div>
					<div class="col-md-3">
						<div class="form-group mt-3 position-relative">
							<input type="text"
								   class="form-control floating-input"
								   placeholder="Ward Number"
								   id="txtWardNumber" />
							<label class="floating-label" for="txtWardNumber">Ward Number</label>

						</div>
					</div>
					<div class="col-md-3">
						<div class="form-group mt-3 position-relative">
							<input type="text"
								   class="form-control floating-input"
								   placeholder="Census Number"
								   id="txtCensusNumber" />
							<label class="floating-label" for="txtCensusNumber">Census Number</label>

						</div>
					</div>
				</div>


				<div class="row">
					<div class="col-md-3">
						<div class="form-group mt-3 position-relative">
							<input type="text"
								   class="form-control floating-input"
								   placeholder="PF No."
								   id="txtPFNo" />
							<label class="floating-label" for="txtPFNo">PF No.</label>

						</div>
					</div>
					<div class="col-md-3">
						<div class="form-group mt-3 position-relative">
							<input type="text"
								   class="form-control floating-input"
								   placeholder="ESIC No"
								   id="txtESICNo" />
							<label class="floating-label" for="txtESICNo">ESIC No</label>

						</div>
					</div>
					@* <div class="col-md-3">
						<div class="form-group mt-3 position-relative">
							<input type="text"
								   class="form-control floating-input"
								   placeholder="Ward Number"
								   id="txtWardNumber" />
							<label class="floating-label" for="txtBranchCode">Branch Code</label>

						</div>
					</div> *@

				</div>


			</div>
			<div class="modal-footer btn-heading-title">
				<button type="button" class="btn btn-primary" id="btnCreateBranch" style="background-color:#2395c6; color:white;">Create</button>
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
			</div>
		</div>
	</div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script>

	$(() => {
		loadDataTable();
	});

	function BindState() {
		$.ajax({
			type: "GET",
			contentType: "application/json; charset=utf-8",
			url: '@baseUrl/StateAPI/GetAllState',
			success: function (data) {
				jQuery('#drpState').empty();
				jQuery('#drpState').append('<option value="0">Select State</option>');
				jQuery.each(data.data,
					function (i, v) {
						jQuery('#drpState').append('<option id="VID" value="' + v.id + '">' + v.visaTitle + '</option>');
					});
			}
		});
	}
	function loadDataTable() {
		$.ajax({
			type: "GET",
			url: '@baseUrl/BranchAPI/GetAllBranch',
			success: function (data) {
				$("#gridContainer").dxDataGrid({
					dataSource: data.data,
					stateStoring: { enabled: true, type: 'localStorage', storageKey: 'technicalscreeningLocalstorage' },
					columns: [

						{ dataField: 'branchName', caption: 'Branch Name', dataType: 'string', format: '' },
						{ dataField: 'branchCode', caption: 'Branch Code', dataType: 'string', format: '' },
						{ dataField: 'cityName', caption: 'City Name', dataType: 'string', format: '' },
						{ dataField: 'state', caption: 'State Name', dataType: 'string', format: '' },
						{ dataField: 'countryName', caption: 'Country Name', dataType: 'string', format: '' },
						{
							dataField: 'isEnabled',
							caption: 'Status',
							dataType: 'string',
							calculateCellValue: function (data) {
								return data.isEnabled ? "Active" : "Inactive"; // Based on isEnabled field value
							}
						},
						{
							dataField: '',
							caption: '',
							dataType: 'string',
							format: '',
							type: 'buttons',
							width: '50px',
							cellTemplate: function (container, options) {

								var buttonElement = $('<div class="d-flex order-actions">' +
									'<a href="javascript:;" class="edit-action" title="Screening">' +
									'<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-eyedropper" viewBox="0 0 16 16">' +
									'<path d="M13.354.646a1.207 1.207 0 0 0-1.708 0L8.5 3.793l-.646-.647a.5.5 0 1 0-.708.708L8.293 5l-7.147 7.146A.5.5 0 0 0 1 12.5v1.793l-.854.853a.5.5 0 1 0 .708.707L1.707 15H3.5a.5.5 0 0 0 .354-.146L11 7.707l1.146 1.147a.5.5 0 0 0 .708-.708l-.647-.646 3.147-3.146a1.207 1.207 0 0 0 0-1.708zM2 12.707l7-7L10.293 7l-7 7H2z"/>' +
									'</svg>' +
									'</a>' +
									'</div>')
									.on('dxclick', function () {
										updateBranch(options.data);
									}).appendTo(container);

								var svgElement = buttonElement.find('svg');  // Accessing the svg element directly

								svgElement.attr('title', 'Technical Screening');
							}
						},

						{
							dataField: '',
							caption: '',
							dataType: 'string',
							format: '',
							type: 'buttons',
							width: '50px',
							cellTemplate: function (container, options) {

								var buttonElement = $('<div class="d-flex order-actions">' +
									'<a href="javascript:;" class="delete-action" title="Screening">' +
									'<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash-fill" viewBox="0 0 16 16">' +
									'<path d="M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5M8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5m3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0"/>' +
									'</svg>' +
									'</a>' +
									'</div>')
									.on('dxclick', function () {
										deleteBranch(options.data);
									}).appendTo(container);

								var svgElement = buttonElement.find('svg');  // Accessing the svg element directly

								svgElement.attr('title', 'Delete Branch');
							}
						}

					],
					columnsAutoWidth: true,
					wordWrapEnabled: false,
					rowAlternationEnabled: false,
					showBorders: true,
					grouping: { autoExpandAll: true },
					paging: { pageSize: 10 },
					pager: { showPageSizeSelector: true, allowedPageSizes: [10, 25, 50, 100] },
					headerFilter: { visible: true },
					filterRow: { visible: true, applyFilter: "auto" },
					allowColumnResizing: true,
					groupPanel: { visible: true },
					searchPanel: { visible: true, width: 240, placeholder: "Search..." },
					customizeColumns: function (columns) {
						columns.forEach(function (column) {
							if (column.dataField === 'enrolled') {
								// Add editor options for date
								column.editorOptions = {
									type: 'date',
									onKeyDown: function (e) {
										var key = e.event.key;
										// Allow only numbers (0-9), backspace (8), delete (46), and common date separators like '-' and '/'
										if (!/^[0-9\/\-]$/.test(key) && e.event.keyCode !== 8 && e.event.keyCode !== 46) {
											e.event.preventDefault();  // Prevent the default behavior for invalid keys
										}
									},
									onInput: function (e) {
										// Automatically format or handle input if necessary
										let value = e.component.option('value');
										// Add additional formatting logic if needed
									}
								};
							}
						});
					},
					allowColumnReordering: true,
					columnFixing: { enabled: false },
					onExporting: function (e) {
						e.component.beginUpdate();
						e.component.columnOption("Button", "visible", false);
						e.component.columnOption("Add", "visible", false);
					},
					onExported: function (e) {
						e.component.columnOption("Button", "visible", true);
						e.component.columnOption("Add", "visible", true);
						e.component.endUpdate();
					},
					onCellPrepared: function (e) {
						if (e.rowType === "header") {
							e.cellElement.css("text-align", "center");
							e.cellElement.css("font-weight", "bold");
						}
						if (e.rowType === "group") {
							e.cellElement.css("text-align", "center");
						}
					},
					onContentReady(e) {
						jQuery('.rowCount').html('Total Records: ' + jQuery("#gridContainer").dxDataGrid('instance').totalCount());
					}
				}).dxDataGrid('instance');
			}
		});
	}


	$("#addBranch").click(() => {
		BindState();
		$("#addBranchModel").modal('show');
		$("#btnCreateBranch").text("Save");


		$("#spnBranchName").hide();
		$("#spnBranchCode").hide();
		$("#spnCity").hide();
		$("#spnStatenew").hide();
		$("#spnCountry").hide();
		$("#spnSalaryStartDate").hide();

		$("#txtBranchName").val("");
		$("#txtBranchCode").val("");
		$("#txtCompanyName").val("");
		$("#txtAddress").val("");
		$("#txtCity").val("");
		$("#drpStatenew option:selected").text("Select State");  // Reset state dropdown value
		$("#drpCountry option:selected").text("Select Country");  // Reset country dropdown (assuming it's a dropdown with a value to reset)
		$("#txtSalaryStartDate").val("");  // Clear date field
		$("#txtContractorBranch").prop("checked", false);  // Uncheck the checkbox
		$("#txtRegistrationCertificateNo").val("");
		$("#txtZone").val("");
		$("#txtWardNumber").val("");
		$("#txtCensusNumber").val("");
		$("#txtPFNo").val("");
		$("#txtESICNo").val("");
		branchIdUpdate=0;
	});


	$("#btnCreateBranch").click(() => {


		var txtBranchName = $("#txtBranchName").val();
		var txtBranchCode = $("#txtBranchCode").val();
		var txtCompanyName = $("#txtCompanyName").val();
		var txtAddress = $("#txtAddress").val();
		var txtCity = $("#txtCity").val();
		var drpStatenew = $("#drpStatenew option:selected").text();
		var drpCountry = $("#drpCountry option:selected").text();
		var txtSalaryStartDate = $("#txtSalaryStartDate").val();
		var txtContractorBranch = $("#txtContractorBranch").prop("checked");
		var txtRegistrationCertificateNo = $("#txtRegistrationCertificateNo").val();
		var txtZone = $("#txtZone").val();
		var txtWardNumber = $("#txtWardNumber").val();
		var txtCensusNumber = $("#txtCensusNumber").val();
		var txtPFNo = $("#txtPFNo").val();
		var txtESICNo = $("#txtESICNo").val();
		var txtWardNumber = $("#txtWardNumber").val();



		// Flag to track validation status
		var isValid = true;

		// Validate txtBranchName
		if (!txtBranchName) {
			$("#spnBranchName").show();
			isValid = false;
		} else {
			$("#spnBranchName").hide();
		}

		// Validate txtBranchCode
		if (!txtBranchCode) {
			$("#spnBranchCode").show();
			isValid = false;
		} else {
			$("#spnBranchCode").hide();
		}

		// Validate txtCity
		if (!txtCity) {
			$("#spnCity").show();
			isValid = false;
		} else {
			$("#spnCity").hide();
		}

		// Validate drpStatenew
		if (!drpStatenew) {
			$("#spnStatenew").show();
			isValid = false;
		} else {
			$("#spnStatenew").hide();
		}

		// Validate drpCountry
		if (!drpCountry) {
			$("#spnCountry").show();
			isValid = false;
		} else {
			$("#spnCountry").hide();
		}

		// Validate txtSalaryStartDate
		if (!txtSalaryStartDate) {
			$("#spnSalaryStartDate").show();
			isValid = false;
		} else {
			$("#spnSalaryStartDate").hide();
		}



		if (branchIdUpdate == 0) {
			var branch = {
				BranchName: txtBranchName, BranchCode: txtBranchCode, CompanyName: txtCompanyName,
				Address: txtAddress, CityName: txtCity, State: drpStatenew, CountryName: drpCountry,
				SalaryStartDate: txtSalaryStartDate, ContractorBranch: txtContractorBranch, RegistrationCertificateNo: txtRegistrationCertificateNo,
				Zone: txtZone, WardNumber: txtWardNumber, CensusNumber: txtCensusNumber, PFNo: txtPFNo, ESICNo: txtESICNo
			}

		} else {
			var branch = {
				BranchId: branchIdUpdate, BranchName: txtBranchName, BranchCode: txtBranchCode, CompanyName: txtCompanyName,
				Address: txtAddress, CityName: txtCity, State: drpStatenew, CountryName: drpCountry,
				SalaryStartDate: txtSalaryStartDate, ContractorBranch: txtContractorBranch, RegistrationCertificateNo: txtRegistrationCertificateNo,
				Zone: txtZone, WardNumber: txtWardNumber, CensusNumber: txtCensusNumber, PFNo: txtPFNo, ESICNo: txtESICNo
			}

		}


		if (isValid) {
			$.ajax({
				url: '@baseUrl/BranchAPI/CreateBranch',
				type: "POST",
				data: JSON.stringify(branch),
				dataType: "json",
				contentType: 'application/json',
				success: function (data) {
					loadDataTable();
					$("#addBranchModel").modal('hide');
	round_success_noti('Branch details are saved');

					$("#txtBranchName").val("");
					$("#txtBranchCode").val("");
					$("#txtCompanyName").val("");
					$("#txtAddress").val("");
					$("#txtCity").val("");
					$("#drpStatenew").val("");  // Reset state dropdown value
					$("#drpCountry").val("");  // Reset country dropdown (assuming it's a dropdown with a value to reset)
					$("#txtSalaryStartDate").val("");  // Clear date field
					$("#txtContractorBranch").prop("checked", false);  // Uncheck the checkbox
					$("#txtRegistrationCertificateNo").val("");
					$("#txtZone").val("");
					$("#txtWardNumber").val("");
					$("#txtCensusNumber").val("");
					$("#txtPFNo").val("");
					$("#txtESICNo").val("");


					branchIdUpdate = 0;
				},
				error: function (xhr) {
					round_error_noti('Unable to store details');
				}
			});

		}


	});

	var branchIdUpdate = 0;
	function updateBranch(data) {

		$("#btnCreateBranch").text("Update");

		branchIdUpdate = data.branchId;

		// Setting values from data to respective form fields
		$("#txtBranchName").val(data.branchName);
		$("#txtBranchCode").val(data.branchCode);
		$("#txtCompanyName").val(data.companyName);
		$("#txtAddress").val(data.address);
		$("#txtCity").val(data.cityName);
		$("#drpStatenew option:selected").text(data.state);  // Assuming the state dropdown value is based on state ID
		$("#drpCountry option:selected").text(data.countryName);  // Set country name to selected option text
		$("#txtSalaryStartDate").val(data.salaryStartDate.split("T")[0]); // Assuming you need just the date part
		$("#txtContractorBranch").prop("checked", data.contractorBranch);  // Setting checkbox checked state
		$("#txtRegistrationCertificateNo").val(data.registrationCertificateNo);
		$("#txtZone").val(data.zone);
		$("#txtWardNumber").val(data.wardNumber);
		$("#txtCensusNumber").val(data.censusNumber);
		$("#txtPFNo").val(data.pfNo);
		$("#txtESICNo").val(data.esicNo);

		// Show the modal
		$("#addBranchModel").modal('show');
	}



	function deleteBranch(data) {

		// Show confirmation dialog
		var isConfirmed = confirm("Are you sure you want to delete this branch?");

		if (isConfirmed) {
			var deleteRecord = {
				Id: data.branchId,
				DeletedBy: ""  // You may want to pass the current user's ID or name here.
			};

			$.ajax({
				url: '@baseUrl/BranchAPI/Delete',
				type: "DELETE",
				data: JSON.stringify(deleteRecord),
				dataType: "json",
				contentType: 'application/json',
				success: function (response) {
					// Handle success: reload the table to reflect the changes
					loadDataTable();

					// Optionally, show a success message or notification to the user
					round_success_noti('Branch deleted successfully');
				},
				error: function (xhr, status, error) {
					// Handle error: provide feedback to the user
					round_error_noti('An error occurred while deleting the branch. Please try again');
				}
			});
		} else {
			// If the user cancels the confirmation, do nothing
			round_error_noti("Branch deletion was cancelled.");
		}
	}


</script>