@inject IConfiguration Configuration
@{
	ViewData["Title"] = "Shift Master";
	Layout = "~/Areas/AdminPanel/Views/Shared/_AdminLayout.cshtml";
	string baseUrl = Configuration["BaseUrlSettings:baseUrl"];
}

<div class="card">
	<div class="card-header bg-transparent ml-0 py-0">
		<div class="row">
			<div class="col-6">
				<h6 class="pt-2 mb-0">
					Shift Master
				</h6>
			</div>

			<div class="col-6 d-flex justify-content-end align-items-center">
				<div class="font-22 pl-2" style="color:#32393f; cursor:pointer;">
					<i class="fadeIn animated bx bx-refresh" id="getData" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Refresh Data"></i>
				</div>
			</div>
		</div>
	</div>
	<div class="card-body">
		<div class="row">
			<div class="col-md-12 btn-heading-title">
				<div class="input-group mb-2">
					<button id="addShift"
							type="button"
							class="btn mr-1 rounded-1"
							style="background-color:#2395c6; color:white;">
						Add Shift
					</button>
				</div>
			</div>
		</div>
		<div class="row">
			<div class="col-md-12">
				<div class="form-group">
					<div class="rowCount" id="rowCount1"></div>
					<div id="gridContainer">
						<div class="d-flex justify-content-center align-items-center" style="height: 10vh;">
							<div class="spinner-border text-primary" role="status">
								<span class="visually-hidden">Loading...</span>
							</div>
						</div>
					</div>

				</div>
			</div>
		</div>
	</div>
</div>
<div class="modal fade" id="addShiftModel" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-xl">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title btn-heading-title" id="exampleModalLabel">Add Shift</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body modal-body-font">
				<div class="row">
					<div class="col-md-3">
						<div class="form-group mt-3 position-relative">
							<input type="text"
								   class="form-control floating-input"
								   placeholder="Shift Name"
								   id="txtShiftName" />
							<span id="spnShiftName" style="color:red; display:none;">Please Enter Shift Name</span>
							<label class="floating-label" for="txtShiftName">Shift Name</label>

						</div>
					</div>
					<div class="col-md-3">
						<div class="form-group mt-3 position-relative">
							<input type="time"
								   class="form-control floating-input"
								   placeholder="Start Time"
								   id="txtStartTime" />
							<span id="spnStartTime" style="color:red; display:none;">Please Enter Start Time</span>
							<label class="floating-label" for="txtStartTime">Start Time</label>

						</div>
					</div>
					<div class="col-md-3">
						<div class="form-group mt-3 position-relative">
							<input type="time"
								   class="form-control floating-input"
								   placeholder="End Time"
								   id="txtEndTime" />
							<span id="spnEndTime" style="color:red; display:none;">Please Enter End Time</span>
							<label class="floating-label" for="txtEndTime">End Time</label>

						</div>
					</div>
					<div class="col-md-3">
						<div class="form-group mt-3 position-relative">
							<input type="text"
								   class="form-control floating-input"
								   placeholder="Duration"
								   id="txtDuration"
								   disabled />
							<label class="floating-label" for="txtDuration">Duration</label>

						</div>
					</div>
				</div>
				<div class="row">
					<div class="col-md-3">
						<div class="form-group mt-3 position-relative">
							<label>First Break</label>
						</div>
					</div>
					<div class="col-md-3">
						<div class="form-group mt-3 position-relative">
							<input type="time"
								   class="form-control floating-input"
								   placeholder="Start Time"
								   id="txtStartTimeB1" />
							<span id="spnStartTimeB1" style="color:red; display:none;">Please Enter Start Time</span>
							<label class="floating-label" for="txtStartTimeB1">Start Time</label>

						</div>
					</div>
					<div class="col-md-3">
						<div class="form-group mt-3 position-relative">
							<input type="time"
								   class="form-control floating-input"
								   placeholder="End Time"
								   id="txtEndTimeB1" />
							<span id="spnEndTimeB1" style="color:red; display:none;">Please Enter End Time</span>
							<label class="floating-label" for="txtEndTimeB1">End Time</label>

						</div>
					</div>
					<div class="col-md-3">
						<div class="form-group mt-3 position-relative">
							<input type="text"
								   class="form-control floating-input"
								   placeholder="Duration"
								   id="txtDurationB1"
								   disabled />
							<label class="floating-label" for="txtDurationB1">Duration</label>

						</div>
					</div>
				</div>
				<div class="row">
					<div class="col-md-3">
						<div class="form-group mt-3 position-relative">
							<label>Second Break</label>
						</div>
					</div>
					<div class="col-md-3">
						<div class="form-group mt-3 position-relative">
							<input type="time"
								   class="form-control floating-input"
								   placeholder="Start Time"
								   id="txtStartTimeB2" />
							<span id="spnStartTimeB2" style="color:red; display:none;">Please Enter Start Time</span>
							<label class="floating-label" for="txtStartTimeB2">Start Time</label>

						</div>
					</div>
					<div class="col-md-3">
						<div class="form-group mt-3 position-relative">
							<input type="time"
								   class="form-control floating-input"
								   placeholder="End Time"
								   id="txtEndTimeB2" />
							<span id="spnEndTimeB2" style="color:red; display:none;">Please Enter End Time</span>
							<label class="floating-label" for="txtEndTimeB2">End Time</label>

						</div>
					</div>
					<div class="col-md-3">
						<div class="form-group mt-3 position-relative">
							<input type="text"
								   class="form-control floating-input"
								   placeholder="Duration"
								   id="txtDurationB2"
								   disabled />
							<label class="floating-label" for="txtDurationB2">Duration</label>

						</div>
					</div>
				</div>
				<div class="row">
					<div class="col-md-3">
						<div class="form-group mt-3 position-relative">
							<label>Third Break</label>
						</div>
					</div>
					<div class="col-md-3">
						<div class="form-group mt-3 position-relative">
							<input type="time"
								   class="form-control floating-input"
								   placeholder="Start Time"
								   id="txtStartTimeB3" />
							<span id="spnStartTimeB3" style="color:red; display:none;">Please Enter Start Time</span>
							<label class="floating-label" for="txtStartTimeB3">Start Time</label>

						</div>
					</div>
					<div class="col-md-3">
						<div class="form-group mt-3 position-relative">
							<input type="time"
								   class="form-control floating-input"
								   placeholder="End Time"
								   id="txtEndTimeB3" />
							<span id="spnEndTimeB3" style="color:red; display:none;">Please Enter End Time</span>
							<label class="floating-label" for="txtEndTimeB3">End Time</label>

						</div>
					</div>
					<div class="col-md-3">
						<div class="form-group mt-3 position-relative">
							<input type="text"
								   class="form-control floating-input"
								   placeholder="Duration"
								   id="txtDurationB3"
								   disabled />
							<label class="floating-label" for="txtDurationB3">Duration</label>

						</div>
					</div>
				</div>

			</div>
			<div class="modal-footer btn-heading-title">
				<button type="button" class="btn btn-primary" id="btnCreateShift" style="background-color:#2395c6; color:white;">Create</button>
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
			</div>
		</div>
	</div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script type="text/javascript">
	var shiftIdUpdate = 0;

	$(document).ready(function () {

		// Load grid on page load
		loadDataTable();


		// Show modal on add click
		$("#addShift").click(function () {
			// Reset form values
			$("#txtShiftName, #txtStartTime, #txtEndTime, #txtDuration").val('');
			$("#btnCreateShift").text("Create");
			shiftIdUpdate = 0;

			// Hide any validation messages
			$("#spnShiftName, #spnStartTime, #spnEndTime").hide();

			// Show modal
			$("#addShiftModel").modal('show');
		});

		// Refresh Button
		$("#btnRefreshShiftGrid").click(function () {
			loadDataTable();
		});

		// Create or Update Shift
		$("#btnCreateShift").click(() => {
			const shiftName = $("#txtShiftName").val().trim();
			const startTime = $("#txtStartTime").val();
			const endTime = $("#txtEndTime").val();

			if (shiftName === "") { $("#spnShiftName").show(); return; } else { $("#spnShiftName").hide(); }
			if (startTime === "") { $("#spnStartTime").show(); return; } else { $("#spnStartTime").hide(); }
			if (endTime === "") { $("#spnEndTime").show(); return; } else { $("#spnEndTime").hide(); }

			const formattedStartTime = toTimeSpanFormat(startTime);
			const formattedEndTime = toTimeSpanFormat(endTime);
			const duration = calculateDuration(startTime, endTime);
			$("#txtDuration").val(duration);

			const shiftDetails = {
				ShiftID: shiftIdUpdate,
				ShiftName: shiftName,
				StartTime: formattedStartTime,
				EndTime: formattedEndTime,
				Duration: duration
			};

			const url = parseInt(shiftIdUpdate) > 0 ? '@baseUrl/ShiftMasterAPI/UpdateShift' : '@baseUrl/ShiftMasterAPI/CreateShift';

			$.ajax({
				url: url,
				type: "POST",
				data: JSON.stringify(shiftDetails),
				dataType: "json",
				contentType: 'application/json',
				success: function (response) {
					if (response.isSuccess) {
						round_success_noti(response.responseMessage || "Shift saved successfully.");
						$("#addShiftModel").modal('hide');
						shiftIdUpdate = 0;
						$("#btnCreateShift").text("Create");
						loadDataTable();
					} else {
						round_error_noti(response.responseMessage);
					}
				},
				error: function () {
					round_error_noti("An error occurred. Please try again.");
				}
			});
		});

		// Auto-calculate durations
		setupDurationCalculation("#txtStartTime", "#txtEndTime", "#txtDuration");
		setupDurationCalculation("#txtStartTimeB1", "#txtEndTimeB1", "#txtDurationB1");
		setupDurationCalculation("#txtStartTimeB2", "#txtEndTimeB2", "#txtDurationB2");
		setupDurationCalculation("#txtStartTimeB3", "#txtEndTimeB3", "#txtDurationB3");
	});

	function toTimeSpanFormat(time) {
		return time.length === 5 ? time + ":00" : time;
	}

	function calculateDuration(start, end) {
		const [sh, sm] = start.split(":").map(Number);
		const [eh, em] = end.split(":").map(Number);
		const startDate = new Date(2000, 0, 1, sh, sm);
		const endDate = new Date(2000, 0, 1, eh, em);

		let diffMs = endDate - startDate;
		if (diffMs < 0) diffMs += 24 * 60 * 60 * 1000;

		const hrs = Math.floor(diffMs / (1000 * 60 * 60));
		const mins = Math.floor((diffMs % (1000 * 60 * 60)) / (1000 * 60));
		const secs = Math.floor((diffMs % (1000 * 60)) / 1000);

		return `${hrs.toString().padStart(2, '0')}:${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;
	}

	function setupDurationCalculation(startSelector, endSelector, durationSelector) {
		$(startSelector + ", " + endSelector).on("change", function () {
			const start = $(startSelector).val();
			const end = $(endSelector).val();
			if (start && end) {
				const duration = calculateDuration(start, end);
				$(durationSelector).val(duration);
			}
		});
	}


	   $("#getData").click(function () {
			loadDataTable(); // This will reload your grid
		});

	function loadDataTable() {
		$.ajax({
			type: "GET",
			url: '@baseUrl/ShiftMasterAPI/GetAllShifts',
			success: function (response) {
				const data = response.data;

				$("#gridContainer").dxDataGrid({
					dataSource: data,
					keyExpr: "shiftID",
					stateStoring: { enabled: true, type: 'localStorage', storageKey: 'shiftMasterLocalStorage' },
					columns: [
						{ dataField: "shiftName", caption: "Shift Name" },
						{ dataField: "startTime", caption: "Start Time" },
						{ dataField: "endTime", caption: "End Time" },
						{ dataField: "duration", caption: "Duration" },
						{
							dataField: 'isEnabled',
							caption: 'Status',
							dataType: 'string',
							calculateCellValue: function (data) {
								return data.isEnabled ? "Active" : "Inactive";
							}
						},
						{
							caption: "Edit",
							width: 50,
							cellTemplate: function (container, options) {
								$('<div class="d-flex order-actions">' +
									'<a href="javascript:;" class="edit-action">' +
									'<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-eyedropper" viewBox="0 0 16 16">' +
									'<path d="M13.354.646a1.207 1.207 0 0 0-1.708 0L8.5 3.793l-.646-.647a.5.5 0 1 0-.708.708L8.293 5l-7.147 7.146A.5.5 0 0 0 1 12.5v1.793l-.854.853a.5.5 0 1 0 .708.707L1.707 15H3.5a.5.5 0 0 0 .354-.146L11 7.707l1.146 1.147a.5.5 0 0 0 .708-.708l-.647-.646 3.147-3.146a1.207 1.207 0 0 0 0-1.708zM2 12.707l7-7L10.293 7l-7 7H2z"/>' +
									'</svg>' +
									'</a>' +
									'</div>')
									.on('dxclick', function () {
										editShift(options.data);
									})
									.appendTo(container);
							}
						},
						{
							caption: "Delete",
							width: 50,
							cellTemplate: function (container, options) {
								$('<div class="d-flex order-actions">' +
									'<a href="javascript:;" class="delete-action">' +
									'<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash-fill" viewBox="0 0 16 16">' +
									'<path d="M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5M8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5m3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0"/>' +
									'</svg>' +
									'</a>' +
									'</div>')
									.on('dxclick', function () {
										deleteShift(options.data);
									})
									.appendTo(container);
							}
						},
					],
					columnAutoWidth: true,
					rowAlternationEnabled: false,
					showBorders: true,
					grouping: { autoExpandAll: true },
					paging: { pageSize: 10 },
					pager: { showPageSizeSelector: true, allowedPageSizes: [10, 25, 50, 100] },
					headerFilter: { visible: true },
					filterRow: { visible: true, applyFilter: "auto" },
					groupPanel: { visible: true },
					searchPanel: { visible: true, width: 240, placeholder: "Search..." },
					onCellPrepared: function (e) {
						if (e.rowType === "header") {
							e.cellElement.css("text-align", "center").css("font-weight", "bold");
						}
					},
					onContentReady(e) {
						jQuery('.rowCount').html('Total Records: ' + jQuery("#gridContainer").dxDataGrid('instance').totalCount());
					}
				});
			},
			error: function () {
				$("#gridContainer").html(`<div class="text-danger text-center">Failed to load grid.</div>`);
			}
		});
	}

	function editShift(data) {
		shiftIdUpdate = data.shiftID;
		$("#btnCreateShift").text("Update");
		$("#txtShiftName").val(data.shiftName);
		$("#txtStartTime").val(data.startTime.substring(0, 5));
		$("#txtEndTime").val(data.endTime.substring(0, 5));
		$("#txtDuration").val(data.duration);
		$("#addShiftModel").modal('show');
	}

	function deleteShift(data) {
		var isConfirmed = confirm("Are you sure you want to delete this Shift?");
		if (isConfirmed) {
			var deleteRecord = {
				Id: data.shiftID,
				DeletedBy: ""
			};

			$.ajax({
				url: '@baseUrl/ShiftMasterAPI/Delete',
				type: "DELETE",
				data: JSON.stringify(deleteRecord),
				dataType: "json",
				contentType: 'application/json',
				success: function (response) {
					round_success_noti('Shift deleted successfully');
					loadDataTable();
				},
				error: function () {
					round_error_noti('An error occurred while deleting the Shift. Please try again');
				}
			});
		} else {
			round_error_noti("Shift deletion was cancelled.");
		}
	}
</script>



