@inject IConfiguration Configuration
@{
	ViewData["Title"] = "ManageDepartment";
	Layout = "~/Areas/AdminPanel/Views/Shared/_AdminLayout.cshtml";

	string baseUrl = Configuration["BaseUrlSettings:baseUrl"];
	var uri = new Uri(baseUrl);
	string baseAPIDomainUrl = $"{uri.Scheme}://{uri.Host}:{uri.Port}";
}

<div class="card">
	<div class="card-header bg-transparent ml-0 py-0">
		<div class="row">
			<div class="col-6">
				<h6 class="pt-2 mb-0">
					Manage Department
				</h6>
			</div>

			<div class="col-6 d-flex justify-content-end align-items-center">
				<div class="font-22 pl-2" style="color:#32393f; cursor:pointer;">
					<button id="addDepartment"
							type="button"
							class="btn mr-1 rounded-1"
							style="background-color:#2395c6; color:white;">
						Add Department
					</button>
				</div>
			</div>
		</div>
	</div>
	<div class="card-body">
		
		<div class="row">
			<div class="col-md-12">
				<div class="form-group">


					<div class="grid-wrapper " style="position: relative; ">
						<div id="grid-loader" class="grid-loader justify-content-center align-items-center flex-column "
							 style="display: none;  inset: 0; background: rgba(255,255,255,0.6); z-index: 10; ">
							<img src="@baseAPIDomainUrl/loders/loder.png" class="grid-logo-spinner" style="width: 30px;                                            height: 30px; animation: spin 1s linear infinite;" />
							<div class="grid-loading-text text-dark" style="font-size: 16px;">Loading...</div>

						</div>
						<div id="gridTag">
							<div class="rowCount" id="rowCount1"></div>
							<div id="gridContainer"></div>
						</div>
						<div id="noRecord" style="display:none;">
							No Record Found!
						</div>




				</div>
			</div>
		</div>
	</div>
</div>
</div>

<div class="modal fade" id="addDepartmentModel" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-md">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title btn-heading-title" id="exampleModalLabel"><span id="formType">Add</span> Department</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body modal-body-font">
				<div class="row">
					<div class="col-md-12">
						<div class="form-group mt-3 position-relative">
							<input type="text"
								   data-trim-input
								   class="form-control floating-input"
								   placeholder="Department Name"
								   id="txtDepartmentName" />
							<label class="floating-label" for="txtDepartmentName">Department Name <span class="required-star">*</span></label>
						</div>
						<span id="spnDepartmentName" style="color:red; display:none;">Please Enter Department Name</span>

					</div>
					<div class="col-md-12">
						<div class="form-group mt-3 position-relative">
							<input type="text"
								   data-trim-input
								   class="form-control floating-input"
								   placeholder="Department Code"
								   id="txtDepartmentCode" />
							<label class="floating-label" for="txtDepartmentCode">Department Code <span class="required-star">*</span></label>
						</div>
						<span id="spnDepartmentCode" style="color:red; display:none;">Please Enter Department Code</span>

					</div>

					<div class="col-md-12">
						<div class="form-group mt-3 position-relative">
							<label>IsActive</label>
							<input type="checkbox"
								checked
								   class="form-control-input"
								   placeholder=""
								   id="txtActive" />
						</div>

					</div>
					


				</div>
				

			</div>
			<div class="modal-footer btn-heading-title">
				<button type="button" class="btn btn-primary" id="btnCreateDepartment" style="background-color:#2395c6; color:white;">Save</button>
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
			</div>
		</div>
	</div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script>
		
	const Token=localStorage.getItem("authToken");
	const userId=localStorage.getItem("EmployeeId");
	let departmentAPI=0;

	$(() => {
		loadDataTable();
	});


	function loadDataTable() {
		$('#grid-loader').addClass('d-flex').show();

		$.ajax({
			type: "GET",
			url: '@baseUrl/DepartmentAPI/GetAllDepartments',
			headers: {
				  'Authorization': 'Bearer ' + Token
				},
			success: function (response) {
				if(response.isSuccess) 
				{
					$("#noRecord").hide();
					$("#gridTag").show();
				   $("#gridContainer").dxDataGrid({
					dataSource: response.data,
					columns: [

						{ dataField: 'departmentName', caption: 'Department Name' },
						{ dataField: 'departmentCode', caption: 'Department Code' },
						{
							dataField: 'isActive',
							caption: 'IsActive',
							
							calculateCellValue: function (data) {
								return data.isActive ? "Yes" : "No"; // Based on isEnabled field value
							}
						},

						{
							dataField: '',
							caption: '',
							alignment: 'center',
							dataType: 'string',
							format: '',
							type: 'buttons',
							width: '50px',
							cellTemplate: function (container, options) {

								var buttonElement = $('<div class="d-flex order-actions">' +
									'<a href="javascript:;" class="edit-action" title="Departmnet">' +
									'<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-eyedropper" viewBox="0 0 16 16">' +
									'<path d="M13.354.646a1.207 1.207 0 0 0-1.708 0L8.5 3.793l-.646-.647a.5.5 0 1 0-.708.708L8.293 5l-7.147 7.146A.5.5 0 0 0 1 12.5v1.793l-.854.853a.5.5 0 1 0 .708.707L1.707 15H3.5a.5.5 0 0 0 .354-.146L11 7.707l1.146 1.147a.5.5 0 0 0 .708-.708l-.647-.646 3.147-3.146a1.207 1.207 0 0 0 0-1.708zM2 12.707l7-7L10.293 7l-7 7H2z"/>' +
									'</svg>' +
									'</a>' +
									'</div>')
									.on('dxclick', function () {
										updateDepartment(options.data);
									}).appendTo(container);

								var svgElement = buttonElement.find('svg');  // Accessing the svg element directly

								svgElement.attr('title', 'Update Department');
							}
						},

						{
							dataField: '',
							caption: '',
							alignment: 'center',
							dataType: 'string',
							format: '',
							type: 'buttons',
							width: '50px',
							cellTemplate: function (container, options) {

								var buttonElement = $('<div class="d-flex order-actions">' +
									'<a href="javascript:;" class="delete-action" title="Department">' +
									'<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash-fill" viewBox="0 0 16 16">' +
									'<path d="M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5M8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5m3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0"/>' +
									'</svg>' +
									'</a>' +
									'</div>')
									.on('dxclick', function () {
										deleteDepartment(options.data);
									}).appendTo(container);

								var svgElement = buttonElement.find('svg');  // Accessing the svg element directly

								svgElement.attr('title', 'Delete Department');
							}
						}

					],
					columnsAutoWidth: true,
					wordWrapEnabled: false,
					rowAlternationEnabled: false,
					showBorders: true,
					grouping: { autoExpandAll: true },
					paging: { pageSize: 10 },
					pager: { showPageSizeSelector: true, allowedPageSizes: [10, 25, 50, 100] },
					headerFilter: { visible: true },
					filterRow: { visible: true, applyFilter: "auto" },
					allowColumnResizing: true,
					groupPanel: { visible: true },
					searchPanel: { visible: true, width: 240, placeholder: "Search..." },
					
					allowColumnReordering: true,
					columnFixing: { enabled: false },
					
					onContentReady(e) {
						 $('#grid-loader').removeClass('d-flex').hide();
						jQuery('.rowCount').html('Total Records: ' + jQuery("#gridContainer").dxDataGrid('instance').totalCount());
					}
				}).dxDataGrid('instance');
				}
				else{
					$("#noRecord").show();
                   $("#gridTag").hide();
				 $('#grid-loader').removeClass('d-flex').hide()
				}
			},
			error: function () {
			$("#noRecord").show();
				$("#gridTag").hide();
					 $('#grid-loader').removeClass('d-flex').hide();
			  console.error("Unable to load department");
			}
		});
	}


	$("#addDepartment").click(() => {

		resetDepartment();
		$("#addDepartmentModel").modal('show');
		
	});


	$("#btnCreateDepartment").click(() => {
		$("#btnCreateDepartment").prop('disabled', true);
		var txtDepartmentName = $("#txtDepartmentName").val();
		var txtDepartmentCode = $("#txtDepartmentCode").val();
		var txtActive = $("#txtActive").prop("checked");


		// Flag to track validation status
		var isValid = true;

		// Validate txtBranchName
		if (!txtDepartmentName) {
			$("#spnDepartmentName").show();
			isValid = false;
		} else {
			$("#spnDepartmentName").hide();
		}
		if (!txtDepartmentCode) {
			$("#spnDepartmentCode").show();
			isValid = false;
		} else {
			$("#spnDepartmentCode").hide();
		}

		if(!isValid){
			$("#btnCreateDepartment").prop('disabled', false);
			return;
		}
			var createdBy=departmentId==0?userId:null;
			var updatedBy=departmentId==0?null:userId;

			var department = {
				DepartmentId: departmentId, DepartmentName: txtDepartmentName, DepartmentCode: txtDepartmentCode,  IsActive: txtActive,CreatedBy:createdBy,UpdatedBy:updatedBy

			}
				var departmentIdUrl=departmentId==0?"@baseUrl/DepartmentAPI/CreateDepartment":"@baseUrl/DepartmentAPI/UpdateDepartment";
				 var methodType=departmentId==0?"POST":"PUT"

	
			$.ajax({
				url: departmentIdUrl,
				type: methodType,
				data: JSON.stringify(department),
				contentType: 'application/json',
				headers: {
				  'Authorization': 'Bearer ' + Token
				},
				success: function (response) {
					if (response.isSuccess)
					{
						   round_success_noti(response.responseMessage);
						   loadDataTable();
							$("#addDepartmentModel").modal('hide');

							   resetBranch();

					}
					else {
						round_error_noti(response.responseMessage);
					}
					$("#btnCreateDepartment").prop('disabled', false);
				},
				error: function (xhr) {
					$("#btnCreateDepartment").prop('disabled', false);
					round_error_noti('Unable to save details');
				}
			});

	});



	function resetDepartment() {
		departmentId = 0; // Reset the ID

		$("#txtDepartmentName").val('');
		$("#txtDepartmentCode").val('');

		// Uncheck the checkbox
		$("#txtActive").prop("checked", true);
		$("#spnDepartmentName").hide();
		$("#spnDepartmentCode").hide();
		// Reset button state
		$("#btnCreateDepartment").prop("disabled", false);
		$("#formType").text("Add");
		$("#btnCreateDepartment").text("Save");

		
	}


	function updateDepartment(data) {
		resetDepartment();

		$("#txtDepartmentName").val(data.departmentName);
		$("#txtDepartmentCode").val(data.departmentCode);
		$("#txtActive").prop("checked", data.isActive||false);  // Uncheck the checkbox ----- value set data.ojtApplicable
		
		$("#btnCreateDepartment").prop("disabled",false);
		$("#btnCreateDepartment").text("Update");
		$("#formType").text("Update");
				departmentId = data.departmentId;

		// Show the modal
		$("#addDepartmentModel").modal('show');
	}



	function deleteDepartment(data) {
		 if (!confirm("Are you sure you want to delete?"))
		 {
			return; // Cancel the delete operation
		 }

		
			var deleteRecord = {
				Id: data.departmentId,
				DeletedBy: userId  // You may want to pass the current user's ID or name here.
			};

			$.ajax({
				url: '@baseUrl/DepartmentAPI/DeleteDepartment',
				type: "DELETE",
				data: JSON.stringify(deleteRecord),
				contentType: 'application/json',
				headers: {
				  'Authorization': 'Bearer ' + Token
				},
				success: function (response) {
					if (response.isSuccess)
					{
						   round_success_noti(response.responseMessage);
						   loadDataTable();

					}
					else {
						round_error_noti(response.responseMessage);
					}
				},
				error: function (xhr, status, error) {
					// Handle error: provide feedback to the user
					round_error_noti("An error occurred while deleting the branch. Please try again.");
				}
			});
		
	}


</script>

	
