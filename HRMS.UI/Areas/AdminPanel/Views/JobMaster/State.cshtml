@inject IConfiguration Configuration
@{
	ViewData["Title"] = "ManageState";
	Layout = "~/Areas/AdminPanel/Views/Shared/_AdminLayout.cshtml";
	string baseUrl = Configuration["BaseUrlSettings:baseUrl"];
}
<style>
	.nav-tabs {
		border-bottom: none !important;
	}

		.nav-tabs .nav-link {
			color: #333;
			background-color: #f1f1f1;
			border: 1px solid transparent;
		}

			.nav-tabs .nav-link.active {
				color: white !important;
				background-color: #2395c6 !important;
				border-color: #2395c6 #2395c6 #fff;
			}
</style>

@* <div class="card">
	<div class="card-header bg-transparent ml-0 py-0">
		<div class="row">
			<div class="col-6">
				<h6 class="pt-2 mb-0">
					Manage State
				</h6>
			</div>

			<div class="col-6 d-flex justify-content-end align-items-center">
				<div class="font-22 pl-2" style="color:#32393f; cursor:pointer;">
					<i class="fadeIn animated bx bx-refresh" id="getData" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Refresh Data"></i>
				</div>
			</div>
		</div>
	</div>
	<div class="card-body">
		<div class="row">
			<div class="col-md-12 btn-heading-title">
				<div class="input-group mb-2">
					<button id="addState"
							type="button"
							class="btn mr-1 rounded-1"
							style="background-color:#2395c6; color:white;">
						Add State
					</button>
				</div>
			</div>
		</div>
		<div class="row">
			<div class="col-md-12">
				<div class="form-group">
					<div class="rowCount" id="rowCount1"></div>
					<div id="gridContainer">
						<div class="d-flex justify-content-center align-items-center" style="height: 10vh;">
							<div class="spinner-border text-primary" role="status">
								<span class="visually-hidden">Loading...</span>
							</div>
						</div>
					</div>

				</div>
			</div>
		</div>
	</div>
</div>
 *@

<div class="card">
	<div class="card-header bg-transparent ml-0 py-0">
		<div class="row">
			<div class="col-6">
				<h6 class="pt-2 mb-0">
					Manage State
				</h6>
			</div>

			<div class="col-6 d-flex justify-content-end align-items-center">
				<div class="font-22 pl-2" style="color:#32393f; cursor:pointer;">
					<i class="fadeIn animated bx bx-refresh" id="refreshData" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Refresh Data"></i>
				</div>
			</div>
		</div>
	</div>

	<div class="d-flex justify-content-between align-items-center mb-3 mt-3 ms-3">
		<ul class="nav nav-tabs" id="manageSateTabs" role="tablist">
			<li class="nav-item me-2" role="presentation">
				<button class="nav-link active open-modal" data-bs-toggle="tab" data-bs-target="#typeTab" type="button" role="tab" data-tabname="Manage State">
					Manage State
				</button>
			</li>
			<li class="nav-item" role="presentation">
				<button class="nav-link open-modal" data-bs-toggle="tab" data-bs-target="#priorityTab" type="button" role="tab" data-tabname="Manage City">
					Manage City
				</button>
			</li>
		</ul>

		<!-- Right-side button -->
		<button class="btn btn-primary btn-sm ms-auto me-3" id="addCityCategoryBtn" style="background-color:#2395c6; color:white;">
			<i class="bi bi-plus"></i> Manage City Category
		</button>
	</div>


	<div class="card-body">
		<div class="row me-3">
			<div class="col-md-12 btn-heading-title">
				<div class="input-group mb-2">
					<button id="addState"
							type="button"
							class="btn mr-1 rounded-1"
							style="background-color:#2395c6; color:white;">
						Add State
					</button>

					<button id="addCity"
							type="button"
							class="btn mr-1 rounded-1 d-none"
							style="background-color:#2395c6; color:white;">
						Add City
					</button>
				</div>
			</div>
		</div>

		<div class="row">
			<div class="col-md-12">
				<div class="form-group">
					<div id="StateGrid" class="grid-section ">
						<div class="rowCount" id="rowCount1"></div>
						<div id="gridContainer">
							<div class="d-flex justify-content-center align-items-center" style="height: 10vh;">
								<div class="spinner-border text-primary" role="status">
									<span class="visually-hidden">Loading...</span>
								</div>
							</div>
						</div>
					</div>

					<div id="CityGrid" class="grid-section d-none">
						<div class="rowCount" id="rowCount2"></div>
						<div id="gridContainerCity">
							<div class="d-flex justify-content-center align-items-center" style="height: 10vh;">
								<div class="spinner-border text-primary" role="status">
									<span class="visually-hidden">Loading...</span>
								</div>
							</div>
						</div>
					</div>

				</div>

			
			</div>
		</div>
	</div>
</div>


<div class="modal fade" id="addStateModel" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-xl">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title btn-heading-title" id="exampleModalLabel">Create State</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body modal-body-font">
				<div class="row">
					<div class="col-md-4">
						<div class="form-group mt-3 position-relative">
							<input type="text"
								   class="form-control floating-input"
								   placeholder="State Name"
								   id="txtStatetName" />
							<span id="spnStateName" style="color:red; display:none;">Please Enter State Name</span>
							<label class="floating-label" for="txtStatetName">State Name</label>
						</div>
					</div>
					<div class="col-md-4">
						<div class="form-group mt-3 position-relative">
							<select id="drpCountry" class="form-control floating-input">
								<option selected="selected" value="Select Country">Select Country</option>
								<option value="3">AFGHANISTAN</option>
								<option value="4">ALAND ISLANDS</option>
								<option value="5">ALBANIA</option>
								<option value="6">ALGERIA</option>
								<option value="7">AMERICAN SAMOA</option>
								<option value="8">ANDORRA</option>
								<option value="9">ANGOLA</option>
								<option value="10">ANGUILLA</option>
								<option value="11">ANTARCTICA</option>
								<option value="12">ANTIGUA AND BARBUDA</option>
								<option value="13">ARGENTINA</option>
								<option value="14">ARMENIA</option>
								<option value="15">ARUBA</option>
								<option value="16">AUSTRALIA</option>
								<option value="17">AUSTRIA</option>
								<option value="18">AZERBAIJAN</option>
								<option value="19">BAHAMAS</option>
								<option value="20">BAHRAIN</option>
								<option value="21">BARBADOS</option>
								<option value="22">BELARUS</option>
								<option value="23">BELGIUM</option>
								<option value="24">BELIZE</option>
								<option value="25">BENIN</option>
								<option value="26">BERMUDA</option>
								<option value="27">BHUTAN</option>
								<option value="28">BOLIVIA, PLURINATIONAL STATE OF</option>
								<option value="29">BONAIRE, SINT EUSTATIUS AND SABA</option>
								<option value="30">BOSNIA AND HERZEGOVINA</option>
								<option value="31">BOTSWANA</option>
								<option value="32">BOUVET ISLAND</option>
								<option value="33">BRAZIL</option>
								<option value="34">BRITISH INDIAN OCEAN TERRITORY</option>
								<option value="35">BRUNEI DARUSSALAM</option>
								<option value="36">BULGARIA</option>
								<option value="37">BURKINA FASO</option>
								<option value="38">BURUNDI</option>
								<option value="39">CAMBODIA</option>
								<option value="40">CAMEROON</option>
								<option value="41">CANADA</option>
								<option value="42">CAPE VERDE</option>
								<option value="43">CAYMAN ISLANDS</option>
								<option value="44">CENTRAL AFRICAN REPUBLIC</option>
								<option value="45">CHAD</option>
								<option value="46">CHILE</option>
								<option value="47">CHINA</option>
								<option value="48">CHRISTMAS ISLAND</option>
								<option value="49">COCOS (KEELING) ISLANDS</option>
								<option value="50">COLOMBIA</option>
								<option value="51">COMOROS</option>
								<option value="52">CONGO</option>
								<option value="53">CONGO, THE DEMOCRATIC REPUBLIC OF THE</option>
								<option value="54">COOK ISLANDS</option>
								<option value="55">COSTA RICA</option>
								<option value="56">CÔTE D'IVOIRE</option>
								<option value="57">CROATIA</option>
								<option value="58">CUBA</option>
								<option value="59">CURAÇAO</option>
								<option value="60">CYPRUS</option>
								<option value="61">CZECH REPUBLIC</option>
								<option value="62">DENMARK</option>
								<option value="63">DJIBOUTI</option>
								<option value="64">DOMINICA</option>
								<option value="65">DOMINICAN REPUBLIC</option>
								<option value="66">ECUADOR</option>
								<option value="67">EGYPT</option>
								<option value="68">EL SALVADOR</option>
								<option value="69">EQUATORIAL GUINEA</option>
								<option value="70">ERITREA</option>
								<option value="71">ESTONIA</option>
								<option value="72">ETHIOPIA</option>
								<option value="73">FALKLAND ISLANDS (MALVINAS)</option>
								<option value="74">FAROE ISLANDS</option>
								<option value="75">FIJI</option>
								<option value="76">FINLAND</option>
								<option value="77">FRANCE</option>
								<option value="78">FRENCH GUIANA</option>
								<option value="79">FRENCH POLYNESIA</option>
								<option value="80">FRENCH SOUTHERN TERRITORIES</option>
								<option value="81">GABON</option>
								<option value="82">GAMBIA</option>
								<option value="83">GEORGIA</option>
								<option value="84">GERMANY</option>
								<option value="85">GHANA</option>
								<option value="86">GIBRALTAR</option>
								<option value="87">GREECE</option>
								<option value="88">GREENLAND</option>
								<option value="89">GRENADA</option>
								<option value="90">GUADELOUPE</option>
								<option value="91">GUAM</option>
								<option value="92">GUATEMALA</option>
								<option value="93">GUERNSEY</option>
								<option value="94">GUINEA</option>
								<option value="95">GUINEA-BISSAU</option>
								<option value="96">GUYANA</option>
								<option value="97">HAITI</option>
								<option value="98">HEARD ISLAND AND MCDONALD ISLANDS</option>
								<option value="99">HOLY SEE (VATICAN CITY STATE)</option>
								<option value="100">HONDURAS</option>
								<option value="101">HONG KONG</option>
								<option value="102">HUNGARY</option>
								<option value="103">ICELAND</option>
								<option value="1">INDIA</option>
								<option value="104">INDONESIA</option>
								<option value="105">IRAN, ISLAMIC REPUBLIC OF</option>
								<option value="106">IRAQ</option>
								<option value="107">IRELAND</option>
								<option value="108">ISLE OF MAN</option>
								<option value="109">ISRAEL</option>
								<option value="110">ITALY</option>
								<option value="111">JAMAICA</option>
								<option value="112">JAPAN</option>
								<option value="113">JERSEY</option>
								<option value="114">JORDAN</option>
								<option value="115">KAZAKHSTAN</option>
								<option value="116">KENYA</option>
								<option value="117">KIRIBATI</option>
								<option value="118">KOREA, DEMOCRATIC PEOPLE'S REPUBLIC OF</option>
								<option value="119">KOREA, REPUBLIC OF</option>
								<option value="120">KUWAIT</option>
								<option value="121">KYRGYZSTAN</option>
								<option value="122">LAO PEOPLE'S DEMOCRATIC REPUBLIC</option>
								<option value="123">LATVIA</option>
								<option value="124">LEBANON</option>
								<option value="125">LESOTHO</option>
								<option value="126">LIBERIA</option>
								<option value="127">LIBYA</option>
								<option value="128">LIECHTENSTEIN</option>
								<option value="129">LITHUANIA</option>
								<option value="130">LUXEMBOURG</option>
								<option value="131">MACAO</option>
								<option value="132">MACEDONIA, THE FORMER YUGOSLAV REPUBLIC OF</option>
								<option value="133">MADAGASCAR</option>
								<option value="134">MALAWI</option>
								<option value="135">MALAYSIA</option>
								<option value="136">MALDIVES</option>
								<option value="137">MALI</option>
								<option value="138">MALTA</option>
								<option value="139">MARSHALL ISLANDS</option>
								<option value="140">MARTINIQUE</option>
								<option value="141">MAURITANIA</option>
								<option value="142">MAURITIUS</option>
								<option value="143">MAYOTTE</option>
								<option value="144">MEXICO</option>
								<option value="145">MICRONESIA, FEDERATED STATES OF</option>
								<option value="146">MOLDOVA, REPUBLIC OF</option>
								<option value="147">MONACO</option>
								<option value="148">MONGOLIA</option>
								<option value="149">MONTENEGRO</option>
								<option value="150">MONTSERRAT</option>
								<option value="151">MOROCCO</option>
								<option value="152">MOZAMBIQUE</option>
								<option value="153">MYANMAR</option>
								<option value="154">NAMIBIA</option>
								<option value="155">NAURU</option>
								<option value="156">NEPAL</option>
								<option value="157">NETHERLANDS</option>
								<option value="158">NEW CALEDONIA</option>
								<option value="159">NEW ZEALAND</option>
								<option value="160">NICARAGUA</option>
								<option value="161">NIGER</option>
								<option value="162">NIGERIA</option>
								<option value="163">NIUE</option>
								<option value="164">NORFOLK ISLAND</option>
								<option value="165">NORTHERN MARIANA ISLANDS</option>
								<option value="166">NORWAY</option>
								<option value="167">OMAN</option>
								<option value="2">PAKISTAN</option>
								<option value="168">PALAU</option>
								<option value="169">PALESTINE, STATE OF</option>
								<option value="170">PANAMA</option>
								<option value="171">PAPUA NEW GUINEA</option>
								<option value="172">PARAGUAY</option>
								<option value="173">PERU</option>
								<option value="174">PHILIPPINES</option>
								<option value="175">PITCAIRN</option>
								<option value="176">POLAND</option>
								<option value="177">PORTUGAL</option>
								<option value="178">PUERTO RICO</option>
								<option value="179">QATAR</option>
								<option value="180">RÉUNION</option>
								<option value="181">ROMANIA</option>
								<option value="182">RUSSIAN FEDERATION</option>
								<option value="183">RWANDA</option>
								<option value="184">SAINT BARTHÉLEMY</option>
								<option value="185">SAINT HELENA, ASCENSION AND TRISTAN DA CUNHA</option>
								<option value="186">SAINT KITTS AND NEVIS</option>
								<option value="187">SAINT LUCIA</option>
								<option value="188">SAINT MARTIN (FRENCH PART)</option>
								<option value="189">SAINT PIERRE AND MIQUELON</option>
								<option value="190">SAINT VINCENT AND THE GRENADINES</option>
								<option value="191">SAMOA</option>
								<option value="192">SAN MARINO</option>
								<option value="193">SAO TOME AND PRINCIPE</option>
								<option value="194">SAUDI ARABIA</option>
								<option value="195">SENEGAL</option>
								<option value="196">SERBIA</option>
								<option value="197">SEYCHELLES</option>
								<option value="198">SIERRA LEONE</option>
								<option value="199">SINGAPORE</option>
								<option value="200">SINT MAARTEN (DUTCH PART)</option>
								<option value="201">SLOVAKIA</option>
								<option value="202">SLOVENIA</option>
								<option value="203">SOLOMON ISLANDS</option>
								<option value="204">SOMALIA</option>
								<option value="205">SOUTH AFRICA</option>
								<option value="206">SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS</option>
								<option value="207">SOUTH SUDAN</option>
								<option value="208">SPAIN</option>
								<option value="209">SRI LANKA</option>
								<option value="210">SUDAN</option>
								<option value="211">SURINAME</option>
								<option value="212">SVALBARD AND JAN MAYEN</option>
								<option value="213">SWAZILAND</option>
								<option value="214">SWEDEN</option>
								<option value="215">SWITZERLAND</option>
								<option value="216">SYRIAN ARAB REPUBLIC</option>
								<option value="217">TAIWAN, PROVINCE OF CHINA</option>
								<option value="218">TAJIKISTAN</option>
								<option value="219">TANZANIA, UNITED REPUBLIC OF</option>
								<option value="220">THAILAND</option>
								<option value="221">TIMOR-LESTE</option>
								<option value="222">TOGO</option>
								<option value="223">TOKELAU</option>
								<option value="224">TONGA</option>
								<option value="225">TRINIDAD AND TOBAGO</option>
								<option value="226">TUNISIA</option>
								<option value="227">TURKEY</option>
								<option value="228">TURKMENISTAN</option>
								<option value="229">TURKS AND CAICOS ISLANDS</option>
								<option value="230">TUVALU</option>
								<option value="231">UGANDA</option>
								<option value="232">UKRAINE</option>
								<option value="233">UNITED ARAB EMIRATES</option>
								<option value="234">UNITED STATES</option>
								<option value="235">UNITED STATES MINOR OUTLYING ISLANDS</option>
								<option value="236">URUGUAY</option>
								<option value="237">UZBEKISTAN</option>
								<option value="238">VANUATU</option>
								<option value="239">VENEZUELA, BOLIVARIAN REPUBLIC OF</option>
								<option value="240">VIET NAM</option>
								<option value="241">VIRGIN ISLANDS, BRITISH</option>
								<option value="242">VIRGIN ISLANDS, U.S.</option>
								<option value="243">WALLIS AND FUTUNA</option>
								<option value="244">WESTERN SAHARA</option>
								<option value="245">YEMEN</option>
								<option value="246">ZAMBIA</option>
								<option value="247">ZIMBABWE</option>

							</select>
							<span id="spnCountry" style="color:red; display:none;">Please Select Country.</span>
							<label class="floating-label" for="drpCountry">Country Name</label>
						</div>
					</div>
					<div class="col-md-4">
						<div class="form-group mt-3 position-relative">

							<select id="drpDeduction" class="form-control floating-input">
								<option selected="selected" value="Select Deduction Type">Select Deduction Type</option>
								<option value="1">Monthly</option>
								<option value="2">Quaterly</option>
								<option value="3">Half Yearly</option>
								<option value="4">Yearly</option>
							</select>
							<label class="floating-label" for="drpDeduction">Deduction Type</label>
						</div>
					</div>
				</div>


				<div class="row">
					<div class="col-md-4">
						<div class="form-group mt-3 position-relative">
							<input type="text"
								   class="form-control floating-input"
								   placeholder="PT Deduction Month"
								   id="txtMonth" />
							<label class="floating-label" for="txtMonth">PT Deduction Month</label>
						</div>
					</div>

					<div class="col-md-4">
						<div class="form-group mt-3 position-relative">
							<input type="text"
								   class="form-control floating-input"
								   placeholder="Enrollment Certificate No"
								   id="txtCertificateno" />
							<label class="floating-label" for="txtCertificateno">Enrollment Certificate No</label>
						</div>

					</div>
					<div class="col-md-4">
						<div class="form-group mt-3 position-relative">
							<input type="text"
								   class="form-control floating-input"
								   placeholder="ESIC State Code"
								   id="txtesicStatecode" />
							<label class="floating-label" for="txtesicStatecode">ESIC State Code</label>
						</div>
					</div>
				</div>
				<div class="row">
					<div class="col-md-4">
						<div class="form-group mt-3 position-relative">
							<input type="text"
								   class="form-control floating-input"
								   placeholder="ESIC Registered Office Address"
								   id="txtAddress" />
							<label class="floating-label" for="txtAddress">ESIC Registered Office Address</label>
						</div>
					</div>

					<div class="col-md-8">
						<div class="form-group mt-3 position-relative">
							<label>Applicable PT Setting For Male/Female</label>
							<input type="checkbox"
								   class="form-control-input"
								   placeholder=""
								   id="txtActive" />
						</div>

					</div>
				</div>

			</div>
			<div class="modal-footer btn-heading-title">
				<button type="button" class="btn btn-primary" id="btnCreateState" style="background-color:#2395c6; color:white;">Create</button>
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
			</div>
		</div>
	</div>
</div>



<div class="modal fade" id="addCityModel" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-md">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title btn-heading-title" id="exampleModalLabel"><span class="formType">Create</span> City</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body modal-body-font">
				<div class="row">
					<div class="col-md-6">
						<div class="form-group mt-3 position-relative">
							<input type="text"
								   class="form-control floating-input"
								   placeholder="City Name"
								   id="txtCityName" />
							<span id="spnCityName" style="color:red; display:none;">Please Enter City Name</span>
							<label class="floating-label" for="txtCityName">City Name</label>
						</div>
					</div>

					<div class="col-md-6">
						<div class="form-group mt-3 position-relative">

							<select id="dropdownState" class="form-control floating-input">
								<option value="" selected disabled>Select State</option>
								
							</select>

							<label class="floating-label" for="dropdownState">Level</label>
							<span id="spnCityState" style="color:red; display:none;">Please Select State</span>

						</div>
					</div>
				</div>
				<div class="row">
					<div class="col-md-6">
						<div class="form-group mt-3 position-relative">
							<select id="drpCityCountry" class="form-control floating-input">
								<option selected="selected" value="Select Country">Select Country</option>
								<option value="3">AFGHANISTAN</option>
								<option value="4">ALAND ISLANDS</option>
								<option value="5">ALBANIA</option>
								<option value="6">ALGERIA</option>
								<option value="7">AMERICAN SAMOA</option>
								<option value="8">ANDORRA</option>
								<option value="9">ANGOLA</option>
								<option value="10">ANGUILLA</option>
								<option value="11">ANTARCTICA</option>
								<option value="12">ANTIGUA AND BARBUDA</option>
								<option value="13">ARGENTINA</option>
								<option value="14">ARMENIA</option>
								<option value="15">ARUBA</option>
								<option value="16">AUSTRALIA</option>
								<option value="17">AUSTRIA</option>
								<option value="18">AZERBAIJAN</option>
								<option value="19">BAHAMAS</option>
								<option value="20">BAHRAIN</option>
								<option value="21">BARBADOS</option>
								<option value="22">BELARUS</option>
								<option value="23">BELGIUM</option>
								<option value="24">BELIZE</option>
								<option value="25">BENIN</option>
								<option value="26">BERMUDA</option>
								<option value="27">BHUTAN</option>
								<option value="28">BOLIVIA, PLURINATIONAL STATE OF</option>
								<option value="29">BONAIRE, SINT EUSTATIUS AND SABA</option>
								<option value="30">BOSNIA AND HERZEGOVINA</option>
								<option value="31">BOTSWANA</option>
								<option value="32">BOUVET ISLAND</option>
								<option value="33">BRAZIL</option>
								<option value="34">BRITISH INDIAN OCEAN TERRITORY</option>
								<option value="35">BRUNEI DARUSSALAM</option>
								<option value="36">BULGARIA</option>
								<option value="37">BURKINA FASO</option>
								<option value="38">BURUNDI</option>
								<option value="39">CAMBODIA</option>
								<option value="40">CAMEROON</option>
								<option value="41">CANADA</option>
								<option value="42">CAPE VERDE</option>
								<option value="43">CAYMAN ISLANDS</option>
								<option value="44">CENTRAL AFRICAN REPUBLIC</option>
								<option value="45">CHAD</option>
								<option value="46">CHILE</option>
								<option value="47">CHINA</option>
								<option value="48">CHRISTMAS ISLAND</option>
								<option value="49">COCOS (KEELING) ISLANDS</option>
								<option value="50">COLOMBIA</option>
								<option value="51">COMOROS</option>
								<option value="52">CONGO</option>
								<option value="53">CONGO, THE DEMOCRATIC REPUBLIC OF THE</option>
								<option value="54">COOK ISLANDS</option>
								<option value="55">COSTA RICA</option>
								<option value="56">CÔTE D'IVOIRE</option>
								<option value="57">CROATIA</option>
								<option value="58">CUBA</option>
								<option value="59">CURAÇAO</option>
								<option value="60">CYPRUS</option>
								<option value="61">CZECH REPUBLIC</option>
								<option value="62">DENMARK</option>
								<option value="63">DJIBOUTI</option>
								<option value="64">DOMINICA</option>
								<option value="65">DOMINICAN REPUBLIC</option>
								<option value="66">ECUADOR</option>
								<option value="67">EGYPT</option>
								<option value="68">EL SALVADOR</option>
								<option value="69">EQUATORIAL GUINEA</option>
								<option value="70">ERITREA</option>
								<option value="71">ESTONIA</option>
								<option value="72">ETHIOPIA</option>
								<option value="73">FALKLAND ISLANDS (MALVINAS)</option>
								<option value="74">FAROE ISLANDS</option>
								<option value="75">FIJI</option>
								<option value="76">FINLAND</option>
								<option value="77">FRANCE</option>
								<option value="78">FRENCH GUIANA</option>
								<option value="79">FRENCH POLYNESIA</option>
								<option value="80">FRENCH SOUTHERN TERRITORIES</option>
								<option value="81">GABON</option>
								<option value="82">GAMBIA</option>
								<option value="83">GEORGIA</option>
								<option value="84">GERMANY</option>
								<option value="85">GHANA</option>
								<option value="86">GIBRALTAR</option>
								<option value="87">GREECE</option>
								<option value="88">GREENLAND</option>
								<option value="89">GRENADA</option>
								<option value="90">GUADELOUPE</option>
								<option value="91">GUAM</option>
								<option value="92">GUATEMALA</option>
								<option value="93">GUERNSEY</option>
								<option value="94">GUINEA</option>
								<option value="95">GUINEA-BISSAU</option>
								<option value="96">GUYANA</option>
								<option value="97">HAITI</option>
								<option value="98">HEARD ISLAND AND MCDONALD ISLANDS</option>
								<option value="99">HOLY SEE (VATICAN CITY STATE)</option>
								<option value="100">HONDURAS</option>
								<option value="101">HONG KONG</option>
								<option value="102">HUNGARY</option>
								<option value="103">ICELAND</option>
								<option value="1">INDIA</option>
								<option value="104">INDONESIA</option>
								<option value="105">IRAN, ISLAMIC REPUBLIC OF</option>
								<option value="106">IRAQ</option>
								<option value="107">IRELAND</option>
								<option value="108">ISLE OF MAN</option>
								<option value="109">ISRAEL</option>
								<option value="110">ITALY</option>
								<option value="111">JAMAICA</option>
								<option value="112">JAPAN</option>
								<option value="113">JERSEY</option>
								<option value="114">JORDAN</option>
								<option value="115">KAZAKHSTAN</option>
								<option value="116">KENYA</option>
								<option value="117">KIRIBATI</option>
								<option value="118">KOREA, DEMOCRATIC PEOPLE'S REPUBLIC OF</option>
								<option value="119">KOREA, REPUBLIC OF</option>
								<option value="120">KUWAIT</option>
								<option value="121">KYRGYZSTAN</option>
								<option value="122">LAO PEOPLE'S DEMOCRATIC REPUBLIC</option>
								<option value="123">LATVIA</option>
								<option value="124">LEBANON</option>
								<option value="125">LESOTHO</option>
								<option value="126">LIBERIA</option>
								<option value="127">LIBYA</option>
								<option value="128">LIECHTENSTEIN</option>
								<option value="129">LITHUANIA</option>
								<option value="130">LUXEMBOURG</option>
								<option value="131">MACAO</option>
								<option value="132">MACEDONIA, THE FORMER YUGOSLAV REPUBLIC OF</option>
								<option value="133">MADAGASCAR</option>
								<option value="134">MALAWI</option>
								<option value="135">MALAYSIA</option>
								<option value="136">MALDIVES</option>
								<option value="137">MALI</option>
								<option value="138">MALTA</option>
								<option value="139">MARSHALL ISLANDS</option>
								<option value="140">MARTINIQUE</option>
								<option value="141">MAURITANIA</option>
								<option value="142">MAURITIUS</option>
								<option value="143">MAYOTTE</option>
								<option value="144">MEXICO</option>
								<option value="145">MICRONESIA, FEDERATED STATES OF</option>
								<option value="146">MOLDOVA, REPUBLIC OF</option>
								<option value="147">MONACO</option>
								<option value="148">MONGOLIA</option>
								<option value="149">MONTENEGRO</option>
								<option value="150">MONTSERRAT</option>
								<option value="151">MOROCCO</option>
								<option value="152">MOZAMBIQUE</option>
								<option value="153">MYANMAR</option>
								<option value="154">NAMIBIA</option>
								<option value="155">NAURU</option>
								<option value="156">NEPAL</option>
								<option value="157">NETHERLANDS</option>
								<option value="158">NEW CALEDONIA</option>
								<option value="159">NEW ZEALAND</option>
								<option value="160">NICARAGUA</option>
								<option value="161">NIGER</option>
								<option value="162">NIGERIA</option>
								<option value="163">NIUE</option>
								<option value="164">NORFOLK ISLAND</option>
								<option value="165">NORTHERN MARIANA ISLANDS</option>
								<option value="166">NORWAY</option>
								<option value="167">OMAN</option>
								<option value="2">PAKISTAN</option>
								<option value="168">PALAU</option>
								<option value="169">PALESTINE, STATE OF</option>
								<option value="170">PANAMA</option>
								<option value="171">PAPUA NEW GUINEA</option>
								<option value="172">PARAGUAY</option>
								<option value="173">PERU</option>
								<option value="174">PHILIPPINES</option>
								<option value="175">PITCAIRN</option>
								<option value="176">POLAND</option>
								<option value="177">PORTUGAL</option>
								<option value="178">PUERTO RICO</option>
								<option value="179">QATAR</option>
								<option value="180">RÉUNION</option>
								<option value="181">ROMANIA</option>
								<option value="182">RUSSIAN FEDERATION</option>
								<option value="183">RWANDA</option>
								<option value="184">SAINT BARTHÉLEMY</option>
								<option value="185">SAINT HELENA, ASCENSION AND TRISTAN DA CUNHA</option>
								<option value="186">SAINT KITTS AND NEVIS</option>
								<option value="187">SAINT LUCIA</option>
								<option value="188">SAINT MARTIN (FRENCH PART)</option>
								<option value="189">SAINT PIERRE AND MIQUELON</option>
								<option value="190">SAINT VINCENT AND THE GRENADINES</option>
								<option value="191">SAMOA</option>
								<option value="192">SAN MARINO</option>
								<option value="193">SAO TOME AND PRINCIPE</option>
								<option value="194">SAUDI ARABIA</option>
								<option value="195">SENEGAL</option>
								<option value="196">SERBIA</option>
								<option value="197">SEYCHELLES</option>
								<option value="198">SIERRA LEONE</option>
								<option value="199">SINGAPORE</option>
								<option value="200">SINT MAARTEN (DUTCH PART)</option>
								<option value="201">SLOVAKIA</option>
								<option value="202">SLOVENIA</option>
								<option value="203">SOLOMON ISLANDS</option>
								<option value="204">SOMALIA</option>
								<option value="205">SOUTH AFRICA</option>
								<option value="206">SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS</option>
								<option value="207">SOUTH SUDAN</option>
								<option value="208">SPAIN</option>
								<option value="209">SRI LANKA</option>
								<option value="210">SUDAN</option>
								<option value="211">SURINAME</option>
								<option value="212">SVALBARD AND JAN MAYEN</option>
								<option value="213">SWAZILAND</option>
								<option value="214">SWEDEN</option>
								<option value="215">SWITZERLAND</option>
								<option value="216">SYRIAN ARAB REPUBLIC</option>
								<option value="217">TAIWAN, PROVINCE OF CHINA</option>
								<option value="218">TAJIKISTAN</option>
								<option value="219">TANZANIA, UNITED REPUBLIC OF</option>
								<option value="220">THAILAND</option>
								<option value="221">TIMOR-LESTE</option>
								<option value="222">TOGO</option>
								<option value="223">TOKELAU</option>
								<option value="224">TONGA</option>
								<option value="225">TRINIDAD AND TOBAGO</option>
								<option value="226">TUNISIA</option>
								<option value="227">TURKEY</option>
								<option value="228">TURKMENISTAN</option>
								<option value="229">TURKS AND CAICOS ISLANDS</option>
								<option value="230">TUVALU</option>
								<option value="231">UGANDA</option>
								<option value="232">UKRAINE</option>
								<option value="233">UNITED ARAB EMIRATES</option>
								<option value="234">UNITED STATES</option>
								<option value="235">UNITED STATES MINOR OUTLYING ISLANDS</option>
								<option value="236">URUGUAY</option>
								<option value="237">UZBEKISTAN</option>
								<option value="238">VANUATU</option>
								<option value="239">VENEZUELA, BOLIVARIAN REPUBLIC OF</option>
								<option value="240">VIET NAM</option>
								<option value="241">VIRGIN ISLANDS, BRITISH</option>
								<option value="242">VIRGIN ISLANDS, U.S.</option>
								<option value="243">WALLIS AND FUTUNA</option>
								<option value="244">WESTERN SAHARA</option>
								<option value="245">YEMEN</option>
								<option value="246">ZAMBIA</option>
								<option value="247">ZIMBABWE</option>

							</select>
							<span id="spnCityCountry" style="color:red; display:none;">Please Select Country.</span>
							<label class="floating-label" for="drpCityCountry">Country Name</label>
						</div>
					</div>
					<div class="col-md-6">
						<div class="form-group mt-3 position-relative">

							<select id="dropdownCityCategory" class="form-control floating-input">
								<option value="" selected disabled>Select City Category</option>
							
							</select>

							<label class="floating-label" for="dropdownCityCategory">City Category</label>

						</div>
					</div>
				</div>

				<div class="row">
					<div class="col-md-12">
						<div class="form-group mt-3 position-relative">
							<textarea class="form-control floating-input"
									  placeholder="Remarks"
									  id="txtRemarks"></textarea>
							<label class="floating-label" for="txtRemark">Remarks</label>

						</div>
					</div>

				</div>

			</div>
			<div class="modal-footer btn-heading-title">
				<button type="button" class="btn btn-primary" id="btnCreateCity" style="background-color:#2395c6; color:white;">Create</button>
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
			</div>
		</div>
	</div>
</div>


<div class="modal fade" id="addCityCategoryModel" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-lg">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title btn-heading-title" id="exampleModalLabel">Manage City Category</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body modal-body-font">
				<div class="row">
					<div class="col-md-6">
						<div class="form-group mt-3 position-relative">
							<input type="text"
								   class="form-control floating-input"
								   placeholder="CityCategoryName "
								   id="txtCityCategoryName" />
							<span id="spnCityCategoryName" style="color:red; display:none;">Please Enter City Category Name </span>
							<label class="floating-label" for="txtCityName">City Category Name </label>
						</div>
					</div>
					<div class="col-md-6">
						<div class="form-group mt-3 position-relative">
							<textarea class="form-control floating-input"
									  placeholder="Description"
									  id="txtDescription"></textarea>
							<label class="floating-label" for="txtRemark">Description</label>

						</div>
					</div>
				</div>

				
			</div>
			<div class="modal-footer btn-heading-title">
				<button type="button" class="btn btn-primary" id="btnCreateCityCategory" style="background-color:#2395c6; color:white;">Create</button>
				<button type="button" class="btn btn-secondary"onclick="resetCityCategoryFormFields()" >Clear</button>
			</div>

			<div class="row m-3">
				<div class="col-md-12">
					<div class="form-group">
						<div class="rowCount" id="rowCountCategory"></div>
						<div id="gridContainerCityCategory">
							@* <div class="spinner-border text-primary" role="status">
							<span class="visually-hidden">Loading...</span>
						</div> *@
							<div class="d-flex justify-content-center align-items-center" style="height: 10vh;">
								<div class="spinner-border text-primary" role="status">
									<span class="visually-hidden">Loading...</span>
								</div>
							</div>
						</div>

					</div>
				</div>
			</div>
		</div>

	</div>
</div>


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script>
	let CityID=0;
	let CityCategoryId=0;
	$(() => {
		loadDataTable();
	});


		$("#refreshData").click(() => {
					resetGridFilters( $('#gridContainer').dxDataGrid('instance'));
						resetGridFilters( $('#gridContainerCity').dxDataGrid('instance'));
				ReasonMasterDataTable();
		});


	function resetGridFilters(gridInstance) {
		if (gridInstance) {
		gridInstance.clearFilter();            // Clear all filters
		gridInstance.clearSorting();           // Clear all sorting

		}
	}
	$(document).ready(function () {

		$('#manageSateTabs .nav-link').on('click', function () {
			const selectedTabName = $(this).data('tabname');

			// Update active tab class
			$('#manageSateTabs .nav-link').removeClass('active');
			$(this).addClass('active');

			// Show/hide buttons
			if (selectedTabName === 'Manage State') {
				$('#addState').removeClass('d-none');
				$('#addCity').addClass('d-none');

				$('#StateGrid').removeClass('d-none');
				$('#CityGrid').addClass('d-none');
			} else {
				$('#addState').addClass('d-none');
				$('#addCity').removeClass('d-none');

				$('#StateGrid').addClass('d-none');
				$('#CityGrid').removeClass('d-none');
			}
		});
	});


	function loadDataTable() {
		$.ajax({
			type: "GET",
			url: '@baseUrl/StateAPI/GetAllState',
			success: function (data) {
				$("#gridContainer").dxDataGrid({
					dataSource: data.data,
					columns: [

						{ dataField: 'stateName', caption: 'State Name', alignment: 'center', dataType: 'string', format: '' },
						{ dataField: 'countryName', caption: 'Country Name', alignment: 'center', dataType: 'string', format: '' },
						{ dataField: 'ptDeductionType', caption: 'PT Deduction Type', alignment: 'center', dataType: 'string', format: '' },
						{ dataField: 'ptDeductionPeriod', caption: 'PT Deduction Month', alignment: 'center', dataType: 'string', format: '' },
						{ dataField: 'enrollmentCertificateNo', caption: 'Enrollment Certificate No', alignment: 'center', dataType: 'string', format: '' },
						{ dataField: 'esicStateCode', caption: 'ESIC State Code', alignment: 'center', dataType: 'string', format: '' },
						{ dataField: 'esicRegisteredOfficeAddress', caption: 'ESIC Registered Office Address', alignment: 'center', dataType: 'string', format: '' },
						{
							dataField: 'applicablePTSettingForMale_Female',
							caption: 'Applicable PT Setting For Male/Female	',
							alignment: 'center',
							dataType: 'string',
							calculateCellValue: function (data) {
								return data.applicablePTSettingForMale_Female ? "Active" : "Inactive"; // Based on isEnabled field value
							}
						},
						{
							dataField: '',
							caption: '',
							alignment: 'center',
							dataType: 'string',
							format: '',
							type: 'buttons',
							width: '50px',
							cellTemplate: function (container, options) {

								var buttonElement = $('<div class="d-flex order-actions">' +
									'<a href="javascript:;" class="edit-action" title="Departmnet">' +
									'<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-eyedropper" viewBox="0 0 16 16">' +
									'<path d="M13.354.646a1.207 1.207 0 0 0-1.708 0L8.5 3.793l-.646-.647a.5.5 0 1 0-.708.708L8.293 5l-7.147 7.146A.5.5 0 0 0 1 12.5v1.793l-.854.853a.5.5 0 1 0 .708.707L1.707 15H3.5a.5.5 0 0 0 .354-.146L11 7.707l1.146 1.147a.5.5 0 0 0 .708-.708l-.647-.646 3.147-3.146a1.207 1.207 0 0 0 0-1.708zM2 12.707l7-7L10.293 7l-7 7H2z"/>' +
									'</svg>' +
									'</a>' +
									'</div>')
									.on('dxclick', function () {
										updateState(options.data);
									}).appendTo(container);

								var svgElement = buttonElement.find('svg');  // Accessing the svg element directly

								svgElement.attr('title', 'Update State');
							}
						},

						{
							dataField: '',
							caption: '',
							alignment: 'center',
							dataType: 'string',
							format: '',
							type: 'buttons',
							width: '50px',
							cellTemplate: function (container, options) {

								var buttonElement = $('<div class="d-flex order-actions">' +
									'<a href="javascript:;" class="delete-action" title="Department">' +
									'<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash-fill" viewBox="0 0 16 16">' +
									'<path d="M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5M8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5m3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0"/>' +
									'</svg>' +
									'</a>' +
									'</div>')
									.on('dxclick', function () {
										deleteState(options.data);
									}).appendTo(container);

								var svgElement = buttonElement.find('svg');  // Accessing the svg element directly

								svgElement.attr('title', 'Delete State');
							}
						}

					],
					columnsAutoWidth: true,
					wordWrapEnabled: false,
					rowAlternationEnabled: false,
					showBorders: true,
					grouping: { autoExpandAll: true },
					paging: { pageSize: 10 },
					pager: { showPageSizeSelector: true, allowedPageSizes: [10, 25, 50, 100] },
					headerFilter: { visible: true },
					filterRow: { visible: true, applyFilter: "auto" },
					allowColumnResizing: true,
					groupPanel: { visible: true },
					searchPanel: { visible: true, width: 240, placeholder: "Search..." },
					customizeColumns: function (columns) {
						columns.forEach(function (column) {
							if (column.dataField === 'enrolled') {
								// Add editor options for date
								column.editorOptions = {
									type: 'date',
									onKeyDown: function (e) {
										var key = e.event.key;
										// Allow only numbers (0-9), backspace (8), delete (46), and common date separators like '-' and '/'
										if (!/^[0-9\/\-]$/.test(key) && e.event.keyCode !== 8 && e.event.keyCode !== 46) {
											e.event.preventDefault();  // Prevent the default behavior for invalid keys
										}
									},
									onInput: function (e) {
										// Automatically format or handle input if necessary
										let value = e.component.option('value');
										// Add additional formatting logic if needed
									}
								};
							}
						});
					},
					allowColumnReordering: true,
					columnFixing: { enabled: false },
					onExporting: function (e) {
						e.component.beginUpdate();
						e.component.columnOption("Button", "visible", false);
						e.component.columnOption("Add", "visible", false);
					},
					onExported: function (e) {
						e.component.columnOption("Button", "visible", true);
						e.component.columnOption("Add", "visible", true);
						e.component.endUpdate();
					},
					onCellPrepared: function (e) {
						if (e.rowType === "header") {
							e.cellElement.css("text-align", "center");
							e.cellElement.css("font-weight", "bold");
						}
						if (e.rowType === "group") {
							e.cellElement.css("text-align", "center");
						}
					},
					onContentReady(e) {
						jQuery('#rowCount1').html('Total Records: ' + jQuery("#gridContainer").dxDataGrid('instance').totalCount());
					}
				}).dxDataGrid('instance');
			}
		});
	}


	$("#addState").click(() => {
		$("#addStateModel").modal('show');
		$("#btnCreateState").text("Save");
		$("#spnStateName").hide();
		$("#txtStatetName").val("");
		 $("#drpCountry option:selected").text("Select Country");  // Reset country dropdown (assuming it's a dropdown with a value to reset)
		$("#spnCountry").hide();
		$("#drpDeduction option:selected").text("Select Deduction Type");
		$("#txtCertificateno").val("");
		$("#txtesicStatecode").val("");
		$("#txtAddress").val("");
		$("#txtMonth").val("");
		$("#txtActive").prop("checked", false);  // Uncheck the checkbox
		StateIdIdUpdate = 0;
	});


	$("#btnCreateState").click(() => {

		var txtStatetName = $("#txtStatetName").val();
		var drpCountry = $("#drpCountry option:selected").text();
		var drpDeduction = $("#drpDeduction option:selected").text();
		var txtCertificateno = $("#txtCertificateno").val();
		var txtesicStatecode = $("#txtesicStatecode").val();
		var txtMonth = $("#txtMonth").val();
		var txtAddress = $("#txtAddress").val() || 0;
		var txtActive = $("#txtActive").prop("checked");

		// Flag to track validation status
		var isValid = true;

		// Validate txtBranchName
		if (!txtStatetName) {
			$("#spnStateName").show();
			isValid = false;
		} else {
			$("#spnStateName").hide();
		}
		 if (drpCountry == "Select Country") {
			$("#spnCountry").show();
			isValid = false;
		} else {
			$("#spnCountry").hide();
		}

		if (StateIdIdUpdate == 0) {
			var state = {
				 StateName: txtStatetName, CountryName: drpCountry, PTDeductionType: drpDeduction,
				EnrollmentCertificateNo: txtCertificateno, ESICStateCode: txtesicStatecode,
				PTDeductionPeriod:txtMonth,
				ESICRegisteredOfficeAddress:txtAddress,ApplicablePTSettingForMale_Female:txtActive

			}

		} else {
			var state = {
				StateId: StateIdIdUpdate, StateName: txtStatetName, CountryName: drpCountry, PTDeductionType: drpDeduction,
				EnrollmentCertificateNo: txtCertificateno, ESICStateCode: txtesicStatecode, PTDeductionPeriod:txtMonth,ESICRegisteredOfficeAddress:txtAddress,ApplicablePTSettingForMale_Female:txtActive

			}

		}

		if (isValid) {
			$.ajax({
				url: '@baseUrl/StateAPI/CreateState',
				type: "POST",
				data: JSON.stringify(state),
				dataType: "json",
				contentType: 'application/json',
				success: function (data) {
					loadDataTable();
					$("#addStateModel").modal('hide');
					if(data.stateId == 0){
					  round_success_noti("State details saved")
					}else{
						 round_success_noti("State details saved")
					}
					$("#txtStatetName").val("");
		 $("#drpCountry option:selected").text("Select Country");  // Reset country dropdown (assuming it's a dropdown with a value to reset)
		$("#spnCountry").hide();
		$("#drpDeduction option:selected").text("Select Deduction Type");
		$("#txtCertificateno").val("");
		$("#txtesicStatecode").val("");
		$("#txtAddress").val("");
		$("#txtMonth").val("");
		$("#txtActive").prop("checked", false);
					StateIdIdUpdate = 0;
				},
				error: function (xhr) {
					round_error_noti('Unable to store details');
				}
			});

		}


	});

	var StateIdIdUpdate = 0;
	function updateState(data) {
		$("#btnCreateState").text("Update");
		StateIdIdUpdate = data.stateId;
		$("#txtStatetName").val(data.stateName);
		$("#drpCountry option:selected").text(data.countryName);  // Set country name to selected option text
		$("#drpDeduction option:selected").text(data.ptDeductionType);
		$("#txtMonth").val(data.ptDeductionPeriod);
		$("#txtCertificateno").val(data.enrollmentCertificateNo);
		$("#txtesicStatecode").val(data.esicStateCode);
		$("#txtAddress").val(data.esicRegisteredOfficeAddress);
		$("#txtActive").prop("checked", false);  // Uncheck the checkbox ----- value set data.ojtApplicable
		if (data.applicablePTSettingForMale_Female) {
			$("#txtActive").prop("checked", true);  // Check the checkbox if data.ojtApplicable is true
		} else {
			$("#txtActive").prop("checked", false);  // Uncheck the checkbox if data.ojtApplicable is false or undefined
		}
		// Show the modal
		$("#addStateModel").modal('show');
	}



	function deleteState(data) {

		// Show confirmation dialog
		var isConfirmed = confirm("Are you sure you want to delete this state?");

		if (isConfirmed) {
			var deleteRecord = {
				Id: data.stateId,
				DeletedBy: ""  // You may want to pass the current user's ID or name here.
			};

			$.ajax({
				url: '@baseUrl/StateAPI/Delete',
				type: "DELETE",
				data: JSON.stringify(deleteRecord),
				dataType: "json",
				contentType: 'application/json',
				success: function (response) {
					// Handle success: reload the table to reflect the changes
					loadDataTable();

					// Optionally, show a success message or notification to the user
					round_success_noti("State deleted successfully.");
				},
				error: function (xhr, status, error) {
					// Handle error: provide feedback to the user
					round_error_noti("An error occurred while deleting the state. Please try again.");
				}
			});
		} else {
			// If the user cancels the confirmation, do nothing
			round_error_noti("State deletion was cancelled.");
		}
	}


	$("#addCity").click(() => {
		 
			  $('#btnCreateCity').prop('disabled', false);
		   $(".formType").text("Create");
			  $("#btnCreateCity").text("Create");
	   $("#addCityModel").modal('show');
	})


	  $(()=>{
			  localStorage.removeItem('cityMasterLocalStorage');
			  CityMasterDataTable();
	   })

 function CityMasterDataTable() {
	  $.ajax({
		type: "GET",
		url: '@baseUrl/CityAPI/GetAllCity', // Update to your correct API endpoint
		success: function (data) {
		  if (data.isSuccess) {

			$("#gridContainerCity").dxDataGrid({
			  dataSource: data.data,
			  stateStoring: {
				enabled: true,
				type: 'localStorage',
				storageKey: 'cityMasterLocalStorage'
			  },

			  columns: [
					
				{ dataField: 'cityName', caption: 'City Name', alignment: 'center' },
				{ dataField: 'stateName', caption: 'State Name', alignment: 'center' },
				{ dataField: 'country', caption: 'Country', alignment: 'center' },
				{ dataField: 'cityCategoryName', caption: 'City Category', alignment: 'center' },
				{ dataField: 'remarks', caption: 'Remarks', alignment: 'center' },
					{
						  dataField: '',
						  caption: '',
						  alignment: 'center',
						  width: '50px',
						  type: 'buttons',
						  cellTemplate: function (container, options) {
							   var buttonElement = $('<div class="d-flex order-actions">' +
										   '<a href="javascript:;" class="edit-action" title="Edit City">' +
										   '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-eyedropper" viewBox="0 0 16 16">' +
										   '<path d="M13.354.646a1.207 1.207 0 0 0-1.708 0L8.5 3.793l-.646-.647a.5.5 0 1 0-.708.708L8.293 5l-7.147 7.146A.5.5 0 0 0 1 12.5v1.793l-.854.853a.5.5 0 1 0 .708.707L1.707 15H3.5a.5.5 0 0 0 .354-.146L11 7.707l1.146 1.147a.5.5 0 0 0 .708-.708l-.647-.646 3.147-3.146a1.207 1.207 0 0 0 0-1.708zM2 12.707l7-7L10.293 7l-7 7H2z"/>' +
										   '</svg>' +
										   '</a>' +
										   '</div>')
							  .on('dxclick', function () {
								updateCity(options.data);
							  }).appendTo(container);
						  }
						},
						{
						  dataField: '',
						  caption: '',
						  alignment: 'center',
						  width: '50px',
						  type: 'buttons',
						  cellTemplate: function (container, options) {
							var buttonElement = $('<div class="d-flex order-actions">' +
							  '<a href="javascript:;" class="delete-action" title="Delete City">' +
							  '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash-fill" viewBox="0 0 16 16">' +
							  '<path d="M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5M8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5m3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0"/>' +
							  '</svg>' +
							  '</a>' +
							  '</div>')
							  .on('dxclick', function () {
								deleteCity(options.data);
							  }).appendTo(container);
						  }
						}
				
			  ],

			  columnsAutoWidth: true,
			  showBorders: true,
			  paging: { pageSize: 10 },
			  pager: {
				showPageSizeSelector: true,
				allowedPageSizes: [10, 25, 50, 100]
			  },
			  filterRow: { visible: true, applyFilter: "auto" },
			  headerFilter: { visible: true },
			  groupPanel: { visible: true },
			  searchPanel: { visible: true, width: 240, placeholder: "Search..." },
			  onContentReady(e) {
				$('#rowCount2').html('Total Records: ' + e.component.totalCount());
			  }
			});

		  }
		},
		error: function (xhr, status, error) {
		  console.error("AJAX Error: " + status + " - " + error);
		}
	  });
	}

 $("#btnCreateCity").click(async function () {
		$("#btnCreateCity").prop("disabled", true);
	const cityName = $("#txtCityName").val().trim();
	   const stateId = $("#dropdownState").val();
			  const country = $('#drpCityCountry option:selected').text();
			  const cityCategoryId = $("#dropdownCityCategory").val();
		  const remarks = $("#txtRemarks").val();

	   let isValid = true;

	   // Validate City Name
	   if (cityName === "") {
		   $("#spnCityName").show();
		   isValid = false;
	   } else {
		   $("#spnCityName").hide();
	   }

	   // Validate State
	   if (!stateId) {
		   $("#spnCityState").show();
		   isValid = false;
	   } else {
		   $("#spnCityState").hide();
	   }

		  // Validate Country
		  if (!stateId) {
				 $("#spnCityCountry").show();
			  isValid = false;
		  } else {
				 $("#spnCityCountry").hide();
		  }

	   // You can add country validation here if needed

	   if (!isValid) 
	   {
		$("#btnCreateCity").prop("disabled", false);
			return;
	   }
	  
	   // Create data object to send
	   const data = {
		   CityID:CityID ,
		   CityName: cityName,
		   StateId: stateId,
		   Country: country,
			CityCategoryId:cityCategoryId,
			Remarks:remarks,
			CreatedBy:null,
			UpdatedBy:null

	   };

	   // AJAX call to insert data (modify URL as per your API or Controller)
	   $.ajax({
		   type: "POST",
		   url: "@baseUrl/CityAPI/CreateCity", // Change this to your actual endpoint
		   data: JSON.stringify(data),
		   contentType: "application/json; charset=utf-8",
		   success: function (response) {
				if (response.isSuccess) {
					round_success_noti(response.responseMessage);
					   CityMasterDataTable(); // refresh your data table
					$('#addCityModel').modal('hide');
				} else {
					round_error_noti(response.responseMessage);
				}
				$("#btnCreateCity").prop("disabled", false);
		   },
		   error: function (err) {
			   // Handle error
			   console.error("Error while creating city:", err);
		   }
	   });
	   
 })


	 function bindStates() {
		$.ajax({
			type: "GET",
			 url: "@baseUrl/StateAPI/GetAllState",
			   success: function (response) {
				if (response.isSuccess ) {
					let stateDropdown = $("#dropdownState");
					stateDropdown.empty().append('<option value="" disabled selected>Select State</option>');
					$.each(response.data, function (index, state) {
						stateDropdown.append(`<option value="${state.stateId}">${state.stateName}</option>`);
					});
				} else {
					console.warn("No states found.");
				}
			},
			error: function (error) {
				console.error("Error fetching states:", error);
			}
		});
	}

	function bindCityCategories() {
		$.ajax({
			type: "GET",
			url: "@baseUrl/CityCategoryAPI/GetAllCityCategory", // Replace with your actual API endpoint
			success: function (response) {
				if (response.isSuccess ) {
					let cityCategoryDropdown = $("#dropdownCityCategory");
					cityCategoryDropdown.empty().append('<option value="" disabled selected>Select City Category</option>');
					$.each(response.data, function (index, category) {
						cityCategoryDropdown.append(`<option value="${category.cityCategoryId}">${category.cityCategoryName}</option>`);
					});
				} else {
					console.warn("No city categories found.");
				}
			},
			error: function (error) {
				console.error("Error fetching city categories:", error);
			}
		});
	}

function updateCity(data) {
    CityID = data.cityID || 0;
    $('#txtCityName').val(data.cityName || '');
	   if(data.country){
		$('#drpCityCountry option:selected').text(data.country);
	   }else
	   {
	     $('#drpCityCountry').val("Select Country");
	   }

    $('#dropdownState').val(data.stateId || '');
    $('#dropdownCityCategory').val(data.cityCategoryId || '');
    $('#txtRemarks').val(data.remarks || '');

    $('#spnCityName').hide();
    $('#spnCountry').hide();
    $('#spnState').hide();

    $('#btnCreateCity').prop('disabled', false);
    $(".formType").text("Update");
    $("#btnCreateCity").text("Update");
    $('#addCityModel').modal('show');
}


	 function resetCityFormFields() {
		$('#txtCityName').val('');
			$('#dropdownState').val('');
			$('#drpCityCountry').val("Select Country");
			$('#dropdownCityCategory').val('');
		$('#txtRemarks').val('');
			$('#spnCityState').hide();
		$('#spnCityName').hide();
			$('#spnCityCountry').hide();
		$('#spnCityCategory').hide();
		$('#spnRemarks').hide();
        CityID=0;
	  $('#btnCreateCity').prop('disabled', false);

	}
	$(()=>{
			  bindStates();
			   bindCityCategories();
		$('#addCityModel').on('hidden.bs.modal', function () {
			   resetCityFormFields();
	     });
	})




  function deleteCity(data) {
			  if (!confirm("Are you sure you want to delete this reason?")) {
				  return; // Cancel the delete operation
			  }

			  var deleteObj = {
				  id: data.cityID,
				  deletedBy: null // Set this to the actual user if needed
			  };

			  $.ajax({
				  url: '@baseUrl/CityAPI/DeleteCity',
				  type: 'DELETE',
				  contentType: 'application/json',
				  data: JSON.stringify(deleteObj),
				  success: function (response) {
					  if (response.isSuccess) {
						  round_success_noti(response.responseMessage);
					  } else {
						  round_error_noti(response.responseMessage);
					  }
								CityMasterDataTable();
				  },
				  error: function (error) {
					  console.log('Error deleting city!');
				  }
			  });
		  }


		  //City Category

		 $("#addCityCategoryBtn").click(() => {
			    CityCategoryMasterDataTable();
				  $('#btnCreateCityCategory').prop('disabled', false);
					  $("#btnCreateCityCategory").text("Create");
			   $("#addCityCategoryModel").modal('show');
		})

function CityCategoryMasterDataTable() {
	  $.ajax({
		type: "GET",
		url: '@baseUrl/CityCategoryAPI/GetAllCityCategory', // 🔁 Update to your correct API endpoint
		success: function (data) {
		  if (data.isSuccess) {

			$("#gridContainerCityCategory").dxDataGrid({
			  dataSource: data.data,
			  stateStoring: {
				enabled: true,
				type: 'localStorage',
				storageKey: 'cityCategoryMasterLocalStorage'
			  },

			  columns: [
				
				{ dataField: 'cityCategoryName', caption: 'Category Name', alignment: 'center' },
				{ dataField: 'description', caption: 'Description', alignment: 'center' },
					{
					  dataField: '',
					  caption: '',
					  alignment: 'center',
					  width: '50px',
					  type: 'buttons',
					  cellTemplate: function (container, options) {
						var buttonElement = $('<div class="d-flex order-actions">' +
								   '<a href="javascript:;" class="edit-action" title="Edit City Category">' +
								   '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-eyedropper" viewBox="0 0 16 16">' +
								   '<path d="M13.354.646a1.207 1.207 0 0 0-1.708 0L8.5 3.793l-.646-.647a.5.5 0 1 0-.708.708L8.293 5l-7.147 7.146A.5.5 0 0 0 1 12.5v1.793l-.854.853a.5.5 0 1 0 .708.707L1.707 15H3.5a.5.5 0 0 0 .354-.146L11 7.707l1.146 1.147a.5.5 0 0 0 .708-.708l-.647-.646 3.147-3.146a1.207 1.207 0 0 0 0-1.708zM2 12.707l7-7L10.293 7l-7 7H2z"/>' +
								   '</svg>' +
								   '</a>' +
								   '</div>')
						  .on('dxclick', function () {
							updateCityCategory(options.data);
						  }).appendTo(container);
					  }
					},
					{
					  dataField: '',
					  caption: '',
					  alignment: 'center',
					  width: '50px',
					  type: 'buttons',
					  cellTemplate: function (container, options) {
						$('<div class="d-flex order-actions">' +
							'<a href="javascript:;" class="delete-action" title="Delete Category">' +
							'<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash-fill" viewBox="0 0 16 16">' +
							'<path d="M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5M8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5m3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0"/>' +
							'</svg>' +
							'</a>' +
						  '</div>')
						  .on('dxclick', function () {
							deleteCityCategory(options.data);
						  }).appendTo(container);
					  }
					}
				
			  ],

			  columnsAutoWidth: true,
			  showBorders: true,
			  paging: { pageSize: 10 },
			  pager: {
				showPageSizeSelector: true,
				allowedPageSizes: [10, 25, 50, 100]
			  },
			  filterRow: { visible: true, applyFilter: "auto" },
			  headerFilter: { visible: true },
			  groupPanel: { visible: true },
			  searchPanel: { visible: true, width: 240, placeholder: "Search..." },
			  onContentReady(e) {
				$('#rowCountCategory').html('Total Records: ' + e.component.totalCount());
			  }
			});

		  }
		},
		error: function (xhr, status, error) {
		  console.error("AJAX Error: " + status + " - " + error);
		}
	  });
	}

 $("#btnCreateCityCategory").click(async function () {
		$("#btnCreateCityCategory").prop("disabled", true);
		const cityCategoryName = $("#txtCityCategoryName").val().trim();
		const description = $("#txtDescription").val().trim();
		   

		   let isValid = true;

		   // Validate City Name
			  if (cityCategoryName === "") {
				   $("#spnCityCategoryName").show();
			   isValid = false;
		   } else {
				   $("#spnCityCategoryName").hide();
		   }

		   if (!isValid)
		   {
				$("#btnCreateCityCategory").prop("disabled", false);
				return;
		   }
		  
		   // Create data object to send
		   const data = {
			CityCategoryId:CityCategoryId ,
			CityCategoryName:cityCategoryName,
			Description:description,
				CreatedBy:null,
				UpdatedBy:null

		   };

		   // AJAX call to insert data (modify URL as per your API or Controller)
		   $.ajax({
			   type: "POST",
			   url: "@baseUrl/CityCategoryAPI/CreateCityCategory", // Change this to your actual endpoint
			   data: JSON.stringify(data),
			   contentType: "application/json; charset=utf-8",
			   success: function (response) {
					if (response.isSuccess) {
						round_success_noti(response.responseMessage);
						 CityCategoryMasterDataTable(); // refresh your data table
							resetCityCategoryFormFields();
					} else {
						round_error_noti(response.responseMessage);
					}
						$("#btnCreateCityCategory").prop("disabled", false);
			   },
			   error: function (err) {
				   // Handle error
				   console.error("Error while creating city Category:", err);
			   }
		   });

	 })


	function updateCityCategory(data) {
			resetCityCategoryFormFields();
		CityCategoryId=data.cityCategoryId;
			$("#txtCityCategoryName").val(data.cityCategoryName);
			$("#txtDescription").val(data.description);
				 $("#spnCityCategoryName").hide();
		$('#btnCreateCityCategory').prop('disabled', false);
		$(".formType").text("Update");
			$("#btnCreateCityCategory").text("Update");

	}


		function resetCityCategoryFormFields() {
				CityCategoryId=0;
				$("#txtCityCategoryName").val('');
				$("#txtDescription").val('');
				$("#spnCityCategoryName").hide();
			$('#btnCreateCityCategory').prop('disabled', false);
			$(".formType").text("Create");
			$("#btnCreateCityCategory").text("Create");

		}
		

		  function deleteCityCategory(data) {
				  if (!confirm("Are you sure you want to delete this reason?")) {
					  return; // Cancel the delete operation
				  }

				  var deleteObj = {
					  id: data.cityCategoryId,
					  deletedBy: null // Set this to the actual user if needed
				  };

				  $.ajax({
					  url: '@baseUrl/CityCategoryAPI/DeleteCityCategory',
					  type: 'DELETE',
					  contentType: 'application/json',
					  data: JSON.stringify(deleteObj),
					  success: function (response) {
						  if (response.isSuccess) {
							  round_success_noti(response.responseMessage);
						  } else {
							  round_error_noti(response.responseMessage);
						  }
							CityCategoryMasterDataTable();
					  },
					  error: function (error) {
						  console.log('Error deleting city Category!');
					  }
				  });
			  }
</script>