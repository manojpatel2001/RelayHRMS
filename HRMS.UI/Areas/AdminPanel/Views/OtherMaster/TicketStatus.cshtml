@inject IConfiguration Configuration
@{
	ViewData["Title"] = "Employee Master";
	Layout = "~/Areas/AdminPanel/Views/Shared/_AdminLayout.cshtml";
	string baseUrl = Configuration["BaseUrlSettings:baseUrl"];
	string UIBaseUrlLayout = Configuration["UIBaseUrlSettings:baseUrl"];
	var uriAPI = new Uri(baseUrl);
	string baseAPIDomainUrl = $"{uriAPI.Scheme}://{uriAPI.Host}:{uriAPI.Port}";
}

<div class="card ">
	<div class="card-header bg-transparent ml-0 py-0">
		<div class="row">
			<div class="col-6">
				<h6 class="pt-2 mb-0">
					Ticket Status
				</h6>
			</div>

			<div class="col-6 d-flex justify-content-end align-items-center">
				<div class="font-22 pl-2" style="color:#32393f; cursor:pointer;">

						<button id="addTypeBtn"
								type="button"
								class="btn mr-1 rounded-1"
								style="background-color:#2395c6; color:white;">
							Add Ticket Status
						</button>

				</div>
			</div>
		</div>
	</div>


	<div class="card-body">
		<div class="row">
			<div class="col-md-12">
			
				<div class="grid-wrapper " style="position: relative; " id="gridTag">
					<div id="grid-loader" class="grid-loader justify-content-center align-items-center flex-column "
							style="display: none;  inset: 0; background: rgba(255,255,255,0.6); z-index: 10; ">
						<img src="@baseAPIDomainUrl/loders/loder.png" class="grid-logo-spinner" style="width: 30px; height: 30px; animation: spin 1s linear infinite;" />
						<div class="grid-loading-text text-dark" style="font-size: 16px;">Loading...</div>

					</div>
					<div class="rowCount" id="rowCount2"></div>
					<div id="GridContainer"></div>
				</div>
				<div id="divNoRecord" class="text-center text-muted" style="display:none;">No Record Found!</div>
					
			</div>
		</div>
	</div>
</div>


<div class="modal fade" id="addTicketStatusModel" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-md">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title btn-heading-title" id="exampleModalLabel"><span class="formType">Add</span> Ticket Status</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body modal-body-font">
				<div class="row">
					<div class="col-md-12">
						<div class="form-group mt-3 position-relative">
							<input type="text"
								   class="form-control floating-input"
								   placeholder="Ticket Status"
								   data-trim-input
								   id="txtTicketStatus" />
							<label class="floating-label" for="txtTicketType">Ticket Status<span class="text-danger">*</span></label>
						</div>
						<span id="spnTicketStatus" style="color:red; display:none;">Please Enter Ticket Status</span>

					</div>
				</div>
				

			</div>
			<div class="modal-footer btn-heading-title">

				<button type="button" class="btn btn-primary" id="btnCreateTicketStatus" style="background-color:#2395c6; color:white;">Save</button>
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
			</div>
		</div>
	</div>
</div>



<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>

<script>
			const EmployeeId = localStorage.getItem("EmployeeId");
			  var Token=localStorage.getItem("authToken");
		   
		let TicketStatusId=0;
		  

		$("#addTypeBtn").click( () => {
			 clearTicketStatusForm();
		  $("#addTicketStatusModel").modal('show');

		})


		function showStatusNoRecord()
		{
		   $("#divNoRecord").show();
			$("#gridTag").hide();
		}

		function hideStatusNoRecord()
		{
		   $("#divNoRecord").hide();
			$("#gridTag").show();
		}

	

		$(() => {
			localStorage.removeItem('ticketStatusLocalstorage');
		
			TicketStatusDataTable();
		});

		function TicketStatusDataTable() {
		 try {
			$('#grid-loader').addClass('d-flex').show();
			 $.ajax({
				type: "GET",
				 url: '@baseUrl/TicketStatusAPI/GetAllTicketStatus',  // Update the URL based on the API you're using
				headers: {
						'Authorization': 'Bearer ' + Token
					},
				 success: function (data) {
					// Check if the API call was successful
					if (data.isSuccess) {
						   hideStatusNoRecord();
						$("#GridContainer").dxDataGrid({
							dataSource: data.data,  // Use the 'data' field from the API response
							stateStoring: { enabled: true, type: 'localStorage', storageKey: 'ticketStatusLocalstorage' },

							columns: [

								{ dataField: 'ticketStatusName', caption: 'Ticket Status Name' ,alignment: 'left'},
									   {
									   dataField: '',
									   caption: '',
									   alignment: 'center',
									   dataType: 'string',
									   format: '',
									   type: 'buttons',
									   width: '50px',
									   cellTemplate: function (container, options) {

													   var buttonElement = $('<div class="d-flex order-actions">' +
															  '<a href="javascript:;" class="edit-action" title="Update Ticket Type">' +
														   '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-eyedropper" viewBox="0 0 16 16">' +
														   '<path d="M13.354.646a1.207 1.207 0 0 0-1.708 0L8.5 3.793l-.646-.647a.5.5 0 1 0-.708.708L8.293 5l-7.147 7.146A.5.5 0 0 0 1 12.5v1.793l-.854.853a.5.5 0 1 0 .708.707L1.707 15H3.5a.5.5 0 0 0 .354-.146L11 7.707l1.146 1.147a.5.5 0 0 0 .708-.708l-.647-.646 3.147-3.146a1.207 1.207 0 0 0 0-1.708zM2 12.707l7-7L10.293 7l-7 7H2z"/>' +
														   '</svg>' +
														   '</a>' +
														   '</div>')
														   .on('dxclick', function () {
																  updateTicketStatus(options.data);
														   }).appendTo(container);

													   // Optional: update title attribute on SVG as well (for tooltip consistency)
														  buttonElement.find('svg').attr('title', 'Update Ticket Status');
									   }
								   },


								   {
									   dataField: '',
									   caption: '',
									   alignment: 'center',
									   dataType: 'string',
									   format: '',
									   type: 'buttons',
									   width: '50px',
									   cellTemplate: function (container, options) {
										   var buttonElement = $('<div class="d-flex order-actions">' +
											   '<a href="javascript:;" class="delete-action" title="Delete Ticket Type">' +
											   '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash-fill" viewBox="0 0 16 16">' +
											   '<path d="M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5M8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5m3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0"/>' +
											   '</svg>' +
											   '</a>' +
											   '</div>')
											   .on('dxclick', function () {
												   deleteTicketStatus(options.data);
											   }).appendTo(container);

										   var svgElement = buttonElement.find('svg');  // Accessing the svg element directly
										   svgElement.attr('title', 'Delete Ticket Status');
									   }
								   }
								
							],
							columnsAutoWidth: true,
							wordWrapEnabled: false,
							rowAlternationEnabled: false,
							showBorders: true,
							grouping: { autoExpandAll: true },
							paging: { pageSize: 10 },
							pager: { showPageSizeSelector: true, allowedPageSizes: [10, 25, 50, 100] },
							headerFilter: { visible: true },
							filterRow: { visible: true, applyFilter: "auto" },
							allowColumnResizing: true,
							groupPanel: { visible: true },
							searchPanel: { visible: true, width: 240, placeholder: "Search..." },
							allowColumnReordering: true,
							columnFixing: { enabled: false },
							
							onContentReady(e) {
								   $('#rowCount1').html('Total Records: ' + $("#GridContainer").dxDataGrid('instance').totalCount());
							}
						}).dxDataGrid('instance');
					} else {
						   showStatusNoRecord();
						// Handle failure case

					}
						  $('#grid-loader').removeClass('d-flex').hide();

				},
				error: function (xhr, status, error) {
					  $('#grid-loader').removeClass('d-flex').hide();

					// Handle any errors that occurred during the AJAX request
					console.error("AJAX Error: " + status + " - " + error);

				}
			});

		  } catch (e)
		  {
			   console.error("Error in TicketPriorityDataTable:", e);
			   $('#grid-loader').removeClass('d-flex').hide();
			   hideStatusNoRecord();
		  }
	}

		function clearTicketStatusForm()
		{
				TicketStatusId=0
			$('#txtTicketStatus').val("");
			$("#btnCreateTicketStatus").prop("disabled", false);
			$('.formType').text('Add');
			$('#btnCreateTicketStatus').text('Save');
			   $('#spnTicketStatus').hide();
		}


		$('#btnCreateTicketStatus').click(function () {
			$("#btnCreateTicketStatus").prop("disabled", true);
			let isValid = true;

			const ticketStatus = $('#txtTicketStatus').val();

			// Validation
			if (ticketStatus === '') {
				$('#spnTicketStatus').show();
				isValid = false;
			} else {
				$('#spnTicketStatus').hide();
			}
			
			if (!isValid) {
				$("#btnCreateTicketStatus").prop("disabled", false);
				return;
			}

			const data = {
				ticketStatusId:TicketStatusId==0?0:TicketStatusId,
				ticketStatusName: ticketStatus
				
			};

			 typeUrl=TicketStatusId==0?'@baseUrl/TicketStatusAPI/CreateTicketStatus':'@baseUrl/TicketStatusAPI/UpdateTicketStatus';
			 TypeMethod=TicketStatusId==0?"POST":"PUT";
			$.ajax({
				url: typeUrl,
				type: TypeMethod,
				contentType: 'application/json',
				headers: {
							'Authorization': 'Bearer ' + Token
						},
				data: JSON.stringify(data),
				success: function (response) {
					if(response.isSuccess)
					{
					  round_success_noti(response.responseMessage);
					}
					else
					{
						round_error_noti(response.responseMessage)
					}

					$('#addTicketStatusModel').modal('hide');
					TicketStatusDataTable(); // optional: reload list
				},
				error: function (xhr, status, error) {
					$("#btnCreateTicketStatus").prop("disabled", false);
					round_error_noti("Error while creating ticket status");
				}



			});
		});


		function updateTicketStatus(data) {
				clearTicketStatusForm();
			$('#txtTicketStatus').val(data.ticketStatusName||"");

			$('.formType').text('Update');
			$('#btnCreateTicketStatus').text('Update');
			TicketStatusId = data.ticketStatusId;

			// Show the modal
			$('#addTicketStatusModel').modal('show');
		}

		   function deleteTicketStatus(data)
		   {
			  if (!confirm("Are you sure you want to delete this ticket type?"))
			  {
				   return; // Cancel the delete operation
			   }

			   var deleteObj = {
				   id: data.ticketStatusId,
				   deletedBy: EmployeeId // Set this if you have a logged-in user ID
			   };

			   $.ajax({
				  url: '@baseUrl/TicketStatusAPI/DeleteTicketStatus',
				   type: 'DELETE',
				   contentType: 'application/json',
				   headers: {
					   'Authorization': 'Bearer ' + Token
				   },
				   data: JSON.stringify(deleteObj),
				   success: function (response) {
					   if(response.isSuccess)
					   {
						 round_success_noti(response.responseMessage);
					   }
					   else
					   {
						   round_error_noti(response.responseMessage)
					   }
					TicketStatusDataTable();
				   },
				   error: function (error) {
						  console.log(error);
				   }
			   });
		   }

		   $(document).ready(function () {
			   // Optional: Clear form on modal close
			  $('#addTicketStatusModel').on('hidden.bs.modal', function () {
				 clearTicketStatusForm();
			  });
		   });

	

</script>