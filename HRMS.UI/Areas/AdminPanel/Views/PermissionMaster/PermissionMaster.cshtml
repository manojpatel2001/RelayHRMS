@inject IConfiguration Configuration
@{
	ViewData["Title"] = "Manage Permission";
	Layout = "~/Areas/AdminPanel/Views/Shared/_AdminLayout.cshtml";
	string baseUrl = Configuration["BaseUrlSettings:baseUrl"];
	string UIBaseUrlLayout = Configuration["UIBaseUrlSettings:baseUrl"];
	var uriAPI = new Uri(baseUrl);
	string baseAPIDomainUrl = $"{uriAPI.Scheme}://{uriAPI.Host}:{uriAPI.Port}";
}


<style>
	.dx-datagrid-search-panel .dx-texteditor-input-container {
		display: flex;
		flex-direction: row-reverse;
		align-items: center;
	}

</style>

<div class="card">
	<div class="card-header bg-transparent ml-0 py-0">
		<div class="row ">
			<div class="col-6 ">
				<h6 class="pt-2 mb-0">
					Permission Master
				</h6>
			</div>

			<div class="col-6 d-flex justify-content-end align-items-center">
				<div class="font-22 pl-2" style="color:#32393f; cursor:pointer;">
					@* 					<i class="fadeIn animated bx bx-refresh" id="refreshData" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Refresh Data"></i>
 *@				
                    <button id="addPermissionMaster"
							type="button"
							class="btn  rounded-1 "
							style="background-color:#2395c6; color:white;">
						Add
					</button>
				</div>
			</div>
		</div>
	</div>
	<div class="card-body">

		<div class="row">
			<div class="col-md-12">
				<div class="form-group gridTag">

					<div class="grid-wrapper " style="position: relative; ">
						<div id="grid-loader" class="grid-loader justify-content-center align-items-center flex-column "
							 style="display: none;  inset: 0; background: rgba(255,255,255,0.6); z-index: 10; ">
							<img src="@baseAPIDomainUrl/loders/loder.png" class="grid-logo-spinner" style="width: 30px; height: 30px; animation: spin 1s linear infinite;" />
							<div class="grid-loading-text text-dark" style="font-size: 16px;">Loading...</div>

						</div>
						<div id="rowCountPermissionMaster"></div>
						<div id="gridContainerPermissionMaster"></div>
					
					</div>

				</div>
				<div id="spnNoRecord" style="display:none;">No Record Found!</div>

			</div>
		</div>
	</div>

</div>


<div class="modal fade" id="addPermissionMasterModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-lg">
		<div class="modal-content">
			<div class="modal-header">
				<h6 class="modal-title btn-heading-title" id="exampleModalLabel">
					<span class="formType">Add</span> Permission Master
				</h6>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body modal-body-font">


				<div class="row">
				
					<div class="col-md-6 mb-3">
						<div class="form-group  position-relative">
							<input type="text" class="form-control floating-input" id="txtPermissionName" placeholder="Permission Name">
							<label class="floating-label" for="txtPermissionName">Permission Name<span class="required-star">*</span></label>
						</div>
						<span id="spnPermissionName" style="color:red; display:none;">Please Enter Permission Name</span>

					</div>

				
					<div class="col-md-6 mb-3">
						<div class="form-group  position-relative">
							<input type="text" class="form-control floating-input" id="txtSlug" placeholder="Slug">
							<label class="floating-label" for="txtSlug">Slug<span class="required-star">*</span></label>
						</div>
						<span id="spnSlug" style="color:red; display:none;">Please Enter Slug</span>

					</div>

				

					<div class="col-md-6 mb-3">
						<div class="form-group  position-relative">
							<input type="text" class="form-control floating-input" id="txtPermissionUrl" placeholder="Permission Url ">
							<label class="floating-label" for="txtPermissionUrl">Permission Url</label>

						</div>
					</div>
					<div class="col-md-6 mb-3 ">
						<div class="form-group position-relative">
							<input type="text" class="form-control floating-input" id="txtDescription" placeholder="Description">
							<label class="floating-label" for="txtDescription">Description<span class="required-star">*</span></label>
						</div>
						<span id="spnDescription" style="color:red; display:none;">Please Enter Description</span>

					</div>

					<div class="col-md-6 mb-3">
						<div class="form-group  position-relative">
							<input type="text" class="form-control floating-input" id="txtGroupName" placeholder="Group Name">
							<label class="floating-label" for="txtGroupName">Group Name<span class="required-star">*</span></label>
						</div>
						<span id="spnGroupName" style="color:red; display:none;">Please Enter Group Name</span>

					</div>

					<div class="col-md-6 mb-3">
						<div class="form-group mt-3 position-relative">
							<select class="form-select floating-input" id="ddlPemissionRoleType">
								<option value="0">Select</option>
								<!-- Add your options here -->
							</select>
							<label class="floating-label" for="ddlRole">Permission Role Type<span class="required-star">*</span></label>
						</div>
						<span id="spnPermissionRoleType" style="color:red; display:none;">Please Enter Permission Role Type</span>

					</div>

					<div class="col-md-6 mb-3">
						<div class="form-group  position-relative">
							<select class="form-select floating-input" id="drpPermissionType">
								<option value="Role">Role</option>
								<option value="User">User</option>
							</select>
							<label class="floating-label" for="drpPermissionType">Permission Type</label>

						</div>

					</div>
					
				</div>

				<div class="modal-footer btn-heading-title">
					<button type="button" class="btn btn-primary" id="btnAddPermissionMaster" style="background-color:#2395c6; color:white;">Save</button>
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
				</div>
			</div>
		</div>
	</div>
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>


<script>

	const savedCompany = localStorage.getItem('selectedCompany');
	var companyDetails = JSON.parse(savedCompany);
	const CompanyId=companyDetails.CompanyId;


	let PermissionId=0;
	$("#addPermissionMaster").click( () => {
		resetPermissionFormFields();
		 $(".formType").text("Add");
			$("#btnAddPermissionMaster").text("Save");
	  $("#addPermissionMasterModal").modal('show');

	})

		async function loadRoleOptions() {
		try {
			const response = await fetch('@baseUrl/RoleAPI/GetAllRoles', {
				method: 'GET',
				headers: {
					'Authorization': 'Bearer ' + localStorage.getItem("authToken"),
					'Content-Type': 'application/json'
				}
			});

			const data = await response.json();

			if (data.isSuccess) {

				 var dropdowns = $('#ddlPemissionRoleType');
							dropdowns.empty();
							dropdowns.append(
								$('<option>', {
								value: '',
								text: 'Select',
								selected: true,
								disabled: true
								})
							);

							$.each(data.data, function(index, role) {
									dropdowns.append($('<option >', {
									value: role.id,
									text: role.name
								}));
							});
			}

		} catch (error) {
			console.error('Fetch error:', error);
		}
	}

	
	 $(document).ready(function() {
		LoadPermissionMasterTable();
		loadRoleOptions();
		// Function to validate form fields
		  function validatePermissionForm() {
			let isValid = true;

			const fields = [
				{ id: '#txtPermissionName', error: '#spnPermissionName' },
				{ id: '#txtSlug', error: '#spnSlug' },
				{ id: '#txtGroupName', error: '#spnGroupName' },
				{ id: '#txtDescription', error: '#spnDescription' }
				
			];

			fields.forEach(field => {
				const value = $(field.id).val().trim();
				if (value === '') {
					$(field.error).show();
					isValid = false;
				} else {
					$(field.error).hide();
				}
			});

			return isValid;
		  }
		$('#btnAddPermissionMaster').click(function () {
			$('#btnAddPermissionMaster').prop("disabled", true);
			
			if (!validatePermissionForm()||!$('#ddlPemissionRoleType').val()) 
			{
				$('#spnPermissionRoleType').show();
				$('#btnAddPermissionMaster').prop("disabled", false);
				return;
			}
			else{
				$('#spnPermissionRoleType').hide();
			}
			
			const getValueOrNull = id => {
				const val = $(id).val().trim();
				return val === '' ? null : val;
			};

			
			const permissionMaster = {
				PermissionId: PermissionId || 0,
				PermissionName: getValueOrNull('#txtPermissionName'),
				Slug: getValueOrNull('#txtSlug'),
				Description: getValueOrNull('#txtDescription'),
				PermissionUrl: getValueOrNull('#txtPermissionUrl'),
				GroupName: getValueOrNull('#txtGroupName'),
				PermissionType:$('#drpPermissionType').val(),
				PermissionRoleType:$('#ddlPemissionRoleType').val()
			};

			const apiConfig = {
				url: PermissionId === 0
					? '@baseUrl/PermissionAPI/CreatePermission'
					: '@baseUrl/PermissionAPI/UpdatePermission',
				method: PermissionId === 0 ? 'POST' : 'PUT'
			};

			$.ajax({
				url: apiConfig.url,
				method: apiConfig.method,
				headers: {
					'Authorization': 'Bearer ' + localStorage.getItem("authToken"),
					'Content-Type': 'application/json'
				},
				data: JSON.stringify(permissionMaster),
				success: function (response) {
					if (response.isSuccess) {
						round_success_noti(response.responseMessage);
						LoadPermissionMasterTable();
						$('#addPermissionMasterModal').modal('hide');
					} else {
						round_error_noti(response.responseMessage);
					}
					$('#btnAddPermissionMaster').prop("disabled", false);
				},
				error: function (error) {
					console.error('Error saving Permission Master:', error);
					round_error_noti('An error occurred while saving the Permission Master.');
					$('#btnAddPermissionMaster').prop("disabled", false);
				}
			});
		});


	 });

    function LoadPermissionMasterTable() {
		$('#grid-loader').addClass('d-flex').show();
		$.ajax({
			type: "GET",
			url: '@baseUrl/PermissionAPI/GetAllPermissions',
			 headers: {
					'Authorization': 'Bearer ' + localStorage.getItem("authToken"),
					'Content-Type': 'application/json'
				},
			success: function (data) {
				if (data.isSuccess) {
					$("#spnNoRecord").hide();
					$("#gridTag").show();

					$("#gridContainerPermissionMaster").dxDataGrid({
						dataSource: data.data,
						rowHeight: 40,
						width: '100%',
						columns: [
							{ dataField: 'permissionName', caption: 'Permission Name'  },
							{ dataField: 'slug', caption: 'Slug' },
							{ dataField: 'description', caption: 'Description'  },
							{ dataField: 'permissionUrl', caption: 'URL'  },
							{ dataField: 'groupName', caption: 'Group Name' },
							{ dataField: 'permissionType', caption: 'Permission Type'},
							{ dataField: 'permissionRoleTypeName', caption: 'Permission Role Type'},
							{
									dataField: '',
									caption: '',
									alignment: 'center',
									width: '50px',
									
									cellTemplate: function(container, options) {
										var buttonElement = $('<div class="d-flex order-actions">' +
											'<a href="javascript:;" class="edit-action" title="Edit Employee">' +
											'<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-eyedropper" viewBox="0 0 16 16">' +
											'<path d="M13.354.646a1.207 1.207 0 0 0-1.708 0L8.5 3.793l-.646-.647a.5.5 0 1 0-.708.708L8.293 5l-7.147 7.146A.5.5 0 0 0 1 12.5v1.793l-.854.853a.5.5 0 1 0 .708.707L1.707 15H3.5a.5.5 0 0 0 .354-.146L11 7.707l1.146 1.147a.5.5 0 0 0 .708-.708l-.647-.646 3.147-3.146a1.207 1.207 0 0 0 0-1.708zM2 12.707l7-7L10.293 7l-7 7H2z"/>' +
											'</svg>' +
											'</a>' +
											'</div>')
											.on('dxclick', function() {
												editPermissionMaster(options.data);
											}).appendTo(container);
									}
								},
								{
									dataField: '',
									caption: '',
									alignment: 'center',
									width: '50px',
									
									cellTemplate: function(container, options) {
										var buttonElement = $('<div class="d-flex order-actions">' +
											'<a href="javascript:;" class="delete-action" title="Delete Employee">' +
											'<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash-fill" viewBox="0 0 16 16">' +
											'<path d="M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5M8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5m3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0"/>' +
											'</svg>' +
											'</a>' +
											'</div>')
											.on('dxclick', function() {
												deletePermissionMaster(options.data);
											}).appendTo(container);
									}
								}
							
						],
						columnsAutoWidth: false,
						wordWrapEnabled: false,
						showBorders: true,
						rowAlternationEnabled: false,
						grouping: { autoExpandAll: true },
						paging: { pageSize: 10 },
						pager: {
							showPageSizeSelector: true,
							allowedPageSizes: [10, 25, 50, 100]
						},
						headerFilter: { visible: true },
						filterRow: { visible: true, applyFilter: "auto" },
						allowColumnResizing: true,
						
						searchPanel: { visible: true, width: 240, placeholder: "Search..." },
						columnFixing: { enabled: true },
						scrolling: {
							mode: "standard",
							useNative: false,
							scrollByContent: true,
							scrollByThumb: true
						},
						onContentReady: function (e) {
						  $('#grid-loader').removeClass('d-flex').hide();

							$('#rowCountPermissionMaster').html('Total Records: ' + e.component.totalCount());
						}
					});
				} else {

					 $('#grid-loader').removeClass('d-flex').hide();
					$("#spnNoRecord").show();
					$("#gridTag").hide();

				}
			},
			error: function (xhr, status, error) {

					 $('#grid-loader').removeClass('d-flex').hide();
				console.error("AJAX Error:", status, error);
			}
		});
	}

    function editPermissionMaster(permission) {
		resetPermissionFormFields(); // Clear any previous values

		// Update UI
		$(".formType").text("Update");
		$("#btnAddPermissionMaster").text("Update");

		// Set global ID if needed
		PermissionId = permission.permissionId;

		// Populate form fields
		$('#txtPermissionName').val(permission.permissionName ||'');
		$('#txtSlug').val(permission.slug);
		$('#txtPermissionUrl').val(permission.permissionUrl||'');
		$('#txtDescription').val(permission.description ||'');
		$('#txtGroupName').val(permission.groupName ||'');
		$('#drpPermissionType').val(permission.permissionType ||'');
		$('#ddlPemissionRoleType').val(permission.permissionRoleType ||'');

		// Show the modal
		$('#addPermissionMasterModal').modal('show');
	}
	function resetPermissionFormFields() {
		$('#btnAddPermissionMaster').prop("disabled", false);

		// Reset the form inputs
		PermissionId = 0;
		$('#txtPermissionName').val('');
		$('#txtSlug').val('');
		$('#txtPermissionUrl').val('');
		$('#txtDescription').val('');
		$('#txtGroupName').val('');
		$('#ddlPemissionRoleType').val('');
		// Hide validation messages
		$('#spnPermissionName').hide();
		$('#spnPermissionRoleType').hide();
		$('#spnSlug').hide();
		$('#spnDescription').hide();
		$('#spnGroupName').hide();

		// Reset UI labels
		$(".formType").text("Add");
		$("#btnAddPermissionMaster").text("Save");
	}

	  function  deletePermissionMaster(data)
	  {
		if (!confirm("Are you sure you want to delete this permission?")) {
				return; // Cancel the delete operation
	    }

			var deleteObj = {
				   id:data.permissionId,
				deletedBy: null 
			};
			$.ajax({
			url: '@baseUrl/PermissionAPI/DeletePermission',
				type: 'DELETE',
	             headers: {
						'Authorization': 'Bearer ' + localStorage.getItem("authToken"),
						'Content-Type': 'application/json'
					},				data: JSON.stringify(deleteObj),
				success: function (response) {
					if (response.isSuccess) {
						round_success_noti(response.responseMessage);
					   LoadPermissionMasterTable();
					} else {
						round_error_noti(response.responseMessage);
					}

				},
				error: function (error) {
					console.log('Error deleting permission!');
				}
			});
	  }
</script>