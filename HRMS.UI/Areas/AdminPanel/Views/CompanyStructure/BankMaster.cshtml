@inject IConfiguration Configuration
@{
	ViewData["Title"] = "Bank Master";
	Layout = "~/Areas/AdminPanel/Views/Shared/_AdminLayout.cshtml";
	string baseUrl = Configuration["BaseUrlSettings:baseUrl"];
	string UIBaseUrlLayout = Configuration["UIBaseUrlSettings:baseUrl"];
	var uriAPI = new Uri(baseUrl);
	string baseAPIDomainUrl = $"{uriAPI.Scheme}://{uriAPI.Host}:{uriAPI.Port}";
}

<div class="card">
	<div class="card-header bg-transparent ml-0 py-0">
		<div class="row">
			<div class="col-6">
				<h6 class="pt-2 mb-0">
					Bank Master
				</h6>
			</div>

			<div class="col-6 d-flex justify-content-end align-items-center">
				<div class="font-22 pl-2" style="color:#32393f; cursor:pointer;">
					<button id="addBank"
							type="button"
							class="btn mr-1 rounded-1"
							style="background-color:#2395c6; color:white;">
						Add Bank
					</button>
				</div>
			</div>
		</div>
	</div>
	<div class="card-body">
		
		<div class="row">
			<div class="col-md-12">
				<div class="form-group">

					<div class="form-group " id="tagBankGrid">

						<div class="grid-wrapper " style="position: relative; ">
							<div id="grid-loader" class="grid-loader justify-content-center align-items-center flex-column "
								 style="display: none;  inset: 0; background: rgba(255,255,255,0.6); z-index: 10; ">
								<img src="@baseAPIDomainUrl/loders/loder.png" class="grid-logo-spinner" style="width: 30px; height: 30px; animation: spin 1s linear infinite;" />
								<div class="grid-loading-text text-dark" style="font-size: 16px;">Loading...</div>

							</div>
							<div class="rowCount" id="rowCount1"></div>
							<div id="gridContainerBank"></div>

						</div>

					</div>
					<div id="spnNoRecord" style="display:none;">No Record Found!</div>

					

				</div>
			</div>
		</div>
	</div>
</div>


<div class="modal fade" id="addBankModel" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-lg">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title btn-heading-title" id="exampleModalLabel"><span class="formType">Create</span> Bank</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body modal-body-font">
				<div class="row">
					<div class="col-md-6">
						<div class="form-group mt-3 position-relative">
							<input type="text"
								   class="form-control floating-input"
								   placeholder="Bank Name"
								   data-uppercase-only
								   id="txtBankName" />
							<label class="floating-label" for="txtBankName">Bank Name<span class="text-danger">*</span></label>
						</div>
						<span id="spnBankName" style="color:red; display:none;">Please Enter Bank Name</span>

					</div>
					<div class="col-md-6">
						<div class="form-group mt-3 position-relative">
							<input type="text"
								   class="form-control floating-input"
								   placeholder="BankCode"
								   data-trim-input
								   id="txtBankCode" />
							<label class="floating-label" for="txtBankCode">Bank Code<span class="text-danger">*</span></label>
						</div>
						<span id="spnBankCode" style="color:red; display:none;">Please Enter Bank Code</span>

					</div>

				</div>

				<div class="row">

					<div class="col-md-6">
						<div class="form-group mt-3 position-relative">
							<input type="text"
								   class="form-control floating-input"
								   placeholder="Branch Name"
								   data-letters-only
								   id="txtBranchName" />
							<label class="floating-label" for="txtBranchName">Branch Name<span class="text-danger">*</span></label>
						</div>
						<span id="spnBranchName" style="color:red; display:none;">Please Enter Branch Name</span>

					</div>

					<div class="col-md-6">
						<div class="form-group mt-3 position-relative">
							<input type="text"
								   class="form-control floating-input"
								   placeholder="Account No"
								   id="txtAccountNo"
								   data-integer-only />
							<label class="floating-label" for="txtAccountNo">AccountNo<span class="text-danger">*</span></label>
						</div>
						<span id="spnAccountNo" style="color:red; display:none;">Please Enter Account No</span>

					</div>


				</div>


				<div class="row">

					<div class="col-md-6">
						<div class="form-group mt-3 position-relative">
							<textarea class="form-control floating-input"
									  placeholder="Address"
									  data-trim-input
									  id="txtAddress"></textarea>
							<label class="floating-label" for="txtAddress">Address</label>

						</div>
					</div>

					<div class="col-md-6">
						<div class="form-group mt-3 position-relative">
							<input type="text"
								   class="form-control floating-input"
								   placeholder="City"
								   data-trim-input
								   id="txtCity" />
							<label class="floating-label" for="txtCity">City</label>

						</div>
					</div>

				</div>

				<div class="row">

					<div class="col-md-6">
						<div class="form-group mt-3 position-relative">
							<input type="text"
								   class="form-control floating-input"
								   placeholder="Bank BSR Code"
								   data-trim-input
								   id="txtBankBSRCode" />
							<label class="floating-label" for="txtBankBSRCode">Bank BSR Code</label>

						</div>
					</div>

					<div class="col-md-6">
						<div class="form-group mt-3 position-relative">
							<label>Default Bank</label>
							<input type="checkbox"
								   class="form-control-input"
								   placeholder=""
								   id="txtDefaultBank" />
						</div>

					</div>

				</div>

			</div>
			<div class="modal-footer btn-heading-title">
				<button type="button" class="btn btn-primary" id="btnCreateBank" style="background-color:#2395c6; color:white;">Create</button>
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
			</div>
		</div>
	</div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script>
	let BankMasterId=0;

	$("#addBank").click( () => {
		$("#btnCreateBank").prop("disabled", false);
		$('.formType').text('Create');
		$('#btnCreateBank').text('Create');

		$("#addBankModel").modal('show');

	})

	$(() => {
		 localStorage.removeItem('bankMasterGridStorage');
		loadBankMasterDataTable();
	});

	

	function loadBankMasterDataTable() {
		$('#grid-loader').addClass('d-flex').show();
		$.ajax({
			type: "GET",
			url: '@baseUrl/BankMasterAPI/GetAllBankMaster',
			success: function (response) {
				if (response.isSuccess && response.data) {
					let bankData = Array.isArray(response.data) ? response.data : [response.data]; // Ensure array
						$("#spnNoRecord").hide();
					   $("#tagBankGrid").show();

					$("#gridContainerBank").dxDataGrid({
						dataSource: bankData,
						keyExpr: "bankMasterId",
						stateStoring: {
							enabled: true,
							type: 'localStorage',
							storageKey: 'bankMasterGridStorage'
						},

						columns: [
							{ dataField: 'bankName', caption: 'Bank Name', alignment: 'center' },
							{ dataField: 'bankCode', caption: 'Bank Code', alignment: 'center' },
							{ dataField: 'branchName', caption: 'Branch Name', alignment: 'center' },
							{ dataField: 'accountNo', caption: 'Account No', alignment: 'center' },
							{ dataField: 'address', caption: 'Address', alignment: 'center' },
							{ dataField: 'city', caption: 'City', alignment: 'center' },
							{ dataField: 'bankBSRCode', caption: 'BSR Code', alignment: 'center' },
							{
								dataField: 'isDefaultBank',
								caption: 'Default Bank',
								alignment: 'center',
								calculateCellValue: d => d.isDefaultBank ? "Yes" : "No"
							},
							// Edit button
								{
									dataField: '',
									caption: '',
									alignment: 'center',
									dataType: 'string',
									format: '',
									type: 'buttons',
									width: '50px',
									cellTemplate: function (container, options) {

										var buttonElement = $('<div class="d-flex order-actions">' +
											'<a href="javascript:;" class="edit-action" title="Update Bank Master">' +
											'<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-eyedropper" viewBox="0 0 16 16">' +
											'<path d="M13.354.646a1.207 1.207 0 0 0-1.708 0L8.5 3.793l-.646-.647a.5.5 0 1 0-.708.708L8.293 5l-7.147 7.146A.5.5 0 0 0 1 12.5v1.793l-.854.853a.5.5 0 1 0 .708.707L1.707 15H3.5a.5.5 0 0 0 .354-.146L11 7.707l1.146 1.147a.5.5 0 0 0 .708-.708l-.647-.646 3.147-3.146a1.207 1.207 0 0 0 0-1.708zM2 12.707l7-7L10.293 7l-7 7H2z"/>' +
											'</svg>' +
											'</a>' +
											'</div>')
											.on('dxclick', function () {
												updateBankMaster(options.data);
											}).appendTo(container);

										// Optional: update title attribute on SVG as well (for tooltip consistency)
										buttonElement.find('svg').attr('title', 'Update Bank Master');
									}
								},

							// Delete button
							{
								dataField: '',
								caption: '',
								alignment: 'center',
								width: 50,
								type: 'buttons',
								cellTemplate: function (container, options)
								{

									var buttonElement = $('<div class="d-flex order-actions">' +
										 '<a href="javascript:;" class="delete-action" title="Delete Bank Master">' +
										'<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash-fill" viewBox="0 0 16 16">' +
										'<path d="M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5M8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5m3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0"/>' +
										'</svg>' +
										'</a>' +
										'</div>')
										.on('dxclick', function () {
											deleteBankMaster(options.data);
										}).appendTo(container);

									var svgElement = buttonElement.find('svg');  // Accessing the svg element directly

									svgElement.attr('title', 'Delete Bank Master');
								}
							}


						],

						showBorders: true,
						columnsAutoWidth: true,
						wordWrapEnabled: false,
						rowAlternationEnabled: false,
						paging: { pageSize: 10 },
						pager: {
							showPageSizeSelector: true,
							allowedPageSizes: [10, 25, 50, 100]
						},
						headerFilter: { visible: true },
						filterRow: { visible: true, applyFilter: "auto" },
						allowColumnResizing: true,
						groupPanel: { visible: true },
						searchPanel: { visible: true, width: 240, placeholder: "Search..." },
						allowColumnReordering: true,
						columnFixing: { enabled: false },

						onExporting: function (e) {
							e.component.beginUpdate();
							e.component.columnOption("Button", "visible", false);
						},
						onExported: function (e) {
							e.component.columnOption("Button", "visible", true);
							e.component.endUpdate();
						},
						onCellPrepared: function (e) {
							if (e.rowType === "header" || e.rowType === "group") {
								e.cellElement.css("text-align", "center");
								if (e.rowType === "header") {
									e.cellElement.css("font-weight", "bold");
								}
							}
						},
						onContentReady(e) {
							$('.rowCount').html('Total Records: ' + e.component.totalCount());
								$('#grid-loader').removeClass('d-flex').hide();
								
						}
					}).dxDataGrid('instance');
				}
				else{
						$('#grid-loader').removeClass('d-flex').hide();
						$("#spnNoRecord").show();
						$("#tagBankGrid").hide();
				}
			}
		});
	}

	function clearBankForm() {
		$('#txtBankName, #txtBankCode, #txtBranchName, #txtAccountNo, #txtAddress, #txtCity, #txtBankBSRCode').val('');
		$('#txtDefaultBank').prop('checked', false);
		BankMasterId=0;
		$('#spnBankName, #spnBankCode, #spnBranchName, #spnAccountNo').hide();
	}

	$('#btnCreateBank').click(function () {
		$("#btnCreateBank").prop("disabled", true);
		let isValid = true;

		const bankName = $('#txtBankName').val().trim();
		const bankCode = $('#txtBankCode').val().trim();
		const branchName = $('#txtBranchName').val().trim();
		const accountNo = $('#txtAccountNo').val().trim();
		const address = $('#txtAddress').val().trim();
		const city = $('#txtCity').val().trim();
		const bsrCode = $('#txtBankBSRCode').val().trim();
		const defaultBank = $('#txtDefaultBank').is(':checked');
		// Validation
		if (bankName === '') {
			$('#spnBankName').show();
			isValid = false;
		} else {
			$('#spnBankName').hide();
		}

		if (bankCode === '') {
			$('#spnBankCode').show();
			isValid = false;
		} else {
			$('#spnBankCode').hide();
		}

		if (branchName === '') {
			$('#spnBranchName').show();
			isValid = false;
		} else {
			$('#spnBranchName').hide();
		}

		if (accountNo === '') {
			$('#spnAccountNo').show();
			isValid = false;
		} else {
			$('#spnAccountNo').hide();
		}

		if (!isValid) {
			$("#btnCreateBank").prop("disabled", false);
			return;
		}

		const formData = {
			bankMasterId:BankMasterId==0?0:BankMasterId,
			bankName: bankName,
			bankCode: bankCode,
			branchName: branchName,
			accountNo: accountNo,
			address: address,
			city: city,
			bankBSRCode: bsrCode,
			isDefaultBank: defaultBank,
			createdBy:BankMasterId==0?null:null,
			updatedBy:BankMasterId==0?null:null
		};

			 $.ajax({
			url: '@baseUrl/BankMasterAPI/CreateBankMaster',
			method: 'POST',
			contentType: 'application/json',
			data: JSON.stringify(formData),
			success: function (response) {
				if (response.isSuccess) {
					round_success_noti(response.responseMessage);
					$('#addBankModel').modal('hide');
					clearBankForm();
					loadBankMasterDataTable();
				} else {
					round_error_noti(response.responseMessage);
				}
				$("#btnCreateBank").prop("disabled", false);
			},
			error: function () {
				round_error_noti('Unable to create bank.');
			},
			complete: function () {
				$("#btnCreateBank").prop("disabled", false);
			}
		});

	 });

	 function updateBankMaster(data) {
		$('#txtBankName').val(data.bankName);
		$('#txtBankCode').val(data.bankCode);
		$('#txtBranchName').val(data.branchName);
		$('#txtAccountNo').val(data.accountNo);
		$('#txtAddress').val(data.address);
		$('#txtCity').val(data.city);
		$('#txtBankBSRCode').val(data.bankBSRCode);
		$('#txtDefaultBank').prop('checked', data.isDefaultBank);

		BankMasterId=data.bankMasterId;
		$('.formType').text('Update');
		$('#btnCreateBank').text('Update');
		$("#btnCreateBank").prop("disabled", false);
		// Show modal
		$('#addBankModel').modal('show');


	}


	function deleteBankMaster(data)
		  {
			 if (!confirm("Are you sure you want to delete this bank?"))
			 {
				  return; // Cancel the delete operation
			 }

			  var deleteObj = {
				  id: data.bankMasterId,
				  deletedBy: null
			  };

			  $.ajax({
				  url: '@baseUrl/BankMasterAPI/DeleteBankMaster',
				  type: 'DELETE',
				  contentType: 'application/json',
				  data: JSON.stringify(deleteObj),
				  success: function (response) {
						if(response.isSuccess)
					  {
						round_success_noti(response.responseMessage);
					  }
					  else
					  {
						  round_error_noti(response.responseMessage)
					  }
					  loadBankMasterDataTable();
				  },
				  error: function (error) {
						 alert('Error deleting bank!');
				  }
			  });
		  }

		  $(document).ready(function () {
			  // Optional: Clear form on modal close
				$('#addBankModel').on('hidden.bs.modal', function () {
						clearBankForm();
			  });
		  });

</script>